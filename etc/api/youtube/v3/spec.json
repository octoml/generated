{
  "kind": "discovery#restDescription",
  "etag": null,
  "discoveryVersion": "v1",
  "id": "youtube:v3",
  "name": "youtube",
  "canonicalName": "YouTube",
  "fullyEncodeReservedExpansion": true,
  "version": "v3",
  "revision": "20200528",
  "title": "YouTube Data API v3",
  "description": "The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "documentationLink": "https://developers.google.com/youtube/",
  "protocol": "rest",
  "baseUrl": "https://www.googleapis.com/",
  "basePath": "",
  "rootUrl": "https://www.googleapis.com/",
  "servicePath": "",
  "batchPath": "batch/youtube",
  "version_module": null,
  "packagePath": null,
  "labels": null,
  "features": null,
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "repeated": false
    },
    "access_token": {
      "description": "OAuth access token.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "repeated": false
    },
    "callback": {
      "description": "JSONP",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "required": false,
      "type": "boolean",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/youtube": {
          "description": "Manage your YouTube account"
        },
        "https://www.googleapis.com/auth/youtube.channel-memberships.creator": {
          "description": "See a list of your current active channel members, their current level, and when they became a member"
        },
        "https://www.googleapis.com/auth/youtube.force-ssl": {
          "description": "See, edit, and permanently delete your YouTube videos, ratings, comments and captions"
        },
        "https://www.googleapis.com/auth/youtube.readonly": {
          "description": "View your YouTube account"
        },
        "https://www.googleapis.com/auth/youtube.upload": {
          "description": "Manage your YouTube videos"
        },
        "https://www.googleapis.com/auth/youtubepartner": {
          "description": "View and manage your assets and associated content on YouTube"
        },
        "https://www.googleapis.com/auth/youtubepartner-channel-audit": {
          "description": "View private information of your YouTube channel relevant during the audit process with a YouTube partner"
        }
      }
    }
  },
  "schemas": {
    "AccessPolicy": {
      "id": "AccessPolicy",
      "description": "Rights management policy for YouTube resources.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "allowed": {
          "description": "The value of <code>allowed</code> indicates whether the access to the\npolicy is allowed or denied by default.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "exception": {
          "description": "A list of region codes that identify countries where the default policy do\nnot apply.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Activity": {
      "id": "Activity",
      "description": "An <code><strong>activity</strong></code> resource contains\ninformation about an action that a particular channel, or user, has\ntaken on YouTube.The actions reported in activity feeds include rating\na video, sharing a video, marking a video as a favorite, commenting on\na video, uploading a video, and so forth. Each <code>activity</code>\nresource identifies the type of action, the channel associated with\nthe action, and the resource(s) associated with the action, such as\nthe video that was rated or uploaded.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "contentDetails": {
          "description": "The <code>contentDetails</code> object contains information about the\ncontent associated with the activity. For example, if the\n<code>snippet.type</code> value is <code>videoRated</code>, then the\n<code>contentDetails</code> object's content identifies the rated video.",
          "$ref": "ActivityContentDetails"
        },
        "etag": {
          "description": "Etag of this resource",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the activity.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#activity\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the\nactivity, including the activity's type and group ID.",
          "$ref": "ActivitySnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetails": {
      "id": "ActivityContentDetails",
      "description": "Details about the content of an activity: the video that was shared, the\nchannel that was subscribed to, etc.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "bulletin": {
          "description": "The <code>bulletin</code> object contains details about a channel\nbulletin post. This object is only present if the\n<code>snippet.type</code> is <code>bulletin</code>.",
          "$ref": "ActivityContentDetailsBulletin"
        },
        "channelItem": {
          "description": "The <code>channelItem</code> object contains details about a resource\nwhich was added to a channel. This property is only present if the\n<code>snippet.type</code> is <code>channelItem</code>.",
          "$ref": "ActivityContentDetailsChannelItem"
        },
        "comment": {
          "description": "The <code>comment</code> object contains information about a resource\nthat received a comment. This property is only present if the\n<code>snippet.type</code> is <code>comment</code>.",
          "$ref": "ActivityContentDetailsComment"
        },
        "favorite": {
          "description": "The <code>favorite</code> object contains information about a video that\nwas marked as a favorite video. This property is only present if the\n<code>snippet.type</code> is <code>favorite</code>.",
          "$ref": "ActivityContentDetailsFavorite"
        },
        "like": {
          "description": "The <code>like</code> object contains information about a resource that\nreceived a positive (like) rating. This property is only present if\nthe <code>snippet.type</code> is <code>like</code>.",
          "$ref": "ActivityContentDetailsLike"
        },
        "playlistItem": {
          "description": "The <code>playlistItem</code> object contains information about a\nnew playlist item. This property is only present if the\n<code>snippet.type</code> is <code>playlistItem</code>.",
          "$ref": "ActivityContentDetailsPlaylistItem"
        },
        "promotedItem": {
          "description": "The <code>promotedItem</code> object contains details about a resource\nwhich is being promoted. This property is only present if the\n<code>snippet.type</code> is <code>promotedItem</code>.",
          "$ref": "ActivityContentDetailsPromotedItem"
        },
        "recommendation": {
          "description": "The <code>recommendation</code> object contains information about a\nrecommended resource. This property is only present if the\n<code>snippet.type</code> is <code>recommendation</code>.",
          "$ref": "ActivityContentDetailsRecommendation"
        },
        "social": {
          "description": "The <code>social</code> object contains details about a social network\npost. This property is only present if the <code>snippet.type</code>\nis <code>social</code>.",
          "$ref": "ActivityContentDetailsSocial"
        },
        "subscription": {
          "description": "The <code>subscription</code> object contains information about a\nchannel that a user subscribed to. This property is only\npresent if the <code>snippet.type</code> is <code>subscription</code>.",
          "$ref": "ActivityContentDetailsSubscription"
        },
        "upload": {
          "description": "The <code>upload</code> object contains information about the uploaded\nvideo. This property is only present if the <code>snippet.type</code>\nis <code>upload</code>.",
          "$ref": "ActivityContentDetailsUpload"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsBulletin": {
      "id": "ActivityContentDetailsBulletin",
      "description": "Details about a channel bulletin post.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "resourceId": {
          "description": "The <code>resourceId</code> object contains information that\nidentifies the resource associated with a bulletin post.\n@mutable youtube.activities.insert",
          "$ref": "ResourceId"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsChannelItem": {
      "id": "ActivityContentDetailsChannelItem",
      "description": "Details about a resource which was added to a channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "resourceId": {
          "description": "The <code>resourceId</code> object contains information that\nidentifies the resource that was added to the channel.",
          "$ref": "ResourceId"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsComment": {
      "id": "ActivityContentDetailsComment",
      "description": "Information about a resource that received a comment.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "resourceId": {
          "description": "The <code>resourceId</code> object contains information that\nidentifies the resource associated with the comment.",
          "$ref": "ResourceId"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsFavorite": {
      "id": "ActivityContentDetailsFavorite",
      "description": "Information about a video that was marked as a favorite video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "resourceId": {
          "description": "The <code>resourceId</code> object contains information that\nidentifies the resource that was marked as a favorite.",
          "$ref": "ResourceId"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsLike": {
      "id": "ActivityContentDetailsLike",
      "description": "Information about a resource that received a positive (like) rating.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "resourceId": {
          "description": "The <code>resourceId</code> object contains information that identifies\nthe rated resource.",
          "$ref": "ResourceId"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsPlaylistItem": {
      "id": "ActivityContentDetailsPlaylistItem",
      "description": "Information about a new playlist item.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "playlistId": {
          "description": "The value that YouTube uses to uniquely identify the playlist.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "playlistItemId": {
          "description": "ID of the item within the playlist.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "resourceId": {
          "description": "The <code>resourceId</code> object contains information about the\nresource that was added to the playlist.",
          "$ref": "ResourceId"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsPromotedItem": {
      "id": "ActivityContentDetailsPromotedItem",
      "description": "Details about a resource which is being promoted.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "adTag": {
          "description": "The URL the client should fetch to request a promoted item.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "clickTrackingUrl": {
          "description": "The URL the client should ping to indicate that the user clicked through\non this promoted item.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "creativeViewUrl": {
          "description": "The URL the client should ping to indicate that the user was shown this\npromoted item.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "ctaType": {
          "description": "The type of call-to-action, a message to the user indicating action that\ncan be taken.",
          "type": "string",
          "format": null,
          "enum": [
            "ctaTypeUnspecified",
            "visitAdvertiserSite"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "customCtaButtonText": {
          "description": "The custom call-to-action button text. If specified, it will override\nthe default button text for the cta_type.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "descriptionText": {
          "description": "The text description to accompany the promoted item.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "destinationUrl": {
          "description": "The URL the client should direct the user to, if the user chooses to\nvisit the advertiser's website.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "forecastingUrl": {
          "description": "The list of forecasting URLs. The client should ping all of these URLs\nwhen a promoted item is not available, to indicate that a promoted item\ncould have been shown.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "impressionUrl": {
          "description": "The list of impression URLs. The client should ping all of these URLs to\nindicate that the user was shown this promoted item.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify the promoted video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsRecommendation": {
      "id": "ActivityContentDetailsRecommendation",
      "description": "Information that identifies the recommended resource.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "reason": {
          "description": "The reason that the resource is recommended to the user.",
          "type": "string",
          "format": null,
          "enum": [
            "reasonUnspecified",
            "videoFavorited",
            "videoLiked",
            "videoWatched"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "resourceId": {
          "description": "The <code>resourceId</code> object contains information that\nidentifies the recommended resource.",
          "$ref": "ResourceId"
        },
        "seedResourceId": {
          "description": "The <code>seedResourceId</code> object contains information about\nthe resource that caused the recommendation.",
          "$ref": "ResourceId"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsSocial": {
      "id": "ActivityContentDetailsSocial",
      "description": "Details about a social network post.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "author": {
          "description": "The author of the social network post.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "imageUrl": {
          "description": "An image of the post's author.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "referenceUrl": {
          "description": "The URL of the social network post.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "resourceId": {
          "description": "The <code>resourceId</code> object encapsulates information that\nidentifies the resource associated with a social network post.",
          "$ref": "ResourceId"
        },
        "type": {
          "description": "The name of the social network.",
          "type": "string",
          "format": null,
          "enum": [
            "typeUnspecified",
            "googlePlus",
            "facebook",
            "twitter"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsSubscription": {
      "id": "ActivityContentDetailsSubscription",
      "description": "Information about a channel that a user subscribed to.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "resourceId": {
          "description": "The <code>resourceId</code> object contains information that\nidentifies the resource that the user subscribed to.",
          "$ref": "ResourceId"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityContentDetailsUpload": {
      "id": "ActivityContentDetailsUpload",
      "description": "Information about the uploaded video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify the uploaded video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivityListResponse": {
      "id": "ActivityListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": null,
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Activity"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#activityListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ActivitySnippet": {
      "id": "ActivitySnippet",
      "description": "Basic details about an activity, including title, description, thumbnails,\nactivity type and group.\nNext ID: 12",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the channel associated\nwith the activity.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelTitle": {
          "description": "Channel title for the channel responsible for this activity",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The description of the resource primarily associated with the activity.\n@mutable youtube.activities.insert",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "groupId": {
          "description": "The group ID associated with the activity. A group ID identifies user\nevents that are associated with the same user and resource. For example,\nif a user rates a video and marks the same video as a favorite, the\nentries for those events would have the same group ID in the user's\nactivity feed. In your user interface, you can avoid repetition by\ngrouping events with the same <code>groupId</code> value.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publishedAt": {
          "description": "The date and time that the video was uploaded. The value is specified\nin <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the resource that is primarily\nassociated with the activity. For each object in the map, the key is the\nname of the thumbnail image, and the value is an object that contains\nother information about the thumbnail.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The title of the resource primarily associated with the activity.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "type": {
          "description": "The type of activity that the resource describes.",
          "type": "string",
          "format": null,
          "enum": [
            "typeUnspecified",
            "upload",
            "like",
            "favorite",
            "comment",
            "subscription",
            "playlistItem",
            "recommendation",
            "bulletin",
            "social",
            "channelItem",
            "promotedItem"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Caption": {
      "id": "Caption",
      "description": "A <code><strong>caption</strong></code> resource represents a YouTube\ncaption track. A caption track is associated with exactly one YouTube\nvideo.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the caption track.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#caption\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the caption.",
          "$ref": "CaptionSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CaptionListResponse": {
      "id": "CaptionListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of captions that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Caption"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#captionListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CaptionSnippet": {
      "id": "CaptionSnippet",
      "description": "Basic details about a caption track, such as its language and name.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "audioTrackType": {
          "description": "The type of audio track associated with the caption track.",
          "type": "string",
          "format": null,
          "enum": [
            "unknown",
            "primary",
            "commentary",
            "descriptive"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "failureReason": {
          "description": "The reason that YouTube failed to process the caption track. This\nproperty is only present if the <code><a href=\"#state\">state</a></code>\nproperty's value is <code>failed</code>.",
          "type": "string",
          "format": null,
          "enum": [
            "unknownFormat",
            "unsupportedFormat",
            "processingFailed"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isAutoSynced": {
          "description": "Indicates whether YouTube synchronized the caption track to the audio\ntrack in the video. The value will be <code>true</code> if a sync was\nexplicitly requested when the caption track was uploaded. For example,\nwhen calling the <code>captions.insert</code> or\n<code>captions.update</code> methods, you can set the <code>sync</code>\nparameter to <code>true</code> to instruct YouTube to sync the uploaded\ntrack to the video. If the value is <code>false</code>, YouTube uses\nthe time codes in the uploaded caption track to determine when to display\ncaptions.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isCC": {
          "description": "Indicates whether the track contains closed captions for the deaf\nand hard of hearing. The default value is <code>false</code>.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isDraft": {
          "description": "Indicates whether the caption track is a draft. If the value is\n<code>true</code>, then the track is not publicly visible.\nThe default value is <code>false</code>.\n@mutable youtube.captions.insert youtube.captions.update",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isEasyReader": {
          "description": "Indicates whether caption track is formatted for \"easy reader,\"\nmeaning it is at a third-grade level for language learners.\nThe default value is <code>false</code>.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isLarge": {
          "description": "Indicates whether the caption track uses large text for the\nvision-impaired. The default value is <code>false</code>.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "language": {
          "description": "The language of the caption track. The property value is a\n<a href=\"http://www.rfc-editor.org/rfc/bcp/bcp47.txt\">BCP-47</a>\n language tag.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "lastUpdated": {
          "description": "The date and time when the caption track was last updated. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "name": {
          "description": "The name of the caption track. The name is intended to be visible\nto the user as an option during playback.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "status": {
          "description": "The caption track's status.",
          "type": "string",
          "format": null,
          "enum": [
            "serving",
            "syncing",
            "failed"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "trackKind": {
          "description": "The caption track's type.",
          "type": "string",
          "format": null,
          "enum": [
            "standard",
            "ASR",
            "forced"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify the video associated\nwith the caption track.\n@mutable youtube.captions.insert",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CdnSettings": {
      "id": "CdnSettings",
      "description": "Brief description of the live stream cdn settings.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "format": {
          "description": "The format of the video stream that you are sending to Youtube. <br><br>",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "frameRate": {
          "description": "The frame rate of the inbound video data.",
          "type": "string",
          "format": null,
          "enum": [
            "30fps",
            "60fps",
            "variable"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "ingestionInfo": {
          "description": "The <code>ingestionInfo</code> object contains information that YouTube\nprovides that you need to transmit your RTMP or HTTP stream to YouTube.",
          "$ref": "IngestionInfo"
        },
        "ingestionType": {
          "description": " The method or protocol used to transmit the video stream.",
          "type": "string",
          "format": null,
          "enum": [
            "rtmp",
            "dash",
            "webrtc",
            "hls"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "resolution": {
          "description": "The resolution of the inbound video data.",
          "type": "string",
          "format": null,
          "enum": [
            "240p",
            "360p",
            "480p",
            "720p",
            "1080p",
            "1440p",
            "2160p",
            "variable"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Channel": {
      "id": "Channel",
      "description": "A <code><strong>channel</strong></code> resource contains\ninformation about a YouTube channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "auditDetails": {
          "description": "The <code>auditionDetails</code> object encapsulates channel data\nthat is relevant for YouTube Partners during the audition process.",
          "$ref": "ChannelAuditDetails"
        },
        "brandingSettings": {
          "description": "The <code>brandingSettings</code> object encapsulates information about\nthe branding of the channel.",
          "$ref": "ChannelBrandingSettings"
        },
        "contentDetails": {
          "description": "The <code>contentDetails</code> object encapsulates information about the\nchannel's content.",
          "$ref": "ChannelContentDetails"
        },
        "contentOwnerDetails": {
          "description": "The <code>contentOwnerDetails</code> object encapsulates channel data\nthat is relevant for YouTube Partners linked with the channel.",
          "$ref": "ChannelContentOwnerDetails"
        },
        "conversionPings": {
          "description": "The <code>conversionPings</code> object encapsulates information about\nconversion pings that need to be respected by the channel.",
          "$ref": "ChannelConversionPings"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "invideoPromotion": {
          "description": "The <code>invideoPromotion</code> object encapsulates information about\npromotion campaign associated with the channel.",
          "$ref": "InvideoPromotion"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#channel\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "localizations": {
          "description": "Localizations for different languages",
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": {
            "description": null,
            "$ref": "ChannelLocalization"
          },
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the channel,\nsuch as its title, description, and thumbnail images.",
          "$ref": "ChannelSnippet"
        },
        "statistics": {
          "description": "The <code>statistics</code> object encapsulates statistics for the channel.",
          "$ref": "ChannelStatistics"
        },
        "status": {
          "description": "The <code>status</code> object encapsulates information about the privacy\nstatus of the channel.",
          "$ref": "ChannelStatus"
        },
        "topicDetails": {
          "description": "The <code>topicDetails</code> object encapsulates information about\n<a href=\"http://www.freebase.com\">Freebase</a> topics associated with the\nchannel.",
          "$ref": "ChannelTopicDetails"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelAuditDetails": {
      "id": "ChannelAuditDetails",
      "description": "The <code>auditDetails</code> object encapsulates channel data that is\nrelevant for YouTube Partners during the audit process.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "communityGuidelinesGoodStanding": {
          "description": "Whether or not the channel respects the community guidelines.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "contentIdClaimsGoodStanding": {
          "description": "Whether or not the channel has any unresolved claims.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "copyrightStrikesGoodStanding": {
          "description": "Whether or not the channel has any copyright strikes.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelBannerResource": {
      "id": "ChannelBannerResource",
      "description": "A channel banner returned as the response to a channel_banner.insert call.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#channelBannerResource\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "url": {
          "description": "The URL of this banner image.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelBrandingSettings": {
      "id": "ChannelBrandingSettings",
      "description": "Branding properties of a YouTube channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channel": {
          "description": "Branding properties for the channel view.",
          "$ref": "ChannelSettings"
        },
        "hints": {
          "description": "Additional experimental branding properties.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "PropertyValue"
          }
        },
        "image": {
          "description": "Branding properties for branding images.",
          "$ref": "ImageSettings"
        },
        "watch": {
          "description": "Branding properties for the watch page.",
          "$ref": "WatchSettings"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelContentDetails": {
      "id": "ChannelContentDetails",
      "description": "Details about the content of a channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "relatedPlaylists": {
          "description": null,
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {
            "favorites": {
              "description": "The ID of the playlist that contains the channel\"s favorite videos. Use\nthe <code> <a\nhref=\"/youtube/v3/docs/playlistItems/insert\">playlistItems.insert</a></code>\nand <code> <a\nhref=\"/youtube/v3/docs/playlistItems/delete\">playlistItems.delete</a></code>\nto add or remove items from that list.",
              "type": "string",
              "format": null,
              "enum": [],
              "enumDescriptions": [],
              "properties": {},
              "additionalProperties": null,
              "items": null
            },
            "likes": {
              "description": "The ID of the playlist that contains the channel\"s liked videos. Use the\n<code> <a href=\"/youtube/v3/docs/playlistItems/insert\">\nplaylistItems.insert</a></code> and <code> <a\nhref=\"/youtube/v3/docs/playlistItems/delete\">playlistItems.delete</a></code>\nto add or remove items from that list.",
              "type": "string",
              "format": null,
              "enum": [],
              "enumDescriptions": [],
              "properties": {},
              "additionalProperties": null,
              "items": null
            },
            "uploads": {
              "description": "The ID of the playlist that contains the channel\"s uploaded videos. Use\nthe <code> <a\nhref=\"/youtube/v3/docs/videos/insert\">videos.insert</a></code> method to\nupload new videos and the <code><a\nhref=\"/youtube/v3/docs/videos/delete\">videos.delete</a></code> method to\ndelete previously uploaded videos.",
              "type": "string",
              "format": null,
              "enum": [],
              "enumDescriptions": [],
              "properties": {},
              "additionalProperties": null,
              "items": null
            },
            "watchHistory": {
              "description": "The ID of the playlist that contains the channel\"s watch history. Use the\n<code> <a\nhref=\"/youtube/v3/docs/playlistItems/insert\">playlistItems.insert</a></code>\nand <code> <a\nhref=\"/youtube/v3/docs/playlistItems/delete\">playlistItems.delete</a></code>\nto add or remove items from that list.",
              "type": "string",
              "format": null,
              "enum": [],
              "enumDescriptions": [],
              "properties": {},
              "additionalProperties": null,
              "items": null
            },
            "watchLater": {
              "description": "The ID of the playlist that contains the channel\"s watch later playlist.\nUse the <code><a\nhref=\"/youtube/v3/docs/playlistItems/insert\">playlistItems.insert</a></code>\nand <code> <a\nhref=\"/youtube/v3/docs/playlistItems/delete\">playlistItems.delete</a></code>\nto add or remove items from that list.",
              "type": "string",
              "format": null,
              "enum": [],
              "enumDescriptions": [],
              "properties": {},
              "additionalProperties": null,
              "items": null
            }
          },
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelContentOwnerDetails": {
      "id": "ChannelContentOwnerDetails",
      "description": "The <code>contentOwnerDetails</code> object encapsulates channel data that\nis relevant for YouTube Partners linked with the channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "contentOwner": {
          "description": "The ID of the content owner linked to the channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "timeLinked": {
          "description": "The date and time of when the channel was linked to the content owner.\nThe value is specified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO\n8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelConversionPing": {
      "id": "ChannelConversionPing",
      "description": "Pings that the app shall fire (authenticated by biscotti cookie). Each ping\nhas a context, in which the app must fire the ping, and a url identifying the\nping.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "context": {
          "description": "Defines the context of the ping.",
          "type": "string",
          "format": null,
          "enum": [
            "subscribe",
            "unsubscribe",
            "cview"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "conversionUrl": {
          "description": "The url (without the schema) that the player shall send the ping to.\nIt's at caller's descretion to decide which schema to use (http vs https)\nExample of a returned url: //googleads.g.doubleclick.net/pagead/\nviewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D\ncview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default\nThe caller must append biscotti authentication (ms param in case of\nmobile, for example) to this ping.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelConversionPings": {
      "id": "ChannelConversionPings",
      "description": "The <code>conversionPings</code> object encapsulates information about\nconversion pings that need to be respected by the channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "pings": {
          "description": "Pings that the app shall fire (authenticated by biscotti cookie). Each ping\nhas a context, in which the app must fire the ping, and a url identifying\nthe ping.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "ChannelConversionPing"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelListResponse": {
      "id": "ChannelListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": null,
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Channel"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#channelListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelLocalization": {
      "id": "ChannelLocalization",
      "description": "Channel localization setting",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "description": {
          "description": "The localized strings for channel's description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "title": {
          "description": "The localized strings for channel's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelProfileDetails": {
      "id": "ChannelProfileDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The YouTube channel ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelUrl": {
          "description": "The channel's URL.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "displayName": {
          "description": "The channel's display name.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "profileImageUrl": {
          "description": "The channels's avatar URL.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelSection": {
      "id": "ChannelSection",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "contentDetails": {
          "description": "The <code>contentDetails</code> object contains details about the channel\nsection content, such as a list of playlists or channels featured in the\nsection.",
          "$ref": "ChannelSectionContentDetails"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the channel section.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#channelSection\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "localizations": {
          "description": "Localizations for different languages",
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": {
            "description": null,
            "$ref": "ChannelSectionLocalization"
          },
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the channel\nsection, such as its type, style and title.",
          "$ref": "ChannelSectionSnippet"
        },
        "targeting": {
          "description": "The <code>targeting</code> object contains basic targeting settings about\nthe channel section.",
          "$ref": "ChannelSectionTargeting"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelSectionContentDetails": {
      "id": "ChannelSectionContentDetails",
      "description": "Details about a channelsection, including playlists and channels.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channels": {
          "description": "The channel ids for type multiple_channels.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "playlists": {
          "description": "The playlist ids for type single_playlist and multiple_playlists. For\nsinglePlaylist, only one playlistId is allowed.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelSectionListResponse": {
      "id": "ChannelSectionListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of ChannelSections that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "ChannelSection"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#channelSectionListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelSectionLocalization": {
      "id": "ChannelSectionLocalization",
      "description": "ChannelSection localization setting",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "title": {
          "description": "The localized strings for channel section's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelSectionSnippet": {
      "id": "ChannelSectionSnippet",
      "description": "Basic details about a channel section, including title, style and position.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the channel that published\nthe channel section.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "defaultLanguage": {
          "description": "The language of the channel section's default title and description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "localized": {
          "description": "Localized title, read-only.",
          "$ref": "ChannelSectionLocalization"
        },
        "position": {
          "description": "The position of the channel section in the channel.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "style": {
          "description": "The style of the channel section.",
          "type": "string",
          "format": null,
          "enum": [
            "channelsectionStyleUnspecified",
            "horizontalRow",
            "verticalList"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "title": {
          "description": "The channel section's title for multiple_playlists and multiple_channels.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "type": {
          "description": "The type of the channel section.",
          "type": "string",
          "format": null,
          "enum": [
            "channelsectionTypeUnspecified",
            "singlePlaylist",
            "multiplePlaylists",
            "popularUploads",
            "recentUploads",
            "likes",
            "allPlaylists",
            "likedPlaylists",
            "recentPosts",
            "recentActivity",
            "liveEvents",
            "upcomingEvents",
            "completedEvents",
            "multipleChannels",
            "postedVideos",
            "postedPlaylists",
            "subscriptions"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelSectionTargeting": {
      "id": "ChannelSectionTargeting",
      "description": "ChannelSection targeting setting.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "countries": {
          "description": "The country the channel section is targeting.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "languages": {
          "description": "The language the channel section is targeting.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "regions": {
          "description": "The region the channel section is targeting.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelSettings": {
      "id": "ChannelSettings",
      "description": "Branding properties for the channel view.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "country": {
          "description": "The country of the channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "defaultLanguage": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "defaultTab": {
          "description": "Which content tab users should see when viewing the channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "Specifies the channel description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "featuredChannelsTitle": {
          "description": "Title for the featured channels tab.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "featuredChannelsUrls": {
          "description": "The list of featured channels.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "keywords": {
          "description": "Lists keywords associated with the channel, comma-separated.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "moderateComments": {
          "description": "Whether user-submitted comments left on the channel page need to be\napproved by the channel owner to be publicly visible.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "profileColor": {
          "description": "A prominent color that can be rendered on this channel page.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "showBrowseView": {
          "description": "Whether the tab to browse the videos should be displayed.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "showRelatedChannels": {
          "description": "Whether related channels should be proposed.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "title": {
          "description": "Specifies the channel title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "trackingAnalyticsAccountId": {
          "description": "The ID for a Google Analytics account to track and measure traffic to the\nchannels.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "unsubscribedTrailer": {
          "description": "The trailer of the channel, for users that are not subscribers.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelSnippet": {
      "id": "ChannelSnippet",
      "description": "Basic details about a channel, including title, description and thumbnails.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "country": {
          "description": "The country of the channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "customUrl": {
          "description": "The custom url of the channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "defaultLanguage": {
          "description": "The language of the channel's default title and description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The description of the channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "localized": {
          "description": "Localized title and description, read-only.",
          "$ref": "ChannelLocalization"
        },
        "publishedAt": {
          "description": "The date and time that the channel was created. The value is specified in\n< a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the channel. For each object in\nthe map, the key is the name of the thumbnail image, and the value is an\nobject that contains other information about the thumbnail.<br><br> When\ndisplaying thumbnails in your application, make sure that your code uses\nthe image URLs exactly as they are returned in API responses. For example,\nyour application should not use the <code>http</code> domain instead of the\n<code>https</code> domain in a URL returned in an API response.<br><br>\nBeginning in July 2018, channel thumbnail URLs will only be available in\nthe <code>https</code> domain, which is how the URLs appear in API\nresponses. After that time, you might see broken images in your application\nif it tries to load YouTube images from the <code>http</code> domain.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The channel's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelStatistics": {
      "id": "ChannelStatistics",
      "description": "Statistics about a channel: number of subscribers, number of videos in the\nchannel, etc.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "commentCount": {
          "description": "The number of comments for the channel.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "hiddenSubscriberCount": {
          "description": "Whether or not the number of subscribers is shown for this user.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "subscriberCount": {
          "description": "The number of subscribers that the channel has.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoCount": {
          "description": "The number of videos uploaded to the channel.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "viewCount": {
          "description": "The number of times the channel has been viewed.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelStatus": {
      "id": "ChannelStatus",
      "description": "JSON template for the status part of a channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "isLinked": {
          "description": "If true, then the user is linked to either a YouTube username or G+\naccount. Otherwise, the user doesn't have a public YouTube identity.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "longUploadsStatus": {
          "description": "The long uploads status of this channel. See\nhttps://support.google.com/youtube/answer/71673 for more information.",
          "type": "string",
          "format": null,
          "enum": [
            "longUploadsUnspecified",
            "allowed",
            "eligible",
            "disallowed"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "madeForKids": {
          "description": null,
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "privacyStatus": {
          "description": "Privacy status of the channel.",
          "type": "string",
          "format": null,
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "selfDeclaredMadeForKids": {
          "description": null,
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ChannelTopicDetails": {
      "id": "ChannelTopicDetails",
      "description": "Freebase topic information related to the channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "topicCategories": {
          "description": "A list of Wikipedia URLs that describe the channel's content.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "topicIds": {
          "description": "A list of Freebase topic IDs associated with the channel. You can retrieve\ninformation about each topic using the <a\nhref=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API</a>.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Comment": {
      "id": "Comment",
      "description": "A <code><strong>comment</strong></code> represents a single YouTube comment.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the comment.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#comment\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the comment.",
          "$ref": "CommentSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CommentListResponse": {
      "id": "CommentListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of comments that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Comment"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#commentListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CommentSnippet": {
      "id": "CommentSnippet",
      "description": "Basic details about a comment, such as its author and text.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "authorChannelId": {
          "description": null,
          "$ref": "CommentSnippetAuthorChannelId"
        },
        "authorChannelUrl": {
          "description": "Link to the author's YouTube channel, if any.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "authorDisplayName": {
          "description": "The name of the user who posted the comment.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "authorProfileImageUrl": {
          "description": "The URL for the avatar of the user who posted the comment.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "canRate": {
          "description": "Whether the current viewer can rate this comment.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelId": {
          "description": "The id of the corresponding YouTube channel. In case of a channel comment\nthis is the channel the comment refers to. In case of a video comment\nit's the video's channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "likeCount": {
          "description": "The total number of likes this comment has received.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "moderationStatus": {
          "description": "The comment's moderation status. Will not be set if the comments were\nrequested through the id filter.",
          "type": "string",
          "format": null,
          "enum": [
            "published",
            "heldForReview",
            "likelySpam",
            "rejected"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "parentId": {
          "description": "The unique id of the parent comment, only set for replies.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publishedAt": {
          "description": "The date and time when the comment was orignally published. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "textDisplay": {
          "description": "The comment's text. The format is either plain text or HTML dependent on\nwhat has been requested. Even the plain text representation may differ\nfrom the text originally posted in that it may replace video links with\nvideo titles etc.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "textOriginal": {
          "description": "The comment's original raw text as initially posted or last updated. The\noriginal text will only be returned if it is accessible to the viewer,\nwhich is only guaranteed if the viewer is the comment's author.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "updatedAt": {
          "description": "The date and time when was last updated . The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoId": {
          "description": "The ID of the video the comment refers to, if any.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "viewerRating": {
          "description": "The rating the viewer has given to this comment. For the time being this\nwill never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE.\nThis may change in the future.",
          "type": "string",
          "format": null,
          "enum": [
            "none",
            "like",
            "dislike"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CommentSnippetAuthorChannelId": {
      "id": "CommentSnippetAuthorChannelId",
      "description": "The id of the author's YouTube channel, if any.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "value": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CommentThread": {
      "id": "CommentThread",
      "description": "A <code><strong>comment thread</strong></code> represents information that\napplies to a top level comment and all its replies. It can also include the\ntop level comment itself and some of the replies.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the comment thread.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#commentThread\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "replies": {
          "description": "The <code>replies</code> object contains a limited number of replies (if\nany) to the top level comment found in the snippet.",
          "$ref": "CommentThreadReplies"
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the comment\nthread and also the top level comment.",
          "$ref": "CommentThreadSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CommentThreadListResponse": {
      "id": "CommentThreadListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of comment threads that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "CommentThread"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#commentThreadListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CommentThreadReplies": {
      "id": "CommentThreadReplies",
      "description": "Comments written in (direct or indirect) reply to the top level comment.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "comments": {
          "description": "A limited number of replies. Unless the number of replies returned equals\ntotal_reply_count in the snippet the returned replies are only a subset\nof the total number of replies.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Comment"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "CommentThreadSnippet": {
      "id": "CommentThreadSnippet",
      "description": "Basic details about a comment thread.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "canReply": {
          "description": "Whether the current viewer of the thread can reply to it. This is viewer\nspecific - other viewers may see a different value for this field.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelId": {
          "description": "The YouTube channel the comments in the thread refer to or the channel\nwith the video the comments refer to. If video_id isn't set the comments\nrefer to the channel itself.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isPublic": {
          "description": "Whether the thread (and therefore all its comments) is visible to all\nYouTube users.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "topLevelComment": {
          "description": "The top level comment of this thread.",
          "$ref": "Comment"
        },
        "totalReplyCount": {
          "description": "The total number of replies (not including the top level comment).",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoId": {
          "description": "The ID of the video the comments refer to, if any. No video_id implies a\nchannel discussion comment.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ContentRating": {
      "id": "ContentRating",
      "description": "Ratings schemes. The country-specific ratings are mostly for\nmovies and shows.\nLINT.IfChange",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "acbRating": {
          "description": "The video's Australian Classification Board (ACB) or Australian\nCommunications and Media Authority (ACMA) rating. ACMA ratings are used\nto classify children's television programming.",
          "type": "string",
          "format": null,
          "enum": [
            "acbUnspecified",
            "acbE",
            "acbP",
            "acbC",
            "acbG",
            "acbPg",
            "acbM",
            "acbMa15plus",
            "acbR18plus",
            "acbUnrated"
          ],
          "enumDescriptions": [
            "",
            "E",
            "Programs that have been given a <code>P</code> classification by the\nAustralian Communications and Media Authority. These programs are\nintended for preschool children.",
            "Programs that have been given a <code>C</code> classification by the\nAustralian Communications and Media Authority. These programs are\nintended for children (other than preschool children) who are younger\nthan 14 years of age.",
            "G",
            "PG",
            "M",
            "MA15+",
            "R18+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "agcomRating": {
          "description": "The video's rating from Italy's Autorit&agrave; per le Garanzie nelle\nComunicazioni (AGCOM).",
          "type": "string",
          "format": null,
          "enum": [
            "agcomUnspecified",
            "agcomT",
            "agcomVm14",
            "agcomVm18",
            "agcomUnrated"
          ],
          "enumDescriptions": [
            "",
            "T",
            "VM14",
            "VM18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "anatelRating": {
          "description": "The video's Anatel (Asociaci&oacute;n Nacional de Televisi&oacute;n)\nrating for Chilean television.",
          "type": "string",
          "format": null,
          "enum": [
            "anatelUnspecified",
            "anatelF",
            "anatelI",
            "anatelI7",
            "anatelI10",
            "anatelI12",
            "anatelR",
            "anatelA",
            "anatelUnrated"
          ],
          "enumDescriptions": [
            "",
            "F",
            "I",
            "I-7",
            "I-10",
            "I-12",
            "R",
            "A",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bbfcRating": {
          "description": "The video's British Board of Film Classification (BBFC) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "bbfcUnspecified",
            "bbfcU",
            "bbfcPg",
            "bbfc12a",
            "bbfc12",
            "bbfc15",
            "bbfc18",
            "bbfcR18",
            "bbfcUnrated"
          ],
          "enumDescriptions": [
            "",
            "U",
            "PG",
            "12A",
            "12",
            "15",
            "18",
            "R18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bfvcRating": {
          "description": "The video's rating from Thailand's Board of Film and Video Censors.",
          "type": "string",
          "format": null,
          "enum": [
            "bfvcUnspecified",
            "bfvcG",
            "bfvcE",
            "bfvc13",
            "bfvc15",
            "bfvc18",
            "bfvc20",
            "bfvcB",
            "bfvcUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "E",
            "13",
            "15",
            "18",
            "20",
            "B",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bmukkRating": {
          "description": "The video's rating from the Austrian Board of Media Classification\n(Bundesministerium f&uuml;r Unterricht, Kunst und Kultur).",
          "type": "string",
          "format": null,
          "enum": [
            "bmukkUnspecified",
            "bmukkAa",
            "bmukk6",
            "bmukk8",
            "bmukk10",
            "bmukk12",
            "bmukk14",
            "bmukk16",
            "bmukkUnrated"
          ],
          "enumDescriptions": [
            "",
            "Unrestricted",
            "6+",
            "8+",
            "10+",
            "12+",
            "14+",
            "16+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "catvRating": {
          "description": "Rating system for Canadian TV - Canadian TV Classification System\nThe video's rating from the Canadian Radio-Television and\nTelecommunications Commission (CRTC) for Canadian English-language\nbroadcasts. For more information, see the\n<a href=\"http://www.cbsc.ca/english/agvot/englishsystem.php\">Canadian\nBroadcast Standards Council</a> website.",
          "type": "string",
          "format": null,
          "enum": [
            "catvUnspecified",
            "catvC",
            "catvC8",
            "catvG",
            "catvPg",
            "catv14plus",
            "catv18plus",
            "catvUnrated"
          ],
          "enumDescriptions": [
            "",
            "C",
            "C8",
            "G",
            "PG",
            "14+",
            "18+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "catvfrRating": {
          "description": "The video's rating from the Canadian Radio-Television and\nTelecommunications Commission (CRTC) for Canadian French-language\nbroadcasts. For more information, see the\n<a href=\"http://www.cbsc.ca/english/agvot/frenchsystem.php\">Canadian\nBroadcast Standards Council</a> website.",
          "type": "string",
          "format": null,
          "enum": [
            "catvfrUnspecified",
            "catvfrG",
            "catvfr8plus",
            "catvfr13plus",
            "catvfr16plus",
            "catvfr18plus",
            "catvfrUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "8+",
            "13+",
            "16+",
            "18+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "cbfcRating": {
          "description": "The video's Central Board of Film Certification (CBFC - India) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "cbfcUnspecified",
            "cbfcU",
            "cbfcUA",
            "cbfcA",
            "cbfcS",
            "cbfcUnrated"
          ],
          "enumDescriptions": [
            "",
            "U",
            "U/A",
            "A",
            "S",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "cccRating": {
          "description": "The video's Consejo de Calificaci&oacute;n Cinematogr&aacute;fica (Chile)\nrating.",
          "type": "string",
          "format": null,
          "enum": [
            "cccUnspecified",
            "cccTe",
            "ccc6",
            "ccc14",
            "ccc18",
            "ccc18v",
            "ccc18s",
            "cccUnrated"
          ],
          "enumDescriptions": [
            "",
            "Todo espectador",
            "6+ - Inconveniente para menores de 7 años",
            "14+",
            "18+",
            "18+ - contenido excesivamente violento",
            "18+ - contenido pornográfico",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "cceRating": {
          "description": "The video's rating from Portugal's Comiss&atilde;o de\nClassifica&ccedil;&atilde;o de Espect&acute;culos.",
          "type": "string",
          "format": null,
          "enum": [
            "cceUnspecified",
            "cceM4",
            "cceM6",
            "cceM12",
            "cceM16",
            "cceM18",
            "cceUnrated",
            "cceM14"
          ],
          "enumDescriptions": [
            "",
            "4",
            "6",
            "12",
            "16",
            "18",
            "",
            "14"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "chfilmRating": {
          "description": "The video's rating in Switzerland.",
          "type": "string",
          "format": null,
          "enum": [
            "chfilmUnspecified",
            "chfilm0",
            "chfilm6",
            "chfilm12",
            "chfilm16",
            "chfilm18",
            "chfilmUnrated"
          ],
          "enumDescriptions": [
            "",
            "0",
            "6",
            "12",
            "16",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "chvrsRating": {
          "description": "The video's Canadian Home Video Rating System (CHVRS) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "chvrsUnspecified",
            "chvrsG",
            "chvrsPg",
            "chvrs14a",
            "chvrs18a",
            "chvrsR",
            "chvrsE",
            "chvrsUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "14A",
            "18A",
            "R",
            "E",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "cicfRating": {
          "description": "The video's rating from the Commission de Contr&ocirc;le des Films\n(Belgium).",
          "type": "string",
          "format": null,
          "enum": [
            "cicfUnspecified",
            "cicfE",
            "cicfKtEa",
            "cicfKntEna",
            "cicfUnrated"
          ],
          "enumDescriptions": [
            "",
            "E",
            "KT/EA",
            "KNT/ENA",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "cnaRating": {
          "description": "The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI\n(CNA).",
          "type": "string",
          "format": null,
          "enum": [
            "cnaUnspecified",
            "cnaAp",
            "cna12",
            "cna15",
            "cna18",
            "cna18plus",
            "cnaUnrated"
          ],
          "enumDescriptions": [
            "",
            "AP",
            "12",
            "15",
            "18",
            "18+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "cncRating": {
          "description": "Rating system in France - Commission de classification cinematographique",
          "type": "string",
          "format": null,
          "enum": [
            "cncUnspecified",
            "cncT",
            "cnc10",
            "cnc12",
            "cnc16",
            "cnc18",
            "cncE",
            "cncInterdiction",
            "cncUnrated"
          ],
          "enumDescriptions": [
            "",
            "T",
            "10",
            "12",
            "16",
            "18",
            "E",
            "interdiction",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "csaRating": {
          "description": "The video's rating from France's Conseil sup&eacute;rieur de\nl’audiovisuel, which rates broadcast content.",
          "type": "string",
          "format": null,
          "enum": [
            "csaUnspecified",
            "csaT",
            "csa10",
            "csa12",
            "csa16",
            "csa18",
            "csaInterdiction",
            "csaUnrated"
          ],
          "enumDescriptions": [
            "",
            "T",
            "10",
            "12",
            "16",
            "18",
            "Interdiction",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "cscfRating": {
          "description": "The video's rating from Luxembourg's Commission de surveillance\nde la classification des films (CSCF).",
          "type": "string",
          "format": null,
          "enum": [
            "cscfUnspecified",
            "cscfAl",
            "cscfA",
            "cscf6",
            "cscf9",
            "cscf12",
            "cscf16",
            "cscf18",
            "cscfUnrated"
          ],
          "enumDescriptions": [
            "",
            "AL",
            "A",
            "6",
            "9",
            "12",
            "16",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "czfilmRating": {
          "description": "The video's rating in the Czech Republic.",
          "type": "string",
          "format": null,
          "enum": [
            "czfilmUnspecified",
            "czfilmU",
            "czfilm12",
            "czfilm14",
            "czfilm18",
            "czfilmUnrated"
          ],
          "enumDescriptions": [
            "",
            "U",
            "12",
            "14",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "djctqRating": {
          "description": "The video's Departamento de Justi&ccedil;a, Classifica&ccedil;&atilde;o,\nQualifica&ccedil;&atilde;o e T&iacute;tulos (DJCQT - Brazil) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "djctqUnspecified",
            "djctqL",
            "djctq10",
            "djctq12",
            "djctq14",
            "djctq16",
            "djctq18",
            "djctqEr",
            "djctqL10",
            "djctqL12",
            "djctqL14",
            "djctqL16",
            "djctqL18",
            "djctq1012",
            "djctq1014",
            "djctq1016",
            "djctq1018",
            "djctq1214",
            "djctq1216",
            "djctq1218",
            "djctq1416",
            "djctq1418",
            "djctq1618",
            "djctqUnrated"
          ],
          "enumDescriptions": [
            "",
            "L",
            "10",
            "12",
            "14",
            "16",
            "18",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "djctqRatingReasons": {
          "description": "Reasons that explain why the video received its DJCQT (Brazil) rating.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [
            "",
            "Brazil rating content descriptors. See http://go/brazilratings section F.\nViolência (Violence)",
            "Violência extrema (Extreme violence)",
            "Conteúdo sexual (Sexual content)",
            "Nudez (Nudity)",
            "Sexo (Sex)",
            "Sexo Explícito (Explicit sex)",
            "Drogas (Drugs)",
            "Drogas Lícitas (Legal drugs)",
            "Drogas Ilícitas (Illegal drugs)",
            "Linguagem Imprópria (Inappropriate language)",
            "Atos Criminosos (Criminal Acts)",
            "Conteúdo Impactante (Impacting content)"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [
              "djctqRatingReasonUnspecified",
              "djctqViolence",
              "djctqExtremeViolence",
              "djctqSexualContent",
              "djctqNudity",
              "djctqSex",
              "djctqExplicitSex",
              "djctqDrugs",
              "djctqLegalDrugs",
              "djctqIllegalDrugs",
              "djctqInappropriateLanguage",
              "djctqCriminalActs",
              "djctqImpactingContent"
            ],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "ecbmctRating": {
          "description": "Rating system in Turkey - Evaluation and Classification Board of the\nMinistry of Culture and Tourism",
          "type": "string",
          "format": null,
          "enum": [
            "ecbmctUnspecified",
            "ecbmctG",
            "ecbmct7a",
            "ecbmct7plus",
            "ecbmct13a",
            "ecbmct13plus",
            "ecbmct15a",
            "ecbmct15plus",
            "ecbmct18plus",
            "ecbmctUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "7A",
            "7+",
            "13A",
            "13+",
            "15A",
            "15+",
            "18+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eefilmRating": {
          "description": "The video's rating in Estonia.",
          "type": "string",
          "format": null,
          "enum": [
            "eefilmUnspecified",
            "eefilmPere",
            "eefilmL",
            "eefilmMs6",
            "eefilmK6",
            "eefilmMs12",
            "eefilmK12",
            "eefilmK14",
            "eefilmK16",
            "eefilmUnrated"
          ],
          "enumDescriptions": [
            "",
            "Pere",
            "L",
            "MS-6",
            "K-6",
            "MS-12",
            "K-12",
            "K-14",
            "K-16",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "egfilmRating": {
          "description": "The video's rating in Egypt.",
          "type": "string",
          "format": null,
          "enum": [
            "egfilmUnspecified",
            "egfilmGn",
            "egfilm18",
            "egfilmBn",
            "egfilmUnrated"
          ],
          "enumDescriptions": [
            "",
            "GN",
            "18",
            "BN",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eirinRating": {
          "description": "The video's Eirin (&#26144;&#20523;) rating.\nEirin is the Japanese rating system.",
          "type": "string",
          "format": null,
          "enum": [
            "eirinUnspecified",
            "eirinG",
            "eirinPg12",
            "eirinR15plus",
            "eirinR18plus",
            "eirinUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG-12",
            "R15+",
            "R18+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fcbmRating": {
          "description": "The video's rating from Malaysia's Film Censorship Board.",
          "type": "string",
          "format": null,
          "enum": [
            "fcbmUnspecified",
            "fcbmU",
            "fcbmPg13",
            "fcbmP13",
            "fcbm18",
            "fcbm18sx",
            "fcbm18pa",
            "fcbm18sg",
            "fcbm18pl",
            "fcbmUnrated"
          ],
          "enumDescriptions": [
            "",
            "U",
            "PG13",
            "P13",
            "18",
            "18SX",
            "18PA",
            "18SG",
            "18PL",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fcoRating": {
          "description": "The video's rating from Hong Kong's Office for Film, Newspaper\nand Article Administration.",
          "type": "string",
          "format": null,
          "enum": [
            "fcoUnspecified",
            "fcoI",
            "fcoIia",
            "fcoIib",
            "fcoIi",
            "fcoIii",
            "fcoUnrated"
          ],
          "enumDescriptions": [
            "",
            "I",
            "IIA",
            "IIB",
            "II",
            "III",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fmocRating": {
          "description": "<span class=\"deprecated\">This property has been deprecated. Use the\n<code><a\nhref=\"#contentDetails.contentRating.cncRating\">contentDetails.contentRating.cncRating</a></code>\ninstead.</span>",
          "type": "string",
          "format": null,
          "enum": [
            "fmocUnspecified",
            "fmocU",
            "fmoc10",
            "fmoc12",
            "fmoc16",
            "fmoc18",
            "fmocE",
            "fmocUnrated"
          ],
          "enumDescriptions": [
            "",
            "U",
            "10",
            "12",
            "16",
            "18",
            "E",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fpbRating": {
          "description": "The video's rating from South Africa's Film and Publication Board.",
          "type": "string",
          "format": null,
          "enum": [
            "fpbUnspecified",
            "fpbA",
            "fpbPg",
            "fpb79Pg",
            "fpb1012Pg",
            "fpb13",
            "fpb16",
            "fpb18",
            "fpbX18",
            "fpbXx",
            "fpbUnrated",
            "fpb10"
          ],
          "enumDescriptions": [
            "",
            "A",
            "PG",
            "7-9PG",
            "10-12PG",
            "13",
            "16",
            "18",
            "X18",
            "XX",
            "",
            "10"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fpbRatingReasons": {
          "description": "Reasons that explain why the video received its FPB (South Africa) rating.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [
            "",
            "South Africa rating content descriptors.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [
              "fpbRatingReasonUnspecified",
              "fpbBlasphemy",
              "fpbLanguage",
              "fpbNudity",
              "fpbPrejudice",
              "fpbSex",
              "fpbViolence",
              "fpbDrugs",
              "fpbSexualViolence",
              "fpbHorror",
              "fpbCriminalTechniques",
              "fpbImitativeActsTechniques"
            ],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "fskRating": {
          "description": "The video's Freiwillige Selbstkontrolle der Filmwirtschaft\n(FSK - Germany) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "fskUnspecified",
            "fsk0",
            "fsk6",
            "fsk12",
            "fsk16",
            "fsk18",
            "fskUnrated"
          ],
          "enumDescriptions": [
            "",
            "FSK 0",
            "FSK 6",
            "FSK 12",
            "FSK 16",
            "FSK 18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "grfilmRating": {
          "description": "The video's rating in Greece.",
          "type": "string",
          "format": null,
          "enum": [
            "grfilmUnspecified",
            "grfilmK",
            "grfilmE",
            "grfilmK12",
            "grfilmK13",
            "grfilmK15",
            "grfilmK17",
            "grfilmK18",
            "grfilmUnrated"
          ],
          "enumDescriptions": [
            "",
            "K",
            "E",
            "K-12",
            "K-13",
            "K-15",
            "K-17",
            "K-18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "icaaRating": {
          "description": "The video's Instituto de la Cinematograf&iacute;a y de las Artes\nAudiovisuales (ICAA - Spain) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "icaaUnspecified",
            "icaaApta",
            "icaa7",
            "icaa12",
            "icaa13",
            "icaa16",
            "icaa18",
            "icaaX",
            "icaaUnrated"
          ],
          "enumDescriptions": [
            "",
            "APTA",
            "7",
            "12",
            "13",
            "16",
            "18",
            "X",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "ifcoRating": {
          "description": "The video's Irish Film Classification Office (IFCO - Ireland) rating.\nSee the <a\nhref=\"http://www.ifco.ie/website/ifco/ifcoweb.nsf/web/classcatintro\">IFCO</a>\nwebsite for more information.",
          "type": "string",
          "format": null,
          "enum": [
            "ifcoUnspecified",
            "ifcoG",
            "ifcoPg",
            "ifco12",
            "ifco12a",
            "ifco15",
            "ifco15a",
            "ifco16",
            "ifco18",
            "ifcoUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "12",
            "12A",
            "15",
            "15A",
            "16",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "ilfilmRating": {
          "description": "The video's rating in Israel.",
          "type": "string",
          "format": null,
          "enum": [
            "ilfilmUnspecified",
            "ilfilmAa",
            "ilfilm12",
            "ilfilm14",
            "ilfilm16",
            "ilfilm18",
            "ilfilmUnrated"
          ],
          "enumDescriptions": [
            "",
            "AA",
            "12",
            "14",
            "16",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "incaaRating": {
          "description": "The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales -\nArgentina) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "incaaUnspecified",
            "incaaAtp",
            "incaaSam13",
            "incaaSam16",
            "incaaSam18",
            "incaaC",
            "incaaUnrated"
          ],
          "enumDescriptions": [
            "",
            "ATP (Apta para todo publico)",
            "13 (Solo apta para mayores de 13 años)",
            "16 (Solo apta para mayores de 16 años)",
            "18 (Solo apta para mayores de 18 años)",
            "X (Solo apta para mayores de 18 años, de exhibición condicionada)",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kfcbRating": {
          "description": "The video's rating from the Kenya Film Classification Board.",
          "type": "string",
          "format": null,
          "enum": [
            "kfcbUnspecified",
            "kfcbG",
            "kfcbPg",
            "kfcb16plus",
            "kfcbR",
            "kfcbUnrated"
          ],
          "enumDescriptions": [
            "",
            "GE",
            "PG",
            "16",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kijkwijzerRating": {
          "description": "The video's NICAM/Kijkwijzer rating from the Nederlands Instituut\nvoor de Classificatie van Audiovisuele Media (Netherlands).",
          "type": "string",
          "format": null,
          "enum": [
            "kijkwijzerUnspecified",
            "kijkwijzerAl",
            "kijkwijzer6",
            "kijkwijzer9",
            "kijkwijzer12",
            "kijkwijzer16",
            "kijkwijzer18",
            "kijkwijzerUnrated"
          ],
          "enumDescriptions": [
            "",
            "AL",
            "6",
            "9",
            "12",
            "16",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kmrbRating": {
          "description": "The video's Korea Media Rating Board\n(&#50689;&#49345;&#47932;&#46321;&#44553;&#50948;&#50896;&#54924;) rating.\nThe KMRB rates videos in South Korea.",
          "type": "string",
          "format": null,
          "enum": [
            "kmrbUnspecified",
            "kmrbAll",
            "kmrb12plus",
            "kmrb15plus",
            "kmrbTeenr",
            "kmrbR",
            "kmrbUnrated"
          ],
          "enumDescriptions": [
            "",
            "&#51204;&#52404;&#44288;&#46988;&#44032;",
            "12&#49464; &#51060;&#49345;&#32;&#44288;&#46988;&#44032;",
            "15&#49464; &#51060;&#49345;&#32;&#44288;&#46988;&#44032;",
            "",
            "&#52397;&#49548;&#45380; &#44288;&#46988;&#48520;&#44032;",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "lsfRating": {
          "description": "The video's rating from Indonesia's Lembaga Sensor Film.",
          "type": "string",
          "format": null,
          "enum": [
            "lsfUnspecified",
            "lsfSu",
            "lsfA",
            "lsfBo",
            "lsf13",
            "lsfR",
            "lsf17",
            "lsfD",
            "lsf21",
            "lsfUnrated"
          ],
          "enumDescriptions": [
            "",
            "SU",
            "A",
            "BO",
            "13",
            "R",
            "17",
            "D",
            "21",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mccaaRating": {
          "description": "The video's rating from Malta's Film Age-Classification Board.",
          "type": "string",
          "format": null,
          "enum": [
            "mccaaUnspecified",
            "mccaaU",
            "mccaaPg",
            "mccaa12a",
            "mccaa12",
            "mccaa14",
            "mccaa15",
            "mccaa16",
            "mccaa18",
            "mccaaUnrated"
          ],
          "enumDescriptions": [
            "",
            "U",
            "PG",
            "12A",
            "12",
            "14 - this rating was removed from the new classification structure\nintroduced in 2013.",
            "15",
            "16 - this rating was removed from the new classification structure\nintroduced in 2013.",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mccypRating": {
          "description": "The video's rating from the Danish Film Institute's (Det Danske\nFilminstitut) Media Council for Children and Young People.",
          "type": "string",
          "format": null,
          "enum": [
            "mccypUnspecified",
            "mccypA",
            "mccyp7",
            "mccyp11",
            "mccyp15",
            "mccypUnrated"
          ],
          "enumDescriptions": [
            "",
            "A",
            "7",
            "11",
            "15",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mcstRating": {
          "description": "The video's rating system for Vietnam - MCST",
          "type": "string",
          "format": null,
          "enum": [
            "mcstUnspecified",
            "mcstP",
            "mcst0",
            "mcstC13",
            "mcstC16",
            "mcst16plus",
            "mcstC18",
            "mcstGPg",
            "mcstUnrated"
          ],
          "enumDescriptions": [
            "",
            "P",
            "0",
            "C13",
            "C16",
            "16+",
            "C18",
            "MCST_G_PG",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mdaRating": {
          "description": "The video's rating from Singapore's Media Development Authority (MDA) and,\nspecifically, it's Board of Film Censors (BFC).",
          "type": "string",
          "format": null,
          "enum": [
            "mdaUnspecified",
            "mdaG",
            "mdaPg",
            "mdaPg13",
            "mdaNc16",
            "mdaM18",
            "mdaR21",
            "mdaUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "PG13",
            "NC16",
            "M18",
            "R21",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "medietilsynetRating": {
          "description": "The video's rating from Medietilsynet, the Norwegian Media Authority.",
          "type": "string",
          "format": null,
          "enum": [
            "medietilsynetUnspecified",
            "medietilsynetA",
            "medietilsynet6",
            "medietilsynet7",
            "medietilsynet9",
            "medietilsynet11",
            "medietilsynet12",
            "medietilsynet15",
            "medietilsynet18",
            "medietilsynetUnrated"
          ],
          "enumDescriptions": [
            "",
            "A",
            "6",
            "7",
            "9",
            "11",
            "12",
            "15",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mekuRating": {
          "description": "The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti\n(National Audiovisual Institute).",
          "type": "string",
          "format": null,
          "enum": [
            "mekuUnspecified",
            "mekuS",
            "meku7",
            "meku12",
            "meku16",
            "meku18",
            "mekuUnrated"
          ],
          "enumDescriptions": [
            "",
            "S",
            "7",
            "12",
            "16",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "menaMpaaRating": {
          "description": "The rating system for MENA countries, a clone of MPAA. It is needed to\nprevent titles go live w/o additional QC check, since some of them can be\ninappropriate for the countries at all. See b/33408548 for more details.",
          "type": "string",
          "format": null,
          "enum": [
            "menaMpaaUnspecified",
            "menaMpaaG",
            "menaMpaaPg",
            "menaMpaaPg13",
            "menaMpaaR",
            "menaMpaaUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "PG-13",
            "R",
            "To keep the same enum values as MPAA's items have, skip NC_17."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mibacRating": {
          "description": "The video's rating from the Ministero dei Beni e delle Attivit&agrave;\nCulturali e del Turismo (Italy).",
          "type": "string",
          "format": null,
          "enum": [
            "mibacUnspecified",
            "mibacT",
            "mibacVap",
            "mibacVm12",
            "mibacVm14",
            "mibacVm18",
            "mibacUnrated"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mocRating": {
          "description": "The video's Ministerio de Cultura (Colombia) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "mocUnspecified",
            "mocE",
            "mocT",
            "moc7",
            "moc12",
            "moc15",
            "moc18",
            "mocX",
            "mocBanned",
            "mocUnrated"
          ],
          "enumDescriptions": [
            "",
            "E",
            "T",
            "7",
            "12",
            "15",
            "18",
            "X",
            "Banned",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "moctwRating": {
          "description": "The video's rating from Taiwan's Ministry of Culture\n(&#25991;&#21270;&#37096;).",
          "type": "string",
          "format": null,
          "enum": [
            "moctwUnspecified",
            "moctwG",
            "moctwP",
            "moctwPg",
            "moctwR",
            "moctwUnrated",
            "moctwR12",
            "moctwR15"
          ],
          "enumDescriptions": [
            "",
            "G",
            "P",
            "PG",
            "R",
            "",
            "R-12",
            "R-15"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mpaaRating": {
          "description": "The video's Motion Picture Association of America (MPAA) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "mpaaUnspecified",
            "mpaaG",
            "mpaaPg",
            "mpaaPg13",
            "mpaaR",
            "mpaaNc17",
            "mpaaX",
            "mpaaUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "PG-13",
            "R",
            "NC-17",
            "! X",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mpaatRating": {
          "description": "The rating system for trailer, DVD, and Ad in the US.  See\nhttp://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.",
          "type": "string",
          "format": null,
          "enum": [
            "mpaatUnspecified",
            "mpaatGb",
            "mpaatRb"
          ],
          "enumDescriptions": [
            "",
            "GB",
            "RB"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mtrcbRating": {
          "description": "The video's rating from the Movie and Television Review and\nClassification Board (Philippines).",
          "type": "string",
          "format": null,
          "enum": [
            "mtrcbUnspecified",
            "mtrcbG",
            "mtrcbPg",
            "mtrcbR13",
            "mtrcbR16",
            "mtrcbR18",
            "mtrcbX",
            "mtrcbUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "R-13",
            "R-16",
            "R-18",
            "X",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nbcRating": {
          "description": "The video's rating from the Maldives National Bureau of Classification.",
          "type": "string",
          "format": null,
          "enum": [
            "nbcUnspecified",
            "nbcG",
            "nbcPg",
            "nbc12plus",
            "nbc15plus",
            "nbc18plus",
            "nbc18plusr",
            "nbcPu",
            "nbcUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "12+",
            "15+",
            "18+",
            "18+R",
            "PU",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nbcplRating": {
          "description": "The video's rating in Poland.",
          "type": "string",
          "format": null,
          "enum": [
            "nbcplUnspecified",
            "nbcplI",
            "nbcplIi",
            "nbcplIii",
            "nbcplIv",
            "nbcpl18plus",
            "nbcplUnrated"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nfrcRating": {
          "description": "The video's rating from the <a href=\"http://www.nfc.bg/\">Bulgarian\nNational Film Center</a>.",
          "type": "string",
          "format": null,
          "enum": [
            "nfrcUnspecified",
            "nfrcA",
            "nfrcB",
            "nfrcC",
            "nfrcD",
            "nfrcX",
            "nfrcUnrated"
          ],
          "enumDescriptions": [
            "",
            "A",
            "B",
            "C",
            "D",
            "X",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nfvcbRating": {
          "description": "The video's rating from Nigeria's National Film and Video Censors Board.",
          "type": "string",
          "format": null,
          "enum": [
            "nfvcbUnspecified",
            "nfvcbG",
            "nfvcbPg",
            "nfvcb12",
            "nfvcb12a",
            "nfvcb15",
            "nfvcb18",
            "nfvcbRe",
            "nfvcbUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "12",
            "12A",
            "15",
            "18",
            "RE",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nkclvRating": {
          "description": "The video's rating from the Nacion&atilde;lais Kino centrs (National Film\nCentre of Latvia).",
          "type": "string",
          "format": null,
          "enum": [
            "nkclvUnspecified",
            "nkclvU",
            "nkclv7plus",
            "nkclv12plus",
            "nkclv16plus",
            "nkclv18plus",
            "nkclvUnrated"
          ],
          "enumDescriptions": [
            "",
            "U",
            "7+",
            "12+",
            "! 16+",
            "18+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nmcRating": {
          "description": "The National Media Council ratings system for United Arab Emirates.",
          "type": "string",
          "format": null,
          "enum": [
            "nmcUnspecified",
            "nmcG",
            "nmcPg",
            "nmcPg13",
            "nmcPg15",
            "nmc15plus",
            "nmc18plus",
            "nmc18tc",
            "nmcUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "PG-13",
            "PG-15",
            "15+",
            "18+",
            "18TC",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "oflcRating": {
          "description": "The video's Office of Film and Literature Classification\n(OFLC - New Zealand) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "oflcUnspecified",
            "oflcG",
            "oflcPg",
            "oflcM",
            "oflcR13",
            "oflcR15",
            "oflcR16",
            "oflcR18",
            "oflcUnrated",
            "oflcRp13",
            "oflcRp16",
            "oflcRp18"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "M",
            "R13",
            "R15",
            "R16",
            "R18",
            "",
            "RP13",
            "RP16",
            "RP18"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pefilmRating": {
          "description": "The video's rating in Peru.",
          "type": "string",
          "format": null,
          "enum": [
            "pefilmUnspecified",
            "pefilmPt",
            "pefilmPg",
            "pefilm14",
            "pefilm18",
            "pefilmUnrated"
          ],
          "enumDescriptions": [
            "",
            "PT",
            "PG",
            "14",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "rcnofRating": {
          "description": "The video's rating from the Hungarian Nemzeti Filmiroda, the Rating\nCommittee of the National Office of Film.",
          "type": "string",
          "format": null,
          "enum": [
            "rcnofUnspecified",
            "rcnofI",
            "rcnofIi",
            "rcnofIii",
            "rcnofIv",
            "rcnofV",
            "rcnofVi",
            "rcnofUnrated"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "resorteviolenciaRating": {
          "description": "The video's rating in Venezuela.",
          "type": "string",
          "format": null,
          "enum": [
            "resorteviolenciaUnspecified",
            "resorteviolenciaA",
            "resorteviolenciaB",
            "resorteviolenciaC",
            "resorteviolenciaD",
            "resorteviolenciaE",
            "resorteviolenciaUnrated"
          ],
          "enumDescriptions": [
            "",
            "A",
            "B",
            "C",
            "D",
            "E",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "rtcRating": {
          "description": "The video's General Directorate of Radio, Television and Cinematography\n(Mexico) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "rtcUnspecified",
            "rtcAa",
            "rtcA",
            "rtcB",
            "rtcB15",
            "rtcC",
            "rtcD",
            "rtcUnrated"
          ],
          "enumDescriptions": [
            "",
            "AA",
            "A",
            "B",
            "B15",
            "C",
            "D",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "rteRating": {
          "description": "The video's rating from Ireland's Raidi&oacute; Teilif&iacute;s\n&Eacute;ireann.",
          "type": "string",
          "format": null,
          "enum": [
            "rteUnspecified",
            "rteGa",
            "rteCh",
            "rtePs",
            "rteMa",
            "rteUnrated"
          ],
          "enumDescriptions": [
            "",
            "GA",
            "CH",
            "PS",
            "MA",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "russiaRating": {
          "description": "The video's National Film Registry of the Russian Federation\n(MKRF - Russia) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "russiaUnspecified",
            "russia0",
            "russia6",
            "russia12",
            "russia16",
            "russia18",
            "russiaUnrated"
          ],
          "enumDescriptions": [
            "",
            "0+",
            "6+",
            "12+",
            "16+",
            "18+",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "skfilmRating": {
          "description": "The video's rating in Slovakia.",
          "type": "string",
          "format": null,
          "enum": [
            "skfilmUnspecified",
            "skfilmG",
            "skfilmP2",
            "skfilmP5",
            "skfilmP8",
            "skfilmUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "P2",
            "P5",
            "P8",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "smaisRating": {
          "description": "The video's rating in Iceland.",
          "type": "string",
          "format": null,
          "enum": [
            "smaisUnspecified",
            "smaisL",
            "smais7",
            "smais12",
            "smais14",
            "smais16",
            "smais18",
            "smaisUnrated"
          ],
          "enumDescriptions": [
            "",
            "L",
            "7",
            "12",
            "14",
            "16",
            "18",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "smsaRating": {
          "description": "The video's rating from Statens medier&aring;d (Sweden's National Media\nCouncil).",
          "type": "string",
          "format": null,
          "enum": [
            "smsaUnspecified",
            "smsaA",
            "smsa7",
            "smsa11",
            "smsa15",
            "smsaUnrated"
          ],
          "enumDescriptions": [
            "",
            "All ages",
            "7",
            "11",
            "15",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tvpgRating": {
          "description": "The video's TV Parental Guidelines (TVPG) rating.",
          "type": "string",
          "format": null,
          "enum": [
            "tvpgUnspecified",
            "tvpgY",
            "tvpgY7",
            "tvpgY7Fv",
            "tvpgG",
            "tvpgPg",
            "pg14",
            "tvpgMa",
            "tvpgUnrated"
          ],
          "enumDescriptions": [
            "",
            "TV-Y",
            "TV-Y7",
            "TV-Y7-FV",
            "TV-G",
            "TV-PG",
            "TV-14",
            "TV-MA",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "ytRating": {
          "description": "A rating that YouTube uses to identify age-restricted content.",
          "type": "string",
          "format": null,
          "enum": [
            "ytUnspecified",
            "ytAgeRestricted"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "GeoPoint": {
      "id": "GeoPoint",
      "description": "Geographical coordinates of a point, in WGS84.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "altitude": {
          "description": "Altitude above the reference ellipsoid, in meters.",
          "type": "number",
          "format": "double",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "latitude": {
          "description": "Latitude in degrees.",
          "type": "number",
          "format": "double",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "longitude": {
          "description": "Longitude in degrees.",
          "type": "number",
          "format": "double",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "GuideCategory": {
      "id": "GuideCategory",
      "description": "A <code><strong>guideCategory</strong></code> resource identifies a category\nthat YouTube algorithmically assigns based on a\nchannel's content or other indicators, such as the channel's popularity. The\nlist is similar to <a\nhref=\\\"/youtube/v3/docs/videocategory.html\\\">video categories</a>, with the\ndifference being that a video's uploader can assign a video category but only\nYouTube can assign a channel category.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the guide category.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#guideCategory\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the category,\nsuch as its title.",
          "$ref": "GuideCategorySnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "GuideCategoryListResponse": {
      "id": "GuideCategoryListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of categories that can be associated with YouTube channels. In this\nmap, the category ID is the map key, and its value is the corresponding\n<code>guideCategory</code> resource.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "GuideCategory"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#guideCategoryListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": null,
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "GuideCategorySnippet": {
      "id": "GuideCategorySnippet",
      "description": "Basic details about a guide category.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "title": {
          "description": "Description of the guide category.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "I18nLanguage": {
      "id": "I18nLanguage",
      "description": "An <code><strong>i18nLanguage</strong></code> resource identifies a UI\nlanguage currently supported by YouTube.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the i18n language.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#i18nLanguage\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the i18n\nlanguage, such as language code and human-readable name.",
          "$ref": "I18nLanguageSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "I18nLanguageListResponse": {
      "id": "I18nLanguageListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of supported i18n languages. In this map, the i18n language ID is\nthe map key, and its value is the corresponding <code>i18nLanguage</code>\nresource.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "I18nLanguage"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#i18nLanguageListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "I18nLanguageSnippet": {
      "id": "I18nLanguageSnippet",
      "description": "Basic details about an i18n language, such as language code and\nhuman-readable name.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "hl": {
          "description": "A short BCP-47 code that uniquely identifies a language.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "name": {
          "description": "The human-readable name of the language in the language itself.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "I18nRegion": {
      "id": "I18nRegion",
      "description": "A <code><strong>i18nRegion</strong></code> resource identifies a region where\nYouTube is available.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the i18n region.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#i18nRegion\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the i18n\nregion, such as region code and human-readable name.",
          "$ref": "I18nRegionSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "I18nRegionListResponse": {
      "id": "I18nRegionListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of regions where YouTube is available. In this map, the i18n region\nID is the map key, and its value is the corresponding\n<code>i18nRegion</code> resource.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "I18nRegion"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#i18nRegionListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "I18nRegionSnippet": {
      "id": "I18nRegionSnippet",
      "description": "Basic details about an i18n region, such as region code and human-readable\nname.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "gl": {
          "description": "The region code as a 2-letter ISO country code.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "name": {
          "description": "The human-readable name of the region.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ImageSettings": {
      "id": "ImageSettings",
      "description": "Branding properties for images associated with the channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "backgroundImageUrl": {
          "description": "The URL for the background image shown on the video watch page. The image\nshould be 1200px by 615px, with a maximum file size of 128k.",
          "$ref": "LocalizedProperty"
        },
        "bannerExternalUrl": {
          "description": "This is used only in update requests; if it's set, we use this URL to\ngenerate all of the above banner URLs.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerImageUrl": {
          "description": "Banner image. Desktop size (1060x175).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerMobileExtraHdImageUrl": {
          "description": "Banner image. Mobile size high resolution (1440x395).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerMobileHdImageUrl": {
          "description": "Banner image. Mobile size high resolution (1280x360).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerMobileImageUrl": {
          "description": "Banner image. Mobile size (640x175).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerMobileLowImageUrl": {
          "description": "Banner image. Mobile size low resolution (320x88).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerMobileMediumHdImageUrl": {
          "description": "Banner image. Mobile size medium/high resolution (960x263).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerTabletExtraHdImageUrl": {
          "description": "Banner image. Tablet size extra high resolution (2560x424).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerTabletHdImageUrl": {
          "description": "Banner image. Tablet size high resolution (2276x377).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerTabletImageUrl": {
          "description": "Banner image. Tablet size (1707x283).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerTabletLowImageUrl": {
          "description": "Banner image. Tablet size low resolution (1138x188).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerTvHighImageUrl": {
          "description": "Banner image. TV size high resolution (1920x1080).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerTvImageUrl": {
          "description": "Banner image. TV size extra high resolution (2120x1192).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerTvLowImageUrl": {
          "description": "Banner image. TV size low resolution (854x480).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannerTvMediumImageUrl": {
          "description": "Banner image. TV size medium resolution (1280x720).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "largeBrandedBannerImageImapScript": {
          "description": "The image map script for the large banner image.",
          "$ref": "LocalizedProperty"
        },
        "largeBrandedBannerImageUrl": {
          "description": "The URL for the 854px by 70px image that appears below the video player in\nthe expanded video view of the video watch page.",
          "$ref": "LocalizedProperty"
        },
        "smallBrandedBannerImageImapScript": {
          "description": "The image map script for the small banner image.",
          "$ref": "LocalizedProperty"
        },
        "smallBrandedBannerImageUrl": {
          "description": "The URL for the 640px by 70px banner image that appears below the video\nplayer in the default view of the video watch page.\nThe URL for the image that appears above the top-left corner of the video\nplayer. This is a 25-pixel-high image with a flexible width that cannot\nexceed 170 pixels.",
          "$ref": "LocalizedProperty"
        },
        "trackingImageUrl": {
          "description": "The URL for a 1px by 1px tracking pixel that can be used to collect\nstatistics for views of the channel or video pages.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "watchIconImageUrl": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "IngestionInfo": {
      "id": "IngestionInfo",
      "description": "Describes information necessary for ingesting an RTMP or an HTTP stream.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "backupIngestionAddress": {
          "description": "The backup ingestion URL that you should use to stream video to\nYouTube. You have the option of simultaneously streaming the content\nthat you are sending to the <code>ingestionAddress</code> to this URL.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "ingestionAddress": {
          "description": "The primary ingestion URL that you should use to stream video to\nYouTube. You must stream video to this URL.<br><br>\nDepending on which application or tool you use to encode\nyour video stream, you may need to enter the stream URL and stream\nname separately or you may need to concatenate them in the following\nformat:<br><pre><strong>STREAM_URL/STREAM_NAME</strong></pre>",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "rtmpsBackupIngestionAddress": {
          "description": "This ingestion url may be used instead of\n<code>backupIngestionAddress</code> in order to stream via RTMPS. Not\napplicable to non-RTMP streams.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "rtmpsIngestionAddress": {
          "description": "This ingestion url may be used instead of\n<code>ingestionAddress</code> in order to stream via RTMPS. Not applicable\nto non-RTMP streams.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "streamName": {
          "description": "The HTTP or RTMP stream name that YouTube assigns to the video stream.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "InvideoBranding": {
      "id": "InvideoBranding",
      "description": "LINT.IfChange\nDescribes an invideo branding.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "imageBytes": {
          "description": "The bytes the uploaded image. Only used in api to youtube communication.",
          "type": "string",
          "format": "byte",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "imageUrl": {
          "description": "The url of the uploaded image. Only used in apiary to api communication.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "position": {
          "description": "The spatial position within the video where the branding watermark will be\ndisplayed.",
          "$ref": "InvideoPosition"
        },
        "targetChannelId": {
          "description": "The channel to which this branding links. If not present it defaults to\nthe current channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "timing": {
          "description": "The temporal position within the video where watermark will be displayed.",
          "$ref": "InvideoTiming"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "InvideoPosition": {
      "id": "InvideoPosition",
      "description": "Describes the spatial position of a visual widget inside a video. It is a\nunion of various position types, out of which only will be set one.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "cornerPosition": {
          "description": "Describes in which corner of the video the visual widget will appear.",
          "type": "string",
          "format": null,
          "enum": [
            "topLeft",
            "topRight",
            "bottomLeft",
            "bottomRight"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "type": {
          "description": "Defines the position type.",
          "type": "string",
          "format": null,
          "enum": [
            "corner"
          ],
          "enumDescriptions": [
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "InvideoPromotion": {
      "id": "InvideoPromotion",
      "description": "Describes an invideo promotion campaign consisting of multiple promoted\nitems. A campaign belongs to a single channel_id.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "defaultTiming": {
          "description": "The default temporal position within the video where the promoted item will\nbe displayed. Can be overridden by more specific timing in the item.",
          "$ref": "InvideoTiming"
        },
        "items": {
          "description": "List of promoted items in decreasing priority.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "PromotedItem"
          }
        },
        "position": {
          "description": "The spatial position within the video where the promoted item will be\ndisplayed.",
          "$ref": "InvideoPosition"
        },
        "useSmartTiming": {
          "description": "Indicates whether the channel's promotional campaign uses \"smart timing.\"\nThis feature attempts to show promotions at a point in the video when they\nare more likely to be clicked and less likely to disrupt the viewing\nexperience. This feature also picks up a single promotion to show on each\nvideo.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "InvideoTiming": {
      "id": "InvideoTiming",
      "description": "Describes a temporal position of a visual widget inside a video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "durationMs": {
          "description": "Defines the duration in milliseconds for which the promotion should be\ndisplayed. If missing, the client should use the default.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "offsetMs": {
          "description": "Defines the time at which the promotion will appear. Depending on the value\nof <code>type</code> the value of the <code>offsetMs</code> field will\nrepresent a time offset from the start or from the end of the video,\nexpressed in milliseconds.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "type": {
          "description": "Describes a timing type. If the value is <code>offsetFromStart</code>, then\nthe <code>offsetMs</code> field represents an offset from the start of the\nvideo. If the value is <code>offsetFromEnd</code>, then the\n<code>offsetMs</code> field represents an offset from the end of the video.",
          "type": "string",
          "format": null,
          "enum": [
            "offsetFromStart",
            "offsetFromEnd"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LanguageTag": {
      "id": "LanguageTag",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "value": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LevelDetails": {
      "id": "LevelDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "displayName": {
          "description": "The name that should be used when referring to this level.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveBroadcast": {
      "id": "LiveBroadcast",
      "description": "A <code><strong>liveBroadcast</strong></code> resource represents an event\nthat will be streamed, via live video, on YouTube.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "contentDetails": {
          "description": "The <code>contentDetails</code> object contains information about the\nevent's video content, such as whether the content can be shown in an\nembedded video player or if it will be archived and therefore available\nfor viewing after the event has concluded.",
          "$ref": "LiveBroadcastContentDetails"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the broadcast.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#liveBroadcast\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the event,\nincluding its title, description, start time, and end time.",
          "$ref": "LiveBroadcastSnippet"
        },
        "statistics": {
          "description": "The <code>statistics</code> object contains info about the event's current\nstats. These include concurrent viewers and total chat count. Statistics\ncan change (in either direction) during the lifetime of an event.\nStatistics are only returned while the event is live.",
          "$ref": "LiveBroadcastStatistics"
        },
        "status": {
          "description": "The <code>status</code> object contains information about the event's\nstatus.",
          "$ref": "LiveBroadcastStatus"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveBroadcastContentDetails": {
      "id": "LiveBroadcastContentDetails",
      "description": "Detailed settings of a broadcast.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "boundStreamId": {
          "description": "This value uniquely identifies the\n<code><a href=\"/youtube/v3/live/docs/liveStreams\">live stream</a></code>\nbound to the broadcast.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "boundStreamLastUpdateTimeMs": {
          "description": "The date and time that the live stream referenced by\n<code>boundStreamId</code> was last updated.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "closedCaptionsType": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [
            "closedCaptionsTypeUnspecified",
            "closedCaptionsDisabled",
            "closedCaptionsHttpPost",
            "closedCaptionsEmbedded"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "enableAutoStart": {
          "description": "This setting indicates whether auto start is enabled for this broadcast.\n The default value for this property is <code>false</code>.<br><br>\n This setting can only be used by Events.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "enableAutoStop": {
          "description": "This setting indicates whether auto stop is enabled for this broadcast.\nThe default value for this property is <code>false</code>.<br><br>\nThis setting can only be used by Events.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "enableClosedCaptions": {
          "description": "This setting indicates whether HTTP POST closed captioning is enabled for\nthis broadcast. The ingestion URL of the closed captions is returned\nthrough the liveStreams API.  This is mutually exclusive with using the\n<code>closed_captions_type</code> property, and is equivalent to setting\n<code>closed_captions_type</code> to CLOSED_CAPTIONS_HTTP_POST.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "enableContentEncryption": {
          "description": "This setting indicates whether YouTube should enable content encryption\nfor the broadcast.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "enableDvr": {
          "description": "This setting determines whether viewers can access DVR controls while\nwatching the video. DVR controls enable the viewer to control the video\nplayback experience by pausing, rewinding, or fast forwarding content.\nThe default value for this property is <code>true</code>.<br><br>\n\n<strong>Important:</strong> You must set the value to <code>true</code>\nand also set the <code>enableArchive</code> property's value to\n<code>true</code> if you want to make playback available immediately\nafter the broadcast ends.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "enableEmbed": {
          "description": "This setting indicates whether the broadcast video can be played in an\nembedded player. If you choose to archive the video (using the\n<code>enableArchive</code> property), this setting will also apply to\nthe archived video.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "enableLowLatency": {
          "description": "Indicates whether this broadcast has low latency enabled.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "latencyPreference": {
          "description": "If both this and enable_low_latency are set, they must match.\nLATENCY_NORMAL should match enable_low_latency=false\nLATENCY_LOW should match enable_low_latency=true\nLATENCY_ULTRA_LOW should have enable_low_latency omitted.",
          "type": "string",
          "format": null,
          "enum": [
            "latencyPreferenceUnspecified",
            "normal",
            "low",
            "ultraLow"
          ],
          "enumDescriptions": [
            "",
            "Best for: highest quality viewer playbacks and higher resolutions.",
            "Best for: near real-time interaction, with minimal playback buffering.",
            "Best for: real-time interaction\nDoes not support: Closed captions, 1440p, and 4k resolutions"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "mesh": {
          "description": "The mesh for projecting the video if <code>projection</code> is\n<code>mesh</code>. The mesh value must be a UTF-8 string containing the\nbase-64 encoding of 3D mesh data that follows the <a\nhref=\"https://github.com/google/spatial-media/blob/master/docs/spherical-video-v2-rfc.md\">\nSpherical Video V2 RFC specification</a> for an mshp box, excluding the box\nsize and type but including the following four reserved zero bytes for the\nversion and flags.",
          "type": "string",
          "format": "byte",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "monitorStream": {
          "description": "The <code>monitorStream</code> object contains information about the\nmonitor stream, which the broadcaster can use to review the event\ncontent before the broadcast stream is shown publicly.",
          "$ref": "MonitorStreamInfo"
        },
        "projection": {
          "description": "The projection format of this broadcast. This defaults to\n<code>rectangular</code>.",
          "type": "string",
          "format": null,
          "enum": [
            "projectionUnspecified",
            "rectangular",
            "360",
            "mesh"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "recordFromStart": {
          "description": "Automatically start recording after the event goes live.\nThe default value for this property is <code>true</code>.<br><br>\n\n<strong>Important:</strong> You must also set the <code>enableDvr</code>\nproperty's value to\n<code>true</code> if you want the playback to be available immediately\nafter the broadcast ends. If you set this property's value to\n<code>true</code> but do not also set the <code>enableDvr</code> property\nto <code>true</code>, there may be a delay of around one day before the\narchived video will be available for playback.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "startWithSlate": {
          "description": "This setting indicates whether the broadcast should automatically begin\nwith an <a\nhref=\"/youtube/v3/live/getting-started#Displaying_Slates\">in-stream\nslate</a> when you update the broadcast's status to <code>live</code>.\nAfter updating the status, you then need to send a\n<code><a\nhref=\"/youtube/v3/live/docs/liveCuepoints/insert\">liveCuepoints.insert</a></code>\nrequest that sets the cuepoint's <code>eventState</code> to\n<code>end</code> to remove the in-stream slate and make your broadcast\nstream visible to viewers.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveBroadcastListResponse": {
      "id": "LiveBroadcastListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of broadcasts that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "LiveBroadcast"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#liveBroadcastListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveBroadcastSnippet": {
      "id": "LiveBroadcastSnippet",
      "description": "Basic broadcast information.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "actualEndTime": {
          "description": "The date and time that the broadcast actually ended. This information is\nonly available once the broadcast's state is <code>complete</code>. The\nvalue is specified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "actualStartTime": {
          "description": "The date and time that the broadcast actually started. This information is\nonly available once the broadcast's state is <code>live</code>. The\nvalue is specified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the channel that\nis publishing the broadcast.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The broadcast's description. As with the <code>title</code>, you can set\nthis field by modifying the broadcast resource or by setting the\n<code><a\nhref=\"/youtube/v3/docs/videos#snippet.description\">description</a></code>\nfield of the corresponding video resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isDefaultBroadcast": {
          "description": "Indicates whether this broadcast is the default broadcast.\nInternal only.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "liveChatId": {
          "description": "The id of the live chat for this broadcast.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publishedAt": {
          "description": "The date and time that the broadcast was added to YouTube's live broadcast\nschedule. The value is specified in\n<a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "scheduledEndTime": {
          "description": "The date and time that the broadcast is scheduled to end. The value\nis specified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "scheduledStartTime": {
          "description": "The date and time that the broadcast is scheduled to start. The value\nis specified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the broadcast. For each nested\nobject in this object, the key is the name of the thumbnail image, and\nthe value is an object that contains other information about the\nthumbnail.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The broadcast's title. Note that the broadcast represents exactly one\nYouTube video. You can set this field by modifying the broadcast resource\nor by setting the\n<code><a href=\"/youtube/v3/docs/videos#snippet.title\">title</a></code>\nfield of the corresponding video resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveBroadcastStatistics": {
      "id": "LiveBroadcastStatistics",
      "description": "Statistics about the live broadcast. These represent a snapshot of the values\nat the time of the request. Statistics are only returned for live broadcasts.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "totalChatCount": {
          "description": "The total number of live chat messages currently on the broadcast. The\nproperty and its value will be present if the broadcast is public, has\nthe live chat feature enabled, and has at least one message. Note that\nthis field will not be filled after the broadcast ends. So this property\nwould not identify the number of chat messages for an archived video of a\ncompleted live broadcast.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveBroadcastStatus": {
      "id": "LiveBroadcastStatus",
      "description": "Live broadcast state.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "lifeCycleStatus": {
          "description": "The broadcast's status. The status can be updated using the API's\n<code><a\nhref=\"/youtube/v3/live/docs/liveBroadcasts/transition\"\n>liveBroadcasts.transition</a></code> method.",
          "type": "string",
          "format": null,
          "enum": [
            "lifeCycleStatusUnspecified",
            "created",
            "ready",
            "testing",
            "live",
            "complete",
            "revoked",
            "testStarting",
            "liveStarting"
          ],
          "enumDescriptions": [
            "No value or the value is unknown.",
            "Incomplete settings, but otherwise valid",
            "Complete settings",
            "Visible only to partner, may need special UI treatment",
            "Viper is recording; this means the \"clock\" is running",
            "The broadcast is finished.",
            "This broadcast was removed by admin action",
            "Transition into TESTING has been requested",
            "Transition into LIVE has been requested"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "liveBroadcastPriority": {
          "description": "Priority of the live broadcast event (internal state).",
          "type": "string",
          "format": null,
          "enum": [
            "liveBroadcastPriorityUnspecified",
            "low",
            "normal",
            "high"
          ],
          "enumDescriptions": [
            "",
            "Low priority broadcast: for low view count HoAs or other\nlow priority broadcasts.",
            "Normal priority broadcast: for regular HoAs and broadcasts.",
            "High priority broadcast: for high profile HoAs, like PixelCorp ones."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "madeForKids": {
          "description": "Whether the broadcast is made for kids or not, decided by YouTube instead\nof the creator. This field is read only.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "privacyStatus": {
          "description": "The broadcast's privacy status. Note that the broadcast represents\nexactly one YouTube video, so the privacy settings are identical to\nthose supported for videos. In addition, you can set this field by\nmodifying the broadcast resource or by setting the\n<code><a\nhref=\"/youtube/v3/docs/videos#status.privacyStatus\"\n>privacyStatus</a></code>\nfield of the corresponding video resource.",
          "type": "string",
          "format": null,
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "recordingStatus": {
          "description": "The broadcast's recording status.",
          "type": "string",
          "format": null,
          "enum": [
            "liveBroadcastRecordingStatusUnspecified",
            "notRecording",
            "recording",
            "recorded"
          ],
          "enumDescriptions": [
            "No value or the value is unknown.",
            "The recording has not yet been started.",
            "The recording is currently on.",
            "The recording is completed, and cannot be started again."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "selfDeclaredMadeForKids": {
          "description": "This field will be set to True if the creator declares the broadcast to be\nkids only: go/live-cw-work.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatBan": {
      "id": "LiveChatBan",
      "description": "A `__liveChatBan__` resource represents a ban for a YouTube live chat.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the ban.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#liveChatBan\"`.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The `snippet` object contains basic details about the ban.",
          "$ref": "LiveChatBanSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatBanSnippet": {
      "id": "LiveChatBanSnippet",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "banDurationSeconds": {
          "description": "The duration of a ban, only filled if the ban has type TEMPORARY.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannedUserDetails": {
          "description": null,
          "$ref": "ChannelProfileDetails"
        },
        "liveChatId": {
          "description": "The chat this ban is pertinent to.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "type": {
          "description": "The type of ban.",
          "type": "string",
          "format": null,
          "enum": [
            "liveChatBanTypeUnspecified",
            "permanent",
            "temporary"
          ],
          "enumDescriptions": [
            "An invalid ban type.",
            "A permanent ban.",
            "A temporary ban."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatFanFundingEventDetails": {
      "id": "LiveChatFanFundingEventDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "amountDisplayString": {
          "description": "A rendered string that displays the fund amount and currency to the user.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "amountMicros": {
          "description": "The amount of the fund.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "currency": {
          "description": "The currency in which the fund was made.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "userComment": {
          "description": "The comment added by the user to this fan funding event.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatMessage": {
      "id": "LiveChatMessage",
      "description": "A <code><strong>liveChatMessage</strong></code> resource represents a chat\nmessage in a YouTube Live Chat.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "authorDetails": {
          "description": "The <code>authorDetails</code> object contains basic details about the\nuser that posted this message.",
          "$ref": "LiveChatMessageAuthorDetails"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the message.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#liveChatMessage\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the message.",
          "$ref": "LiveChatMessageSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatMessageAuthorDetails": {
      "id": "LiveChatMessageAuthorDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The YouTube channel ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelUrl": {
          "description": "The channel's URL.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "displayName": {
          "description": "The channel's display name.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isChatModerator": {
          "description": "Whether the author is a moderator of the live chat.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isChatOwner": {
          "description": "Whether the author is the owner of the live chat.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isChatSponsor": {
          "description": "Whether the author is a sponsor of the live chat.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isVerified": {
          "description": "Whether the author's identity has been verified by YouTube.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "profileImageUrl": {
          "description": "The channels's avatar URL.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatMessageDeletedDetails": {
      "id": "LiveChatMessageDeletedDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "deletedMessageId": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatMessageListResponse": {
      "id": "LiveChatMessageListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": null,
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "LiveChatMessage"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#liveChatMessageListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "offlineAt": {
          "description": "The date and time when the underlying stream went offline. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "pollingIntervalMillis": {
          "description": "The amount of time the client should wait before polling again.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatMessageRetractedDetails": {
      "id": "LiveChatMessageRetractedDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "retractedMessageId": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatMessageSnippet": {
      "id": "LiveChatMessageSnippet",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "authorChannelId": {
          "description": "The ID of the user that authored this message, this field is not always\nfilled.\ntextMessageEvent - the user that wrote the message\nfanFundingEvent - the user that funded the broadcast\nnewSponsorEvent - the user that just became a sponsor\nmessageDeletedEvent - the moderator that took the action\nmessageRetractedEvent - the author that retracted their message\nuserBannedEvent - the moderator that took the action\nsuperChatEvent - the user that made the purchase",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "displayMessage": {
          "description": "Contains a string that can be displayed to the user.\nIf this field is not present the message is silent, at the moment only\nmessages of type TOMBSTONE and CHAT_ENDED_EVENT are silent.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fanFundingEventDetails": {
          "description": "Details about the funding event, this is only set if the type is\n'fanFundingEvent'.",
          "$ref": "LiveChatFanFundingEventDetails"
        },
        "hasDisplayContent": {
          "description": "Whether the message has display content that should be displayed to users.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "liveChatId": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "messageDeletedDetails": {
          "description": null,
          "$ref": "LiveChatMessageDeletedDetails"
        },
        "messageRetractedDetails": {
          "description": null,
          "$ref": "LiveChatMessageRetractedDetails"
        },
        "publishedAt": {
          "description": "The date and time when the message was orignally published. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "superChatDetails": {
          "description": "Details about the Super Chat event, this is only set if the type is\n'superChatEvent'.",
          "$ref": "LiveChatSuperChatDetails"
        },
        "superStickerDetails": {
          "description": "Details about the Super Sticker event, this is only set if the type is\n'superStickerEvent'.",
          "$ref": "LiveChatSuperStickerDetails"
        },
        "textMessageDetails": {
          "description": "Details about the text message, this is only set if the type is\n'textMessageEvent'.",
          "$ref": "LiveChatTextMessageDetails"
        },
        "type": {
          "description": "The type of message, this will always be present, it determines the\ncontents of the message as well as which fields will be present.",
          "type": "string",
          "format": null,
          "enum": [
            "invalidType",
            "textMessageEvent",
            "tombstone",
            "fanFundingEvent",
            "chatEndedEvent",
            "sponsorOnlyModeStartedEvent",
            "sponsorOnlyModeEndedEvent",
            "newSponsorEvent",
            "messageDeletedEvent",
            "messageRetractedEvent",
            "userBannedEvent",
            "superChatEvent",
            "superStickerEvent"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "userBannedDetails": {
          "description": null,
          "$ref": "LiveChatUserBannedMessageDetails"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatModerator": {
      "id": "LiveChatModerator",
      "description": "A <code><strong>liveChatModerator</strong></code> resource represents a\nmoderator for a YouTube live chat. A chat moderator has the ability to\nban/unban users from a chat, remove message, etc.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the moderator.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#liveChatModerator\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the\nmoderator.",
          "$ref": "LiveChatModeratorSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatModeratorListResponse": {
      "id": "LiveChatModeratorListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of moderators that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "LiveChatModerator"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#liveChatModeratorListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatModeratorSnippet": {
      "id": "LiveChatModeratorSnippet",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "liveChatId": {
          "description": "The ID of the live chat this moderator can act on.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "moderatorDetails": {
          "description": "Details about the moderator.",
          "$ref": "ChannelProfileDetails"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatSuperChatDetails": {
      "id": "LiveChatSuperChatDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "amountDisplayString": {
          "description": "A rendered string that displays the fund amount and currency to the user.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "amountMicros": {
          "description": "The amount purchased by the user, in micros (1,750,000 micros = 1.75).",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "currency": {
          "description": "The currency in which the purchase was made.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tier": {
          "description": "The tier in which the amount belongs. Lower amounts belong to lower\ntiers. The lowest tier is <code>1</code>.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "userComment": {
          "description": "The comment added by the user to this Super Chat event.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatSuperStickerDetails": {
      "id": "LiveChatSuperStickerDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "amountDisplayString": {
          "description": "A rendered string that displays the fund amount and currency to the user.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "amountMicros": {
          "description": "The amount purchased by the user, in micros (1,750,000 micros = 1.75).",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "currency": {
          "description": "The currency in which the purchase was made.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "superStickerMetadata": {
          "description": "Information about the Super Sticker.",
          "$ref": "SuperStickerMetadata"
        },
        "tier": {
          "description": "The tier in which the amount belongs. Lower amounts belong to lower\ntiers. The lowest tier is <code>1</code>.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatTextMessageDetails": {
      "id": "LiveChatTextMessageDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "messageText": {
          "description": "The user's message.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveChatUserBannedMessageDetails": {
      "id": "LiveChatUserBannedMessageDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "banDurationSeconds": {
          "description": "The duration of the ban. This property is only present if the\n<code>banType</code> is <code>temporary</code>.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "banType": {
          "description": "The type of ban.",
          "type": "string",
          "format": null,
          "enum": [
            "permanent",
            "temporary"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bannedUserDetails": {
          "description": "The details of the user that was banned.",
          "$ref": "ChannelProfileDetails"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveStream": {
      "id": "LiveStream",
      "description": "A live stream describes a live ingestion point.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "cdn": {
          "description": "The <code>cdn</code> object defines the live stream's content delivery\nnetwork (CDN) settings. These settings provide details about the manner\nin which you stream your content to YouTube.",
          "$ref": "CdnSettings"
        },
        "contentDetails": {
          "description": "The <code>content_details</code> object contains information about the\nstream, including the closed captions ingestion URL.",
          "$ref": "LiveStreamContentDetails"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the stream.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#liveStream\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the\nstream, including its channel, title, and description.",
          "$ref": "LiveStreamSnippet"
        },
        "status": {
          "description": "The <code>status</code> object contains information about\nlive stream's status.",
          "$ref": "LiveStreamStatus"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveStreamConfigurationIssue": {
      "id": "LiveStreamConfigurationIssue",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "description": {
          "description": "The long-form description of the issue and how to resolve it.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "reason": {
          "description": "The short-form reason for this issue.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "severity": {
          "description": "How severe this issue is to the stream.",
          "type": "string",
          "format": null,
          "enum": [
            "info",
            "warning",
            "error"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "type": {
          "description": "The kind of error happening.",
          "type": "string",
          "format": null,
          "enum": [
            "gopSizeOver",
            "gopSizeLong",
            "gopSizeShort",
            "openGop",
            "badContainer",
            "audioBitrateHigh",
            "audioBitrateLow",
            "audioSampleRate",
            "bitrateHigh",
            "bitrateLow",
            "audioCodec",
            "videoCodec",
            "noAudioStream",
            "noVideoStream",
            "multipleVideoStreams",
            "multipleAudioStreams",
            "audioTooManyChannels",
            "interlacedVideo",
            "frameRateHigh",
            "resolutionMismatch",
            "videoCodecMismatch",
            "videoInterlaceMismatch",
            "videoProfileMismatch",
            "videoBitrateMismatch",
            "framerateMismatch",
            "gopMismatch",
            "audioSampleRateMismatch",
            "audioStereoMismatch",
            "audioCodecMismatch",
            "audioBitrateMismatch",
            "videoResolutionSuboptimal",
            "videoResolutionUnsupported",
            "videoIngestionStarved",
            "videoIngestionFasterThanRealtime"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveStreamContentDetails": {
      "id": "LiveStreamContentDetails",
      "description": "Detailed settings of a stream.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "closedCaptionsIngestionUrl": {
          "description": "The ingestion URL where the closed captions of this stream are sent.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isReusable": {
          "description": "Indicates whether the stream is reusable, which means that it\ncan be bound to multiple broadcasts. It is common for\nbroadcasters to reuse the same stream for many different\nbroadcasts if those broadcasts occur at different times.<br><br>\nIf you set this value to <code>false</code>, then the stream\nwill not be reusable, which means that it can only be bound to\none broadcast. Non-reusable streams differ from reusable streams in the\nfollowing ways:\n<ul>\n  <li>A non-reusable stream can only be bound to one broadcast.</li>\n  <li>A non-reusable stream might be deleted by an automated process\n    after the broadcast ends.</li>\n  <li>The <code><a href=\"/youtube/v3/live/docs/liveStreams/list\">\n    liveStreams.list</a></code> method does not list non-reusable streams\n    if you call the method and set the <code>mine</code> parameter to\n    <code>true</code>. The only way to use that method to retrieve the\n    resource for a non-reusable stream is to use the <code>id</code>\n    parameter to identify the stream.</li>\n</ul>",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveStreamHealthStatus": {
      "id": "LiveStreamHealthStatus",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "configurationIssues": {
          "description": "The configurations issues on this stream",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "LiveStreamConfigurationIssue"
          }
        },
        "lastUpdateTimeSeconds": {
          "description": "The last time this status was updated (in seconds)",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "status": {
          "description": "The status code of this stream",
          "type": "string",
          "format": null,
          "enum": [
            "good",
            "ok",
            "bad",
            "noData",
            "revoked"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveStreamListResponse": {
      "id": "LiveStreamListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of live streams that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "LiveStream"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#liveStreamListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": null,
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveStreamSnippet": {
      "id": "LiveStreamSnippet",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the channel that\nis transmitting the stream.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The stream's description. The value cannot be longer than 10000\ncharacters.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isDefaultStream": {
          "description": null,
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publishedAt": {
          "description": "The date and time that the stream was created. The value is specified in\n<a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "title": {
          "description": "The stream's title. The value must be between 1 and 128 characters long.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LiveStreamStatus": {
      "id": "LiveStreamStatus",
      "description": "Brief description of the live stream status.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "healthStatus": {
          "description": "The health status of the stream.",
          "$ref": "LiveStreamHealthStatus"
        },
        "streamStatus": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [
            "created",
            "ready",
            "active",
            "inactive",
            "error"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LocalizedProperty": {
      "id": "LocalizedProperty",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "default": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "defaultLanguage": {
          "description": "The language of the default property.",
          "$ref": "LanguageTag"
        },
        "localized": {
          "description": null,
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "LocalizedString"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "LocalizedString": {
      "id": "LocalizedString",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "language": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "value": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Member": {
      "id": "Member",
      "description": "A <code><strong>member</strong></code> resource represents a member for a\nYouTube channel. A member provides recurring monetary support to a creator\nand receives special benefits.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#member\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the member.",
          "$ref": "MemberSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MemberListResponse": {
      "id": "MemberListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of members that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Member"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#memberListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": null,
          "$ref": "PageInfo"
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MemberSnippet": {
      "id": "MemberSnippet",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "creatorChannelId": {
          "description": "The id of the channel that's offering memberships.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "memberDetails": {
          "description": "Details about the member.",
          "$ref": "ChannelProfileDetails"
        },
        "membershipsDetails": {
          "description": "Details about the user's membership.",
          "$ref": "MembershipsDetails"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MembershipsDetails": {
      "id": "MembershipsDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "accessibleLevels": {
          "description": "Ids of all levels that the user has access to. This includes the currently\nactive level and all other levels that are included because of a higher\npurchase.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "highestAccessibleLevel": {
          "description": "Id of the highest level that the user has access to at the moment.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "highestAccessibleLevelDisplayName": {
          "description": "Display name for the highest level that the user has access to at the\nmoment.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "membershipsDuration": {
          "description": "Data about memberships duration without taking into consideration pricing\nlevels.",
          "$ref": "MembershipsDuration"
        },
        "membershipsDurationAtLevels": {
          "description": "Data about memberships duration on particular pricing levels.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "MembershipsDurationAtLevel"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MembershipsDuration": {
      "id": "MembershipsDuration",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "memberSince": {
          "description": "The date and time when the user became a continuous member across all\nlevels.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "memberTotalDurationMonths": {
          "description": "The cumulative time the user has been a member across all levels in\ncomplete months (the time is rounded down to the nearest integer).",
          "type": "integer",
          "format": "int32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MembershipsDurationAtLevel": {
      "id": "MembershipsDurationAtLevel",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "level": {
          "description": "Pricing level ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "memberSince": {
          "description": "The date and time when the user became a continuous member for the given\nlevel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "memberTotalDurationMonths": {
          "description": "The cumulative time the user has been a member for the given level in\ncomplete months (the time is rounded down to the nearest integer).",
          "type": "integer",
          "format": "int32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MembershipsLevel": {
      "id": "MembershipsLevel",
      "description": "A <code><strong>membershipsLevel</strong></code> resource represents an offer\nmade by YouTube creators for their fans. Users can become members of the\nchannel by joining one of the available levels. They will provide recurring\nmonetary support and receives special benefits.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the memberships level.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#membershipsLevelListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the level.",
          "$ref": "MembershipsLevelSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MembershipsLevelListResponse": {
      "id": "MembershipsLevelListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of pricing levels offered by a creator to the fans.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "MembershipsLevel"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#membershipsLevelListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MembershipsLevelSnippet": {
      "id": "MembershipsLevelSnippet",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "creatorChannelId": {
          "description": "The id of the channel that's offering channel memberships.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "levelDetails": {
          "description": "Details about the pricing level.",
          "$ref": "LevelDetails"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "MonitorStreamInfo": {
      "id": "MonitorStreamInfo",
      "description": "Settings and Info of the monitor stream",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "broadcastStreamDelayMs": {
          "description": "If you have set the\n<code><a href=\"#enableMonitorStream\">enableMonitorStream</a></code>\nproperty to <code>true</code>, then this property determines the\nlength of the live broadcast delay.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "embedHtml": {
          "description": "HTML code that embeds a player that plays the monitor stream.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "enableMonitorStream": {
          "description": "This value determines whether the monitor stream is enabled for the\nbroadcast. If the monitor stream is enabled, then YouTube will\nbroadcast the event content on a special stream intended only for\nthe broadcaster's consumption. The broadcaster can use the stream\nto review the event content and also to identify the optimal times\nto insert cuepoints.<br><br>\nYou need to set this value to <code>true</code> if you intend to have\na broadcast delay for your event.<br><br>\n<strong>Note:</strong> This property cannot be updated once the\nbroadcast is in the <code>testing</code> or <code>live</code> state.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PageInfo": {
      "id": "PageInfo",
      "description": "Paging details for lists of resources, including total number of items\navailable and number of resources returned in a single page.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "resultsPerPage": {
          "description": "The number of results included in the API response.",
          "type": "integer",
          "format": "int32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "totalResults": {
          "description": "The total number of results in the result set.",
          "type": "integer",
          "format": "int32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Playlist": {
      "id": "Playlist",
      "description": "A <code><strong>playlist</strong></code> resource represents a YouTube\nplaylist. A playlist is a collection of videos that can be viewed\nsequentially and shared with other users. A playlist can contain up to\n200 videos, and YouTube does not limit the number of playlists that\neach user creates. By default, playlists are publicly visible to other\nusers, but playlists can be public or private.  <br/><br/> YouTube\nalso uses playlists to identify special collections of videos for a\nchannel, such as:\n  <ul>\n    <li>uploaded videos</li>\n    <li>favorite videos</li>\n    <li>positively rated (liked) videos</li>\n    <li>watch history</li>\n    <li>watch later</li>\n  </ul>\nTo be more specific, these lists are associated with a channel, which\nis a collection of a person, group, or company's videos, playlists,\nand other YouTube information.  You can retrieve the playlist IDs for\neach of these lists from the <code><a\nhref=\\\"/youtube/v3/docs/channels\\\"> channel resource</a></code> for a\ngiven channel.<br/><br/> You can then use the <code> <a\nhref=\\\"/youtube/v3/docs/playlistItems/list\\\">\nplaylistItems.list</a></code> method to retrieve any of those\nlists. You can also add or remove items from those lists by calling\nthe <code> <a href=\\\"/youtube/v3/docs/playlistItems/insert\\\">\nplaylistItems.insert</a></code> and <code> <a\nhref=\\\"/youtube/v3/docs/playlistItems/delete\\\">\nplaylistItems.delete</a></code> methods.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "contentDetails": {
          "description": "The <code>contentDetails</code> object contains information like\nvideo count.",
          "$ref": "PlaylistContentDetails"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the playlist.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#playlist\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "localizations": {
          "description": "Localizations for different languages",
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": {
            "description": null,
            "$ref": "PlaylistLocalization"
          },
          "items": null
        },
        "player": {
          "description": "The <code>player</code> object contains information that you would use\nto play the playlist in an embedded player.",
          "$ref": "PlaylistPlayer"
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the\nplaylist, such as its title and description.",
          "$ref": "PlaylistSnippet"
        },
        "status": {
          "description": "The <code>status</code> object contains status information for the\nplaylist.",
          "$ref": "PlaylistStatus"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistContentDetails": {
      "id": "PlaylistContentDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "itemCount": {
          "description": "The number of videos in the playlist.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistItem": {
      "id": "PlaylistItem",
      "description": "A <code><strong>playlistItem</strong></code> resource identifies\nanother resource, such as a video, that is included in a playlist. In\naddition, the <code>playlistItem </code> resource contains details\nabout the included resource that pertain specifically to how that\nresource is used in that playlist.<br/><br/> YouTube uses playlists to\nidentify special collections of videos for a channel, such as:\n  <ul>\n    <li>uploaded videos</li>\n    <li>favorite videos</li>\n    <li>positively rated (liked) videos</li>\n    <li>watch history</li>\n    <li>watch later</li>\n  </ul>\n To be more specific, these lists are associated with a channel, which\nis a collection of a person, group, or company's videos, playlists,\nand other YouTube information.\n<br/><br/>\n You can retrieve the playlist IDs for each of these lists from the\n<code> <a href=\\\"/youtube/v3/docs/channels\\\">channel resource</a>\n</code> for a given channel. You can then use the <code> <a\nhref=\\\"/youtube/v3/docs/playlistItems/list\\\">\nplaylistItems.list</a></code> method to retrieve any of those\nlists. You can also add or remove items from those lists by calling\nthe <code> <a href=\\\"/youtube/v3/docs/playlistItems/insert\\\">\nplaylistItems.insert</a></code> and <code> <a\nhref=\\\"/youtube/v3/docs/playlistItems/delete\\\">\nplaylistItems.delete</a></code> methods. For example, if a user gives\na positive rating to a video, you would insert that video into the\nliked videos playlist for that user's channel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "contentDetails": {
          "description": "The <code>contentDetails</code> object is included in the resource if\nthe included item is a YouTube video. The object contains additional\ninformation about the video.",
          "$ref": "PlaylistItemContentDetails"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the playlist item.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#playlistItem\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the\nplaylist item, such as its title and position in the playlist.",
          "$ref": "PlaylistItemSnippet"
        },
        "status": {
          "description": "The <code>status</code> object contains information about the playlist\nitem's privacy status.",
          "$ref": "PlaylistItemStatus"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistItemContentDetails": {
      "id": "PlaylistItemContentDetails",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "endAt": {
          "description": "The time, measured in seconds from the start of the video, when the video\nshould stop playing. (The playlist owner can specify the times when the\nvideo should start and stop playing when the video is played in the context\nof the playlist.) By default, assume that the <code>video.endTime</code> is\nthe end of the video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "note": {
          "description": "A user-generated note for this item.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "startAt": {
          "description": "The time, measured in seconds from the start of the video, when the video\nshould start playing. (The playlist owner can specify the times when the\nvideo should start and stop playing when the video is played in the context\nof the playlist.) The default value is <code>0</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify a video. To <a\nhref=\"/youtube/v3/docs/video/list.html\">retrieve the <code>video</code>\nresource</a>, set the <code>id</code> query parameter to this value in your\nAPI request.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoPublishedAt": {
          "description": "The date and time that the video was published to YouTube. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistItemListResponse": {
      "id": "PlaylistItemListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of playlist items that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "PlaylistItem"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#playlistItemListResponse\"</code>.\nEtag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistItemSnippet": {
      "id": "PlaylistItemSnippet",
      "description": "Basic details about a playlist, including title, description and thumbnails.\nBasic details of a YouTube Playlist item provided by the author.\nNext ID: 13",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the user that added\nthe item to the playlist.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelTitle": {
          "description": "Channel title for the channel that the playlist item belongs to.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The item's description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "playlistId": {
          "description": "The ID that YouTube uses to uniquely identify thGe playlist that the\nplaylist item is in.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "position": {
          "description": "The order in which the item appears in the playlist. The value uses a\nzero-based index, so the first item has a position of <code>0</code>,\nthe second item has a position of <code>1</code>, and so forth.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publishedAt": {
          "description": "The date and time that the item was added to the playlist. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "resourceId": {
          "description": "The <code>id</code> object contains information that can be used to\nuniquely identify the resource that is included in the playlist as\nthe playlist item.",
          "$ref": "ResourceId"
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the playlist item. For each\nobject in the map, the key is the name of the thumbnail image, and the\nvalue is an object that contains other information about the thumbnail.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The item's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistItemStatus": {
      "id": "PlaylistItemStatus",
      "description": "Information about the playlist item's privacy status.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "privacyStatus": {
          "description": "This resource's privacy status.",
          "type": "string",
          "format": null,
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistListResponse": {
      "id": "PlaylistListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of playlists that match the request criteria",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Playlist"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#playlistListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistLocalization": {
      "id": "PlaylistLocalization",
      "description": "Playlist localization setting",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "description": {
          "description": "The localized strings for playlist's description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "title": {
          "description": "The localized strings for playlist's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistPlayer": {
      "id": "PlaylistPlayer",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "embedHtml": {
          "description": "An <code>&lt;iframe&gt;</code> tag that embeds a player that will\nplay the playlist.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistSnippet": {
      "id": "PlaylistSnippet",
      "description": "Basic details about a playlist, including title, description and thumbnails.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the channel that\npublished the playlist.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelTitle": {
          "description": "The channel title of the channel that the video belongs to.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "defaultLanguage": {
          "description": "The language of the playlist's default title and description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The playlist's description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "localized": {
          "description": "Localized title and description, read-only.",
          "$ref": "PlaylistLocalization"
        },
        "publishedAt": {
          "description": "The date and time that the playlist was created. The value is specified\nin <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tags": {
          "description": "Keyword tags associated with the playlist.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the playlist. For each object\nin the map, the key is the name of the thumbnail image, and the value\nis an object that contains other information about the thumbnail.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The playlist's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PlaylistStatus": {
      "id": "PlaylistStatus",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "privacyStatus": {
          "description": "The playlist's privacy status.",
          "type": "string",
          "format": null,
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PromotedItem": {
      "id": "PromotedItem",
      "description": "Describes a single promoted item.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "customMessage": {
          "description": "A custom message to display for this promotion. This field is currently\nignored unless the promoted item is a website.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "Identifies the promoted item.",
          "$ref": "PromotedItemId"
        },
        "promotedByContentOwner": {
          "description": "If true, the content owner's name will be used when displaying the\npromotion. This field can only be set when the update is made on behalf of\nthe content owner.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "timing": {
          "description": "The temporal position within the video where the promoted item will be\ndisplayed. If present, it overrides the default timing.",
          "$ref": "InvideoTiming"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PromotedItemId": {
      "id": "PromotedItemId",
      "description": "Describes a single promoted item id. It is a union of various possible types.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "recentlyUploadedBy": {
          "description": "If type is recentUpload, this field identifies the channel from which to\ntake the recent upload. If missing, the channel is assumed to be the same\nchannel for which the invideoPromotion is set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "type": {
          "description": "Describes the type of the promoted item.",
          "type": "string",
          "format": null,
          "enum": [
            "video",
            "website",
            "recentUpload"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoId": {
          "description": "If the promoted item represents a video, this field represents the unique\nYouTube ID identifying it. This field will be present only if\n<code>type</code> has the value <code>video</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "websiteUrl": {
          "description": "If the promoted item represents a website, this field represents the url\npointing to the website. This field will be present only if\n<code>type</code> has the value <code>website</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "PropertyValue": {
      "id": "PropertyValue",
      "description": "A pair Property / Value.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "property": {
          "description": "A property.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "value": {
          "description": "The property's value.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ResourceId": {
      "id": "ResourceId",
      "description": "A resource id is a generic reference that points to another YouTube resource.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the referred resource, if\nthat resource is a channel. This property is only present if the\n<code>resourceId.kind</code> value is <code>youtube#channel</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "The type of the API resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "playlistId": {
          "description": "The ID that YouTube uses to uniquely identify the referred resource, if\nthat resource is a playlist. This property is only present if the\n<code>resourceId.kind</code> value is <code>youtube#playlist</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify the referred resource, if\nthat resource is a video. This property is only present if the\n<code>resourceId.kind</code> value is <code>youtube#video</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SearchListResponse": {
      "id": "SearchListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "Pagination information for token pagination.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "SearchResult"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#searchListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "regionCode": {
          "description": null,
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SearchResult": {
      "id": "SearchResult",
      "description": "A search result contains information about a YouTube video, channel, or\nplaylist that matches the search parameters specified in an API request.\nWhile a search result points to a uniquely identifiable resource, like a\nvideo, it does not have its own persistent data.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The <code>id</code> object contains information that can be used to\nuniquely identify the resource that matches the search request.",
          "$ref": "ResourceId"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#searchResult\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about a search\nresult, such as its title or description. For example, if the search result\nis a video, then the title will be the\nvideo's title and the description will be the video's description.",
          "$ref": "SearchResultSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SearchResultSnippet": {
      "id": "SearchResultSnippet",
      "description": "Basic details about a search result, including title, description and\nthumbnails of the item referenced by the search result.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The value that YouTube uses to uniquely identify the channel that\npublished the resource that the search result identifies.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelTitle": {
          "description": "The title of the channel that published the resource that the search result\nidentifies.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "A description of the search result.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "liveBroadcastContent": {
          "description": "It indicates if the resource (video or channel) has upcoming/active live\nbroadcast content. Or it's \"none\" if there is not any upcoming/active\nlive broadcasts.",
          "type": "string",
          "format": null,
          "enum": [
            "none",
            "upcoming",
            "live",
            "completed"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publishedAt": {
          "description": "The creation date and time of the resource that the search result\nidentifies. The value is specified in <a\nhref=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the search result. For each\nobject in the map, the key is the name of the thumbnail image, and the\nvalue is an object that contains other information about the thumbnail.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The title of the search result.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Sponsor": {
      "id": "Sponsor",
      "description": "A `__sponsor__` resource represents a sponsor for a YouTube channel.  A\nsponsor provides recurring monetary support to a creator and receives special\nbenefits.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#sponsor\"`.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The `snippet` object contains basic details about the sponsor.",
          "$ref": "SponsorSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SponsorListResponse": {
      "id": "SponsorListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of sponsors that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Sponsor"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#sponsorListResponse\".",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the `pageToken` parameter to\nretrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": null,
          "$ref": "PageInfo"
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The `visitorId` identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SponsorSnippet": {
      "id": "SponsorSnippet",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The id of the channel being sponsored.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "cumulativeDurationMonths": {
          "description": "The cumulative time a user has been a sponsor in months.",
          "type": "integer",
          "format": "int32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "sponsorDetails": {
          "description": "Details about the sponsor.",
          "$ref": "ChannelProfileDetails"
        },
        "sponsorSince": {
          "description": "The date and time when the user became a sponsor. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\n(`YYYY-MM-DDThh:mm:ss.sZ`) format.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Subscription": {
      "id": "Subscription",
      "description": "A <code><strong>subscription</strong></code> resource contains information\nabout a YouTube user subscription.  A subscription notifies a user when new\nvideos are added to a channel or when another user takes one of several\nactions on YouTube, such as uploading a video, rating a video, or commenting\non a video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "contentDetails": {
          "description": "The <code>contentDetails</code> object contains basic statistics about the\nsubscription.",
          "$ref": "SubscriptionContentDetails"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the subscription.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#subscription\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the\nsubscription, including its title and the channel that the user subscribed\nto.",
          "$ref": "SubscriptionSnippet"
        },
        "subscriberSnippet": {
          "description": "The <code>subscriberSnippet</code> object contains basic details about the\nsubscriber.",
          "$ref": "SubscriptionSubscriberSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SubscriptionContentDetails": {
      "id": "SubscriptionContentDetails",
      "description": "Details about the content to witch a subscription refers.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "activityType": {
          "description": "The type of activity this subscription is for\n(only uploads, everything).",
          "type": "string",
          "format": null,
          "enum": [
            "subscriptionActivityTypeUnspecified",
            "all",
            "uploads"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "newItemCount": {
          "description": "The number of new items in the subscription since its content was last\nread.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "totalItemCount": {
          "description": "The approximate number of items that the subscription points to.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SubscriptionListResponse": {
      "id": "SubscriptionListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of subscriptions that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Subscription"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#subscriptionListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": null,
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SubscriptionSnippet": {
      "id": "SubscriptionSnippet",
      "description": "Basic details about a subscription, including title, description and\nthumbnails of the subscribed item.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the subscriber's channel.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelTitle": {
          "description": "Channel title for the channel that the subscription belongs to.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The subscription's details.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publishedAt": {
          "description": "The date and time that the subscription was created. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "resourceId": {
          "description": "The <code>id</code> object contains information about the channel that\nthe user subscribed to.",
          "$ref": "ResourceId"
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the video. For each object\nin the map, the key is the name of the thumbnail image, and the value\nis an object that contains other information about the thumbnail.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The subscription's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SubscriptionSubscriberSnippet": {
      "id": "SubscriptionSubscriberSnippet",
      "description": "Basic details about a subscription's subscriber including title,\ndescription, channel ID and thumbnails.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "channelId": {
          "description": "The channel ID of the subscriber.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The description of the subscriber.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "thumbnails": {
          "description": "Thumbnails for this subscriber.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The title of the subscriber.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SuperChatEvent": {
      "id": "SuperChatEvent",
      "description": "A `__superChatEvent__` resource represents a Super Chat purchase on a YouTube\nchannel.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the Super Chat event.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#superChatEvent\"`.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The `snippet` object contains basic details about the Super Chat event.",
          "$ref": "SuperChatEventSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SuperChatEventListResponse": {
      "id": "SuperChatEventListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of Super Chat purchases that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "SuperChatEvent"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#superChatEventListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": null,
          "$ref": "PageInfo"
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SuperChatEventSnippet": {
      "id": "SuperChatEventSnippet",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "amountMicros": {
          "description": "The purchase amount, in micros of the purchase currency.  e.g., 1 is\nrepresented as 1000000.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelId": {
          "description": "Channel id where the event occurred.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "commentText": {
          "description": "The text contents of the comment left by the user.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "createdAt": {
          "description": "The date and time when the event occurred. The value is\nspecified in <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "currency": {
          "description": "The currency in which the purchase was made.  ISO 4217.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "displayString": {
          "description": "A rendered string that displays the purchase amount and currency\n(e.g., \"$1.00\").  The string is rendered for the given language.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "isSuperStickerEvent": {
          "description": "True if this event is a Super Sticker event.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "messageType": {
          "description": "The tier for the paid message, which is based on the amount of money spent\nto purchase the message.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "superStickerMetadata": {
          "description": "If this event is a Super Sticker event, this field will contain metadata\nabout the Super Sticker.",
          "$ref": "SuperStickerMetadata"
        },
        "supporterDetails": {
          "description": "Details about the supporter.",
          "$ref": "ChannelProfileDetails"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SuperStickerMetadata": {
      "id": "SuperStickerMetadata",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "altText": {
          "description": "Internationalized alt text that describes the sticker image and any\nanimation associated with it.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "altTextLanguage": {
          "description": "Specifies the localization language in which the alt text is returned.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "stickerId": {
          "description": "Unique identifier of the Super Sticker. This is a shorter form of the\nalt_text that includes pack name and a recognizable characteristic of the\nsticker.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Thumbnail": {
      "id": "Thumbnail",
      "description": "A thumbnail is an image representing a YouTube resource.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "height": {
          "description": "(Optional) Height of the thumbnail image.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "url": {
          "description": "The thumbnail image's URL.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "width": {
          "description": "(Optional) Width of the thumbnail image.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ThumbnailDetails": {
      "id": "ThumbnailDetails",
      "description": "Internal representation of thumbnails for a YouTube resource.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "default": {
          "description": "The default image for this resource.",
          "$ref": "Thumbnail"
        },
        "high": {
          "description": "The high quality image for this resource.",
          "$ref": "Thumbnail"
        },
        "maxres": {
          "description": "The maximum resolution quality image for this resource.",
          "$ref": "Thumbnail"
        },
        "medium": {
          "description": "The medium quality image for this resource.",
          "$ref": "Thumbnail"
        },
        "standard": {
          "description": "The standard quality image for this resource.",
          "$ref": "Thumbnail"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ThumbnailSetResponse": {
      "id": "ThumbnailSetResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of thumbnails.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "ThumbnailDetails"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#thumbnailSetResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "TokenPagination": {
      "id": "TokenPagination",
      "description": "Stub token pagination template to suppress results.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {},
      "additionalProperties": null,
      "items": null
    },
    "Video": {
      "id": "Video",
      "description": "A <code><strong>video</strong></code> resource represents a YouTube video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "ageGating": {
          "description": "Age restriction details related to a video. This data can only be retrieved\nby the video owner.",
          "$ref": "VideoAgeGating"
        },
        "contentDetails": {
          "description": "The <code>contentDetails</code> object contains information about the video\ncontent, including the length of the video and its aspect ratio.",
          "$ref": "VideoContentDetails"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fileDetails": {
          "description": "The <code>fileDetails</code> object encapsulates information about the\nvideo file that was uploaded to YouTube, including the file's resolution,\nduration, audio and video codecs, stream bitrates, and more. This data can\nonly be retrieved by the video owner.",
          "$ref": "VideoFileDetails"
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#video\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "liveStreamingDetails": {
          "description": "The <code>liveStreamingDetails</code> object contains metadata about a live\nvideo broadcast. The object will only be present in a <code>video</code>\nresource if the video is an upcoming, live, or completed live broadcast.",
          "$ref": "VideoLiveStreamingDetails"
        },
        "localizations": {
          "description": "The <code>localizations</code> object contains localized versions of the\nbasic details about the video, such as its title and description.",
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": {
            "description": null,
            "$ref": "VideoLocalization"
          },
          "items": null
        },
        "monetizationDetails": {
          "description": "The <code>monetizationDetails</code> object encapsulates information\nabout the monetization status of the video.",
          "$ref": "VideoMonetizationDetails"
        },
        "player": {
          "description": "The <code>player</code> object contains information that you would use to\nplay the video in an embedded player.",
          "$ref": "VideoPlayer"
        },
        "processingDetails": {
          "description": "The <code>processingDetails</code> object encapsulates information about\nYouTube's progress in processing the uploaded video file. The properties\nin the object identify the current processing status and an estimate of\nthe time remaining until YouTube finishes processing the video. This part\nalso indicates whether different types of data or content, such as file\ndetails or thumbnail images, are available for the video.<br><br>\nThe <code>processingProgress</code> object is designed to be polled so\nthat the video uploaded can track the progress that YouTube has made in\nprocessing the uploaded video file. This data can only be retrieved by\nthe video owner.",
          "$ref": "VideoProcessingDetails"
        },
        "projectDetails": {
          "description": "The <code>projectDetails</code> object contains information about the\nproject specific video metadata.",
          "$ref": "VideoProjectDetails"
        },
        "recordingDetails": {
          "description": "The <code>recordingDetails</code> object encapsulates information about the\nlocation, date and address where the video was recorded.",
          "$ref": "VideoRecordingDetails"
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the video,\nsuch as its title, description, and category.",
          "$ref": "VideoSnippet"
        },
        "statistics": {
          "description": "The <code>statistics</code> object contains statistics about the video.",
          "$ref": "VideoStatistics"
        },
        "status": {
          "description": "The <code>status</code> object contains information about the video's\nuploading, processing, and privacy statuses.",
          "$ref": "VideoStatus"
        },
        "suggestions": {
          "description": "The <code>suggestions</code> object encapsulates suggestions that identify\nopportunities to improve the video quality or the metadata for the uploaded\nvideo. This data can only be retrieved by the video owner.",
          "$ref": "VideoSuggestions"
        },
        "topicDetails": {
          "description": "The <code>topicDetails</code> object encapsulates information about <a\nhref=\"http://www.freebase.com\">Freebase</a> topics associated with the\nvideo.",
          "$ref": "VideoTopicDetails"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoAbuseReport": {
      "id": "VideoAbuseReport",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "comments": {
          "description": "Additional comments regarding the abuse report.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "language": {
          "description": "The language that the content was viewed in.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "reasonId": {
          "description": "The high-level, or primary, reason that the content is abusive. The value\nis an abuse report reason ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "secondaryReasonId": {
          "description": "The specific, or secondary, reason that this content is abusive (if\navailable). The value is an abuse report reason ID that is a valid\nsecondary reason for the primary reason.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify the video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoAbuseReportReason": {
      "id": "VideoAbuseReportReason",
      "description": "A `__videoAbuseReportReason__` resource identifies a reason that a video\ncould be reported as abusive. Video abuse report reasons are used with\n`video.ReportAbuse`.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID of this abuse report reason.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#videoAbuseReportReason\"`.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The `snippet` object contains basic details about the abuse report reason.",
          "$ref": "VideoAbuseReportReasonSnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoAbuseReportReasonListResponse": {
      "id": "VideoAbuseReportReasonListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of valid abuse reasons that are used with `video.ReportAbuse`.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "VideoAbuseReportReason"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#videoAbuseReportReasonListResponse\"`.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "visitorId": {
          "description": "The `visitorId` identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoAbuseReportReasonSnippet": {
      "id": "VideoAbuseReportReasonSnippet",
      "description": "Basic details about a video category, such as its localized title.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "label": {
          "description": "The localized label belonging to this abuse report reason.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "secondaryReasons": {
          "description": "The secondary reasons associated with this reason, if any are available.\n(There might be 0 or more.)",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "VideoAbuseReportSecondaryReason"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoAbuseReportSecondaryReason": {
      "id": "VideoAbuseReportSecondaryReason",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "id": {
          "description": "The ID of this abuse report secondary reason.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "label": {
          "description": "The localized label for this abuse report secondary reason.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoAgeGating": {
      "id": "VideoAgeGating",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "alcoholContent": {
          "description": "Indicates whether or not the video has alcoholic beverage content. Only\nusers of legal purchasing age in a particular country, as identified by\nICAP, can view the content.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "restricted": {
          "description": "Age-restricted trailers. For redband trailers and adult-rated video-games.\nOnly users aged 18+ can view the content. The the field is\n<code>true</code> the content is restricted to viewers aged 18+. Otherwise\nThe field won't be present.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoGameRating": {
          "description": "Video game rating, if any.",
          "type": "string",
          "format": null,
          "enum": [
            "anyone",
            "m15Plus",
            "m16Plus",
            "m17Plus"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoCategory": {
      "id": "VideoCategory",
      "description": "A <code><strong>videoCategory</strong></code> resource identifies a\ncategory that has been or could be associated with uploaded videos.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the video category.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#videoCategory\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "snippet": {
          "description": "The <code>snippet</code> object contains basic details about the video\ncategory, including its title.",
          "$ref": "VideoCategorySnippet"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoCategoryListResponse": {
      "id": "VideoCategoryListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of video categories that can be associated with YouTube videos. In\nthis map, the video category ID is the map key, and its value is the\ncorresponding <code>videoCategory</code> resource.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "VideoCategory"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#videoCategoryListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoCategorySnippet": {
      "id": "VideoCategorySnippet",
      "description": "Basic details about a video category, such as its localized title.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "assignable": {
          "description": null,
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelId": {
          "description": "The YouTube channel that created the video category.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "title": {
          "description": "The video category's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoContentDetails": {
      "id": "VideoContentDetails",
      "description": "Details about the content of a YouTube Video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "caption": {
          "description": "The value of <code>captions</code> indicates whether the video\nhas captions or not.",
          "type": "string",
          "format": null,
          "enum": [
            "true",
            "false"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "contentRating": {
          "description": "Specifies the ratings that the video received under various rating schemes.",
          "$ref": "ContentRating"
        },
        "countryRestriction": {
          "description": "The <code>countryRestriction</code> object contains information about the\ncountries where a video is (or is not) viewable.",
          "$ref": "AccessPolicy"
        },
        "definition": {
          "description": "The value of <code>definition</code> indicates whether the video is\navailable in high definition or only in standard definition.",
          "type": "string",
          "format": null,
          "enum": [
            "sd",
            "hd"
          ],
          "enumDescriptions": [
            "sd",
            "hd"
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "dimension": {
          "description": "The value of <code>dimension</code> indicates whether the video is\navailable in 3D or in 2D.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "duration": {
          "description": "The length of the video. The tag value is an <a\nhref=\"//en.wikipedia.org/wiki/ISO_8601#Durations\">ISO 8601</a> duration in\nthe format <code>PT#M#S</code>, in which the letters <code>PT</code>\nindicate that the value specifies a period of time, and the letters\n<code>M</code> and <code>S</code> refer to length in minutes and seconds,\nrespectively. The <code>#</code> characters preceding the <code>M</code>\nand <code>S</code> letters are both integers that specify the number of\nminutes (or seconds) of the video. For example, a value of\n<code>PT15M51S</code> indicates that the video is 15 minutes and 51 seconds\nlong.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "hasCustomThumbnail": {
          "description": "Indicates whether the video uploader has provided a custom\nthumbnail image for the video.\nThis property is only visible to the video uploader.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "licensedContent": {
          "description": "The value of <code>is_license_content</code> indicates whether the video is\nlicensed content.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "projection": {
          "description": "Specifies the projection format of the video.",
          "type": "string",
          "format": null,
          "enum": [
            "rectangular",
            "360"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "regionRestriction": {
          "description": "The <code>regionRestriction</code> object contains information about the\ncountries where a video is (or is not) viewable. The object will contain\neither the <code>contentDetails.regionRestriction.allowed</code> property\nor the <code>contentDetails.regionRestriction.blocked</code> property.",
          "$ref": "VideoContentDetailsRegionRestriction"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoContentDetailsRegionRestriction": {
      "id": "VideoContentDetailsRegionRestriction",
      "description": "DEPRECATED Region restriction of the video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "allowed": {
          "description": "A list of region codes that identify countries where the video is\nviewable. If this property is present and a country is not listed\nin its value, then the video is blocked from appearing in that\ncountry. If this property is present and contains an empty list,\nthe video is blocked in all countries.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "blocked": {
          "description": "A list of region codes that identify countries where the video is\nblocked. If this property is present and a country is not listed in\nits value, then the video is viewable in that country. If this\nproperty is present and contains an empty list, the video is\nviewable in all countries.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoFileDetails": {
      "id": "VideoFileDetails",
      "description": "Describes original video file properties, including technical details about\naudio and video streams, but also metadata information like content length,\ndigitization time, or geotagging information.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "audioStreams": {
          "description": "A list of audio streams contained in the uploaded video file. Each item\nin the list contains detailed metadata about an audio stream.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "VideoFileDetailsAudioStream"
          }
        },
        "bitrateBps": {
          "description": "The uploaded video file's combined (video and audio) bitrate in bits\nper second.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "container": {
          "description": "The uploaded video file's container format.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "creationTime": {
          "description": "The date and time when the uploaded video file was created. The value is\nspecified in <a href=\"http://www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat. Currently, the following ISO 8601 formats are supported:\n<ul>\n<li>Date only: <code>YYYY-MM-DD</code></li>\n<li>Naive time: <code>YYYY-MM-DDTHH:MM:SS</code></li>\n<li>Time with timezone: <code>YYYY-MM-DDTHH:MM:SS+HH:MM</code></li>\n</ul>",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "durationMs": {
          "description": "The length of the uploaded video in milliseconds.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fileName": {
          "description": "The uploaded file's name. This field is present whether a video file or\nanother type of file was uploaded.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fileSize": {
          "description": "The uploaded file's size in bytes. This field is present whether\na video file or another type of file was uploaded.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fileType": {
          "description": "The uploaded file's type as detected by YouTube's video processing\nengine. Currently, YouTube only processes video files, but this field\nis present whether a video file or another type of file was uploaded.",
          "type": "string",
          "format": null,
          "enum": [
            "video",
            "audio",
            "image",
            "archive",
            "document",
            "project",
            "other"
          ],
          "enumDescriptions": [
            "Known video file (e.g., an MP4 file).",
            "Audio only file (e.g., an MP3 file).",
            "Image file (e.g., a JPEG image).",
            "Archive file (e.g., a ZIP archive).",
            "Document or text file (e.g., MS Word document).",
            "Movie project file (e.g., Microsoft Windows Movie Maker project).",
            "Other non-video file type."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoStreams": {
          "description": "A list of video streams contained in the uploaded video file. Each item\nin the list contains detailed metadata about a video stream.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "VideoFileDetailsVideoStream"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoFileDetailsAudioStream": {
      "id": "VideoFileDetailsAudioStream",
      "description": "Information about an audio stream.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "bitrateBps": {
          "description": "The audio stream's bitrate, in bits per second.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelCount": {
          "description": "The number of audio channels that the stream contains.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "codec": {
          "description": "The audio codec that the stream uses.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "vendor": {
          "description": "A value that uniquely identifies a video vendor. Typically, the value\nis a four-letter vendor code.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoFileDetailsVideoStream": {
      "id": "VideoFileDetailsVideoStream",
      "description": "Information about a video stream.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "aspectRatio": {
          "description": "The video content's display aspect ratio, which specifies the aspect\nratio in which the video should be displayed.",
          "type": "number",
          "format": "double",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "bitrateBps": {
          "description": "The video stream's bitrate, in bits per second.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "codec": {
          "description": "The video codec that the stream uses.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "frameRateFps": {
          "description": "The video stream's frame rate, in frames per second.",
          "type": "number",
          "format": "double",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "heightPixels": {
          "description": "The encoded video content's height in pixels.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "rotation": {
          "description": "The amount that YouTube needs to rotate the original source content\nto properly display the video.",
          "type": "string",
          "format": null,
          "enum": [
            "none",
            "clockwise",
            "upsideDown",
            "counterClockwise",
            "other"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "vendor": {
          "description": "A value that uniquely identifies a video vendor. Typically, the value is\na four-letter vendor code.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "widthPixels": {
          "description": "The encoded video content's width in pixels. You can calculate the\nvideo's encoding aspect ratio as\n<code>width_pixels</code>&nbsp;/&nbsp;<code>height_pixels</code>.",
          "type": "integer",
          "format": "uint32",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoListResponse": {
      "id": "VideoListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": null,
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Video"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#videoListResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the next page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the <code>pageToken</code>\nparameter to retrieve the previous page in the result set.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tokenPagination": {
          "description": null,
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoLiveStreamingDetails": {
      "id": "VideoLiveStreamingDetails",
      "description": "Details about the live streaming metadata.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "activeLiveChatId": {
          "description": "The ID of the currently active live chat attached to this video. This\nfield is filled only if the video is a currently live broadcast that has\nlive chat. Once the broadcast transitions to complete this field will be\nremoved and the live chat closed down. For persistent broadcasts that live\nchat id will no longer be tied to this video but rather to the new video\nbeing displayed at the persistent page.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "actualEndTime": {
          "description": "The time that the broadcast actually ended. The value is specified\nin <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat. This value will not be\navailable until the broadcast is over.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "actualStartTime": {
          "description": "The time that the broadcast actually started. The value is specified\nin <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat. This value will not be\navailable until the broadcast begins.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "concurrentViewers": {
          "description": "The number of viewers currently watching the broadcast. The property and\nits value will be present if the broadcast has current viewers and the\nbroadcast owner has not hidden the viewcount for the video. Note that\nYouTube stops tracking the number of concurrent viewers for a broadcast\nwhen the broadcast ends. So, this property would not identify the number\nof viewers watching an archived video of a live broadcast that already\nended.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "scheduledEndTime": {
          "description": "The time that the broadcast is scheduled to end. The value is specified\nin <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat. If the value is empty or\nthe property is not present, then the broadcast is scheduled to continue\nindefinitely.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "scheduledStartTime": {
          "description": "The time that the broadcast is scheduled to begin. The value is specified\nin <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoLocalization": {
      "id": "VideoLocalization",
      "description": "Localized versions of certain video properties (e.g. title).",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "description": {
          "description": "Localized version of the video's description.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "title": {
          "description": "Localized version of the video's title.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoMonetizationDetails": {
      "id": "VideoMonetizationDetails",
      "description": "Details about monetization of a YouTube Video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "access": {
          "description": "The value of <code>access</code> indicates whether the video can be\nmonetized or not.",
          "$ref": "AccessPolicy"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoPlayer": {
      "id": "VideoPlayer",
      "description": "Player to be used for a video playback.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "embedHeight": {
          "description": null,
          "type": "string",
          "format": "int64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "embedHtml": {
          "description": "An <code>&lt;iframe&gt;</code> tag that embeds a player that will\nplay the video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "embedWidth": {
          "description": "The embed width",
          "type": "string",
          "format": "int64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoProcessingDetails": {
      "id": "VideoProcessingDetails",
      "description": "Describes processing status and progress and availability of some other Video\nresource parts.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "editorSuggestionsAvailability": {
          "description": "This value indicates whether video editing suggestions, which might\nimprove video quality or the playback experience, are available for\nthe video. You can retrieve these suggestions by requesting the\n<code>suggestions</code> part in your <code>videos.list()</code> request.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "fileDetailsAvailability": {
          "description": "This value indicates whether file details are available for the uploaded\nvideo. You can retrieve a video's file details by requesting the\n<code>fileDetails</code> part in your <code>videos.list()</code> request.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "processingFailureReason": {
          "description": "The reason that YouTube failed to process the video. This property will\nonly have a value if the <code>processingStatus</code>\nproperty's value is <code>failed</code>.",
          "type": "string",
          "format": null,
          "enum": [
            "uploadFailed",
            "transcodeFailed",
            "streamingFailed",
            "other"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "processingIssuesAvailability": {
          "description": "This value indicates whether the video processing engine has generated\nsuggestions that might improve YouTube's ability to process the\nthe video, warnings that explain video processing problems, or\nerrors that cause video processing problems. You can retrieve these\nsuggestions by requesting the <code>suggestions</code> part in your\n<code>videos.list()</code> request.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "processingProgress": {
          "description": "The <code>processingProgress</code> object contains information about the\nprogress YouTube has made in processing the video. The values are really\nonly relevant if the video's processing status is <code>processing</code>.",
          "$ref": "VideoProcessingDetailsProcessingProgress"
        },
        "processingStatus": {
          "description": "The video's processing status. This value indicates whether YouTube was\nable to process the video or if the video is still being processed.",
          "type": "string",
          "format": null,
          "enum": [
            "processing",
            "succeeded",
            "failed",
            "terminated"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tagSuggestionsAvailability": {
          "description": "This value indicates whether keyword (tag) suggestions are available for\nthe video. Tags can be added to a video's metadata to make it easier for\nother users to find the video. You can retrieve these suggestions by\nrequesting the <code>suggestions</code> part in your\n<code>videos.list()</code> request.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "thumbnailsAvailability": {
          "description": "This value indicates whether thumbnail images have been generated for\nthe video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoProcessingDetailsProcessingProgress": {
      "id": "VideoProcessingDetailsProcessingProgress",
      "description": "Video processing progress and completion time estimate.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "partsProcessed": {
          "description": "The number of parts of the video that YouTube has already processed.\nYou can estimate the percentage of the video that YouTube has already\nprocessed by calculating:<br>\n<code>100 * parts_processed / parts_total</code><br><br>\nNote that since the estimated number of parts could increase without\na corresponding increase in the number of parts that have already been\nprocessed, it is possible that the calculated progress could\nperiodically decrease while YouTube processes a video.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "partsTotal": {
          "description": "An estimate of the total number of parts that need to be processed\nfor the video. The number may be updated with more precise estimates\nwhile YouTube processes the video.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "timeLeftMs": {
          "description": "An estimate of the amount of time, in millseconds, that YouTube needs\nto finish processing the video.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoProjectDetails": {
      "id": "VideoProjectDetails",
      "description": "Project specific details about the content of a YouTube Video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "tags": {
          "description": "A list of project tags associated with the video during the upload.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoRating": {
      "id": "VideoRating",
      "description": "Basic details about rating of a video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "rating": {
          "description": "Rating of a video.",
          "type": "string",
          "format": null,
          "enum": [
            "none",
            "like",
            "dislike"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify the video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoRatingListResponse": {
      "id": "VideoRatingListResponse",
      "description": null,
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "items": {
          "description": "A list of ratings that match the request criteria.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "VideoRating"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n<code>\"youtube#videoGetRatingResponse\"</code>.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "visitorId": {
          "description": "The <code>visitorId</code> identifies the visitor.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoRecordingDetails": {
      "id": "VideoRecordingDetails",
      "description": "Recording information associated with the video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "location": {
          "description": "The geolocation information associated with the video.",
          "$ref": "GeoPoint"
        },
        "locationDescription": {
          "description": "The text description of the location where the video was recorded.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "recordingDate": {
          "description": "The date and time when the video was recorded. The value is specified in <a\nhref=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\n(<code>YYYY-MM-DDThh:mm:ss.sssZ</code>) format.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoSnippet": {
      "id": "VideoSnippet",
      "description": "Basic details about a video, including title, description, uploader,\nthumbnails and category.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "categoryId": {
          "description": "The YouTube <a href=\"/youtube/v3/docs/videoCategories/list\">video\ncategory</a> associated with the video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the channel that the\nvideo was uploaded to.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "channelTitle": {
          "description": "Channel title for the channel that the video belongs to.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "defaultAudioLanguage": {
          "description": "The <code>default_audio_language</code> property specifies the language\nspoken in the video's default audio track.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "defaultLanguage": {
          "description": "The language of the videos's default snippet.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "description": {
          "description": "The video's description.\n@mutable youtube.videos.insert youtube.videos.update",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "liveBroadcastContent": {
          "description": "Indicates if the video is an upcoming/active live broadcast.\nOr it's \"none\" if the video is not an upcoming/active live broadcast.",
          "type": "string",
          "format": null,
          "enum": [
            "none",
            "upcoming",
            "live",
            "completed"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "localized": {
          "description": "Localized snippet selected with the hl parameter. If no such localization\nexists, this field is populated with the default snippet. (Read-only)",
          "$ref": "VideoLocalization"
        },
        "publishedAt": {
          "description": "The date and time that the video was uploaded. The value is specified\nin <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "tags": {
          "description": "A list of keyword tags associated with the video. Tags may contain spaces.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the video. For each object in the\nmap, the key is the name of the thumbnail image, and the value is an object\nthat contains other information about the thumbnail.",
          "$ref": "ThumbnailDetails"
        },
        "title": {
          "description": "The video's title.\n@mutable youtube.videos.insert youtube.videos.update",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoStatistics": {
      "id": "VideoStatistics",
      "description": "Statistics about the video, such as the number of times the video was viewed\nor liked.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "commentCount": {
          "description": "The number of comments for the video.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "dislikeCount": {
          "description": "The number of users who have indicated that they disliked the video by\ngiving it a negative rating.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "favoriteCount": {
          "description": "The number of users who currently have the video marked as a favorite\nvideo.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "likeCount": {
          "description": "The number of users who have indicated that they liked the video by\ngiving it a positive rating.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "viewCount": {
          "description": "The number of times the video has been viewed.",
          "type": "string",
          "format": "uint64",
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoStatus": {
      "id": "VideoStatus",
      "description": "Basic details about a video category, such as its localized title.\nNext Id: 16",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "embeddable": {
          "description": "This value indicates if the video can be embedded on another website.\n@mutable youtube.videos.insert youtube.videos.update",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "failureReason": {
          "description": "This value explains why a video failed to upload. This property is\nonly present if the <code>uploadStatus</code> property indicates that\nthe upload failed.",
          "type": "string",
          "format": null,
          "enum": [
            "conversion",
            "invalidFile",
            "emptyFile",
            "tooSmall",
            "codec",
            "uploadAborted"
          ],
          "enumDescriptions": [
            "Unable to convert video content.",
            "Invalid file format.",
            "Empty file.",
            "File was too small.",
            "Unsupported codec.",
            "Upload wasn't finished."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "license": {
          "description": "The video's license.\n@mutable youtube.videos.insert youtube.videos.update",
          "type": "string",
          "format": null,
          "enum": [
            "youtube",
            "creativeCommon"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "madeForKids": {
          "description": null,
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "privacyStatus": {
          "description": "The video's privacy status.",
          "type": "string",
          "format": null,
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publicStatsViewable": {
          "description": "This value indicates if the extended video statistics on the watch page\ncan be viewed by everyone. Note that the view count, likes, etc will still\nbe visible if this is disabled.\n@mutable youtube.videos.insert youtube.videos.update",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "publishAt": {
          "description": "The date and time when the video is scheduled to publish. It can be set\nonly if the privacy status of the video is private. The value is specified\nin <a href=\"//www.w3.org/TR/NOTE-datetime\">ISO 8601</a>\nformat.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "rejectionReason": {
          "description": "This value explains why YouTube rejected an uploaded video. This\nproperty is only present if the <code>uploadStatus</code> property\nindicates that the upload was rejected.",
          "type": "string",
          "format": null,
          "enum": [
            "copyright",
            "inappropriate",
            "duplicate",
            "termsOfUse",
            "uploaderAccountSuspended",
            "length",
            "claim",
            "uploaderAccountClosed",
            "trademark",
            "legal"
          ],
          "enumDescriptions": [
            "Copyright infringement.",
            "Inappropriate video content.",
            "Duplicate upload in the same channel.",
            "Terms of use violation.",
            "Uploader account was suspended.",
            "Video duration was too long.",
            "Blocked by content owner.",
            "Uploader closed his/her account.",
            "Trademark infringement.",
            "An unspecified legal reason."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "selfDeclaredMadeForKids": {
          "description": null,
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "uploadStatus": {
          "description": "The status of the uploaded video.",
          "type": "string",
          "format": null,
          "enum": [
            "uploaded",
            "processed",
            "failed",
            "rejected",
            "deleted"
          ],
          "enumDescriptions": [
            "Video has been uploaded but not processed yet.",
            "Video has been successfully processed.",
            "Processing has failed. See FailureReason.",
            "Video has been rejected. See RejectionReason.",
            "Video has been deleted."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoSuggestions": {
      "id": "VideoSuggestions",
      "description": "Specifies suggestions on how to improve video content,\nincluding encoding hints, tag suggestions, and editor suggestions.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "editorSuggestions": {
          "description": "A list of video editing operations that might improve the video quality\nor playback experience of the uploaded video.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [
            "Picture brightness levels seem off and could be corrected.",
            "The video appears shaky and could be stabilized.",
            "Margins (mattes) detected around the picture could be cropped.",
            "The audio track appears silent and could be swapped with a\nbetter quality one."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [
              "videoAutoLevels",
              "videoStabilize",
              "videoCrop",
              "audioQuietAudioSwap"
            ],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "processingErrors": {
          "description": "A list of errors that will prevent YouTube from successfully processing\nthe uploaded video video. These errors indicate that, regardless of the\nvideo's current <a href=\"#processingProgress.processingStatus\">processing\nstatus</a>, eventually, that status will almost certainly be\n<code>failed</code>.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [
            "File contains audio only (e.g., an MP3 file).",
            "Image file (e.g., a JPEG image).",
            "Movie project file (e.g., Microsoft Windows Movie Maker project).",
            "Other non-video file.",
            "Document or text file (e.g., MS Word document).",
            "An archive file (e.g., a ZIP archive).",
            "Unsupported spatial audio layout type."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [
              "audioFile",
              "imageFile",
              "projectFile",
              "notAVideoFile",
              "docFile",
              "archiveFile",
              "unsupportedSpatialAudioLayout"
            ],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "processingHints": {
          "description": "A list of suggestions that may improve YouTube's ability to process the\nvideo.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [
            "The MP4 file is not streamable, this will slow down the processing.\n MOOV atom was not found at the beginning of the file.",
            "Probably a better quality version of the video exists.\n The video has wide screen aspect ratio, but is not an HD video.",
            "Uploaded video is spherical video.",
            "Uploaded video has spatial audio.",
            "Uploaded video is VR video.",
            "Uploaded video is HDR video."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [
              "nonStreamableMov",
              "sendBestQualityVideo",
              "sphericalVideo",
              "spatialAudio",
              "vrVideo",
              "hdrVideo"
            ],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "processingWarnings": {
          "description": "A list of reasons why YouTube may have difficulty transcoding the\nuploaded video or that might result in an erroneous transcoding.\nThese warnings are generated before YouTube actually processes the\nuploaded video file. In addition, they identify issues that are unlikely\nto cause the video processing to fail but that might cause problems\nsuch as sync issues, video artifacts, or a missing audio track.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [
            "Unrecognized file format, transcoding is likely to fail.",
            "Unrecognized video codec, transcoding is likely to fail.",
            "Unrecognized audio codec, transcoding is likely to fail.",
            "Conflicting container and stream resolutions.",
            "Edit lists are not currently supported.",
            "Video codec that is known to cause problems was used.",
            "Audio codec that is known to cause problems was used.",
            "Unsupported VR video stereo mode.",
            "Unsupported spherical video projection type.",
            "Unsupported HDR pixel format.",
            "Unspecified HDR color metadata.",
            "Problematic HDR lookup table attached."
          ],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [
              "unknownContainer",
              "unknownVideoCodec",
              "unknownAudioCodec",
              "inconsistentResolution",
              "hasEditlist",
              "problematicVideoCodec",
              "problematicAudioCodec",
              "unsupportedVrStereoMode",
              "unsupportedSphericalProjectionType",
              "unsupportedHdrPixelFormat",
              "unsupportedHdrColorMetadata",
              "problematicHdrLookupTable"
            ],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "tagSuggestions": {
          "description": "A list of keyword tags that could be added to the video's metadata to\nincrease the likelihood that users will locate your video when searching\nor browsing on YouTube.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "VideoSuggestionsTagSuggestion"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoSuggestionsTagSuggestion": {
      "id": "VideoSuggestionsTagSuggestion",
      "description": "A single tag suggestion with it's relevance information.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "categoryRestricts": {
          "description": "A set of video categories for which the tag is relevant. You can use this\ninformation to display appropriate tag suggestions based on the video\ncategory that the video uploader associates with the video. By default,\ntag suggestions are relevant for all categories if there are no restricts\ndefined for the keyword.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "tag": {
          "description": "The keyword tag suggested for the video.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "VideoTopicDetails": {
      "id": "VideoTopicDetails",
      "description": "Freebase topic information related to the video.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "relevantTopicIds": {
          "description": "Similar to topic_id, except that these topics are merely relevant to the\nvideo. These are topics that may be mentioned in, or appear in the video.\nYou can retrieve information about each topic using <a\nhref=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API</a>.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "topicCategories": {
          "description": "A list of Wikipedia URLs that provide a high-level description of the\nvideo's content.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "topicIds": {
          "description": "A list of Freebase topic IDs that are centrally associated with the video.\nThese are topics that are centrally featured in the video, and it can be\nsaid that the video is mainly about each of these. You can retrieve\ninformation about each topic using the < a\nhref=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API</a>.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "WatchSettings": {
      "id": "WatchSettings",
      "description": "Branding properties for the watch. All deprecated.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "backgroundColor": {
          "description": "The text color for the video watch page's branded area.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "featuredPlaylistId": {
          "description": "An ID that uniquely identifies a playlist that displays next to the video\nplayer.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "textColor": {
          "description": "The background color for the video watch page's branded area.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    }
  },
  "resources": {
    "activities": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.activities.list",
          "path": "youtube/v3/activities",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "channelId": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "home": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mine": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>activity</code> resource\nproperties that the API response will include.<br><br>If the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in an <code>activity</code>\nresource, the <code>snippet</code> property contains other properties that\nidentify the type of activity, a display title for the activity, and so\nforth. If you set <code><strong>part=snippet</strong></code>, the API\nresponse will also contain all of those nested properties.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "publishedAfter": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": "google-datetime",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "publishedBefore": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": "google-datetime",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "regionCode": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "ActivityListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "captions": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.captions.delete",
          "path": "youtube/v3/captions",
          "httpMethod": "DELETE",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOf": {
              "description": "ID of the Google+ Page for the channel that the request is be on behalf of",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "download": {
          "id": "youtube.captions.download",
          "path": "youtube/v3/captions/{id}",
          "httpMethod": "GET",
          "description": "Downloads a caption track.",
          "parameters": {
            "id": {
              "description": "The ID of the caption track to download, required for One Platform.",
              "default": null,
              "location": "path",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOf": {
              "description": "ID of the Google+ Page for the channel that the request is be on behalf of",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "tfmt": {
              "description": "Convert the captions into this format. Supported options are\nsbv, srt, and vtt.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "tlang": {
              "description": "tlang is the language code; machine translate the captions into\nthis language.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": true,
          "useMediaDownloadService": true,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.captions.insert",
          "path": "youtube/v3/captions",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "onBehalfOf": {
              "description": "ID of the Google+ Page for the channel that the request is be on behalf of",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>caption</code> resource parts that the API response will include. Set\nthe parameter value to <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "sync": {
              "description": "Extra parameter to allow automatically syncing the uploaded\ncaption/transcript with the audio.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Caption"
          },
          "response": {
            "$ref": "Caption"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": true,
          "mediaUpload": {
            "accept": [
              "text/xml",
              "application/octet-stream",
              "*/*"
            ],
            "maxSize": "104857600",
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/captions"
              },
              "resumable": null
            }
          }
        },
        "list": {
          "id": "youtube.captions.list",
          "path": "youtube/v3/captions",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "id": {
              "description": "Returns the captions with the given IDs for Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "onBehalfOf": {
              "description": "ID of the Google+ Page for the channel that the request is on behalf of.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>caption</code> resource parts\nthat the API response will include. The <code>part</code> names that you\ncan include in the parameter value are <code>id</code> and\n<code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "videoId": {
              "description": "Returns the captions for the specified video.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "videoId",
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "CaptionListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.captions.update",
          "path": "youtube/v3/captions",
          "httpMethod": "PUT",
          "description": "Updates an existing resource.",
          "parameters": {
            "onBehalfOf": {
              "description": "ID of the Google+ Page for the channel that the request is on behalf of.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>caption</code> resource parts\nthat the API response will include. The <code>part</code> names that you\ncan include in the parameter value are <code>id</code> and\n<code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "sync": {
              "description": "Extra parameter to allow automatically syncing the uploaded\ncaption/transcript with the audio.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Caption"
          },
          "response": {
            "$ref": "Caption"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": true,
          "mediaUpload": {
            "accept": [
              "text/xml",
              "application/octet-stream",
              "*/*"
            ],
            "maxSize": "104857600",
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/captions"
              },
              "resumable": null
            }
          }
        }
      }
    },
    "channelBanners": {
      "resources": {},
      "methods": {
        "insert": {
          "id": "youtube.channelBanners.insert",
          "path": "youtube/v3/channelBanners/insert",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "channelId": {
              "description": "Unused, channel_id is currently derived from the security context of the\nrequestor.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [],
          "request": {
            "$ref": "ChannelBannerResource"
          },
          "response": {
            "$ref": "ChannelBannerResource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.upload"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": true,
          "mediaUpload": {
            "accept": [
              "image/jpeg",
              "image/png",
              "application/octet-stream"
            ],
            "maxSize": "6291456",
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/channelBanners/insert"
              },
              "resumable": null
            }
          }
        }
      }
    },
    "channelSections": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.channelSections.delete",
          "path": "youtube/v3/channelSections",
          "httpMethod": "DELETE",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.channelSections.insert",
          "path": "youtube/v3/channelSections",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br/><br/>The <code>part</code> names that you can include in the\nparameter value are <code>snippet</code> and <code>contentDetails</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "ChannelSection"
          },
          "response": {
            "$ref": "ChannelSection"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.channelSections.list",
          "path": "youtube/v3/channelSections",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "channelId": {
              "description": "Return the ChannelSections owned by the specified channel ID.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "hl": {
              "description": "Return content in specified language",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Return the ChannelSections with the given IDs for Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "mine": {
              "description": "Return the ChannelSections owned by the authenticated user.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>channelSection</code> resource\nproperties that the API response will include. The <code>part</code> names\nthat you can include in the parameter value are <code>id</code>,\n<code>snippet</code>, and <code>contentDetails</code>.<br><br>If the\nparameter identifies a property that contains child properties, the child\nproperties will be included in the response. For example, in a\n<code>channelSection</code> resource, the <code>snippet</code> property\ncontains other properties, such as a display title for the channelSection.\nIf you set <code><strong>part=snippet</strong></code>, the API response\nwill also contain all of those nested properties.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "ChannelSectionListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.channelSections.update",
          "path": "youtube/v3/channelSections",
          "httpMethod": "PUT",
          "description": "Updates an existing resource.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br/><br/>The <code>part</code> names that you can include in the\nparameter value are <code>snippet</code> and <code>contentDetails</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "ChannelSection"
          },
          "response": {
            "$ref": "ChannelSection"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "channels": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.channels.list",
          "path": "youtube/v3/channels",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "categoryId": {
              "description": "Return the channels within the specified guide category ID.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "forUsername": {
              "description": "Return the channel associated with a YouTube username.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "hl": {
              "description": "Stands for \"host language\". Specifies the localization language of the\nmetadata to be filled into snippet.localized. The field is filled with the\ndefault metadata if there is no localization in the specified language.\nThe parameter value must be a language code included in the list returned\nby the i18nLanguages.list method (e.g. en_US, es_MX).",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Return the channels with the specified IDs.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "managedByMe": {
              "description": "Return the channels managed by the authenticated user.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mine": {
              "description": "Return the ids of channels owned by the authenticated user.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mySubscribers": {
              "description": "Return the channels subscribed to the authenticated user",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>channel</code> resource\nproperties that the API response will include.<br><br>If the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in a <code>channel</code>\nresource, the <code>contentDetails</code> property contains other\nproperties, such as the <code>uploads</code> properties. As such, if you\nset <code><strong>part=contentDetails</strong></code>, the API response\nwill also contain all of those nested properties.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "ChannelListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner",
            "https://www.googleapis.com/auth/youtubepartner-channel-audit"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.channels.update",
          "path": "youtube/v3/channels",
          "httpMethod": "PUT",
          "description": "Updates an existing resource.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "The <code><strong>onBehalfOfContentOwner</strong></code> parameter\nindicates that the authenticated user is acting on behalf of the content\nowner specified in the parameter value. This parameter is intended for\nYouTube content partners that own and manage many different YouTube\nchannels. It allows content owners to authenticate once and get access to\nall their video and channel data, without having to provide authentication\ncredentials for each individual channel. The actual CMS account that the\nuser authenticates with needs to be linked to the specified YouTube content\nowner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br/><br/>The API currently only allows the parameter value to be\nset to either <code>brandingSettings</code> or\n<code>invideoPromotion</code>. (You cannot update both of those parts with\na single request.)<br/><br/>Note that this method overrides the existing\nvalues for all of the mutable properties that are contained in any parts\nthat the parameter value specifies.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Channel"
          },
          "response": {
            "$ref": "Channel"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "commentThreads": {
      "resources": {},
      "methods": {
        "insert": {
          "id": "youtube.commentThreads.insert",
          "path": "youtube/v3/commentThreads",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter identifies the properties\nthat the API response will include. Set the parameter value to\n<code>snippet</code>. The <code>snippet</code> part has a quota cost of 2\nunits.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "CommentThread"
          },
          "response": {
            "$ref": "CommentThread"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.commentThreads.list",
          "path": "youtube/v3/commentThreads",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "allThreadsRelatedToChannelId": {
              "description": "Returns the comment threads of all videos of the channel and the\nchannel comments as well.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "channelId": {
              "description": "Returns the comment threads for all the channel comments (ie does not\ninclude comments left on videos).",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Returns the comment threads with the given IDs for Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "20",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "moderationStatus": {
              "description": "Limits the returned comment threads to those with the specified\nmoderation status. Not compatible with the 'id' filter.\nValid values: published, heldForReview, likelySpam.",
              "default": "published",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "published",
                "heldForReview",
                "likelySpam",
                "rejected"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "order": {
              "description": null,
              "default": "time",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "orderUnspecified",
                "time",
                "relevance"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>commentThread</code> resource\nproperties that the API response will include.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "searchTerms": {
              "description": "Limits the returned comment threads to those matching the specified\nkey words. Not compatible with the 'id' filter.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "textFormat": {
              "description": "The requested text format for the returned comments.",
              "default": "html",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "textFormatUnspecified",
                "html",
                "plainText"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoId": {
              "description": "Returns the comment threads of the specified video.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "CommentThreadListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.commentThreads.update",
          "path": "youtube/v3/commentThreads",
          "httpMethod": "PUT",
          "description": "Updates an existing resource.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of <code>commentThread</code> resource properties that\nthe API response will include. You must at least include the\n<code>snippet</code> part in the parameter value since that part contains\nall of the properties that the API request can update.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "CommentThread"
          },
          "response": {
            "$ref": "CommentThread"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "comments": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.comments.delete",
          "path": "youtube/v3/comments",
          "httpMethod": "DELETE",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.comments.insert",
          "path": "youtube/v3/comments",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter identifies the properties\nthat the API response will include. Set the parameter value to\n<code>snippet</code>. The <code>snippet</code> part has a quota cost of 2\nunits.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Comment"
          },
          "response": {
            "$ref": "Comment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.comments.list",
          "path": "youtube/v3/comments",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "id": {
              "description": "Returns the comments with the given IDs for One Platform.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "20",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "parentId": {
              "description": "Returns replies to the specified comment.\nNote, currently YouTube features only one level of replies (ie replies\nto top level comments). However replies to replies may be supported in\nthe future.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>comment</code> resource\nproperties that the API response will include.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "textFormat": {
              "description": "The requested text format for the returned comments.",
              "default": "html",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "textFormatUnspecified",
                "html",
                "plainText"
              ],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "CommentListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "markAsSpam": {
          "id": "youtube.comments.markAsSpam",
          "path": "youtube/v3/comments/markAsSpam",
          "httpMethod": "POST",
          "description": "Expresses the caller's opinion that one or more comments should be flagged\nas spam.",
          "parameters": {
            "id": {
              "description": "Flags the comments with the given IDs as spam in the caller's opinion.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "setModerationStatus": {
          "id": "youtube.comments.setModerationStatus",
          "path": "youtube/v3/comments/setModerationStatus",
          "httpMethod": "POST",
          "description": "Sets the moderation status of one or more comments.",
          "parameters": {
            "banAuthor": {
              "description": "If set to true the author of the comment gets added to the ban list.\nThis means all future comments of the author will autmomatically be\nrejected.\nOnly valid in combination with STATUS_REJECTED.",
              "default": "false",
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Modifies the moderation status of the comments with the given IDs",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "moderationStatus": {
              "description": "Specifies the requested moderation status. Note, comments can be in\nstatuses, which are not available through this call. For example, this\ncall does not allow to mark a comment as 'likely spam'.\nValid values: MODERATION_STATUS_PUBLISHED,\nMODERATION_STATUS_HELD_FOR_REVIEW, MODERATION_STATUS_REJECTED.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "published",
                "heldForReview",
                "likelySpam",
                "rejected"
              ],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id",
            "moderationStatus"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.comments.update",
          "path": "youtube/v3/comments",
          "httpMethod": "PUT",
          "description": "Updates an existing resource.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter identifies the properties\nthat the API response will include. You must at least include the\n<code>snippet</code> part in the parameter value since that part contains\nall of the properties that the API request can update.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Comment"
          },
          "response": {
            "$ref": "Comment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "guideCategories": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.guideCategories.list",
          "path": "youtube/v3/guideCategories",
          "httpMethod": "GET",
          "description": "Retrieves a list of guide categories.",
          "parameters": {
            "hl": {
              "description": null,
              "default": "en-US",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Return the guide categories with the given IDs.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>guideCategory</code> resource properties that the API response will\ninclude. Set the parameter value to <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "regionCode": {
              "description": "Return all categories in the given region code.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "GuideCategoryListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "i18nLanguages": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.i18nLanguages.list",
          "path": "youtube/v3/i18nLanguages",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "hl": {
              "description": null,
              "default": "en_US",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>i18nLanguage</code> resource properties that the API response will\ninclude. Set the parameter value to <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "I18nLanguageListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "i18nRegions": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.i18nRegions.list",
          "path": "youtube/v3/i18nRegions",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "hl": {
              "description": null,
              "default": "en_US",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>i18nRegion</code> resource properties that the API response will\ninclude. Set the parameter value to <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "I18nRegionListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "liveBroadcasts": {
      "resources": {},
      "methods": {
        "bind": {
          "id": "youtube.liveBroadcasts.bind",
          "path": "youtube/v3/liveBroadcasts/bind",
          "httpMethod": "POST",
          "description": "Bind a broadcast to a stream.",
          "parameters": {
            "id": {
              "description": "Broadcast to bind to the stream",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>liveBroadcast</code> resource\nproperties that the API response will include. The <code>part</code> names\nthat you can include in the parameter value are <code>id</code>,\n<code>snippet</code>, <code>contentDetails</code>, and <code>status</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "streamId": {
              "description": "Stream to bind, if not set unbind the current one.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id",
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "LiveBroadcast"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "control": {
          "id": "youtube.liveBroadcasts.control",
          "path": "youtube/v3/liveBroadcasts/control",
          "httpMethod": "POST",
          "description": "Slate and recording control of the live broadcast.\nSupport actions: slate on/off, recording start/stop/pause/resume.\nDesign doc: goto/yt-api-liveBroadcast-control",
          "parameters": {
            "displaySlate": {
              "description": "Whether display or hide slate.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Broadcast to operate.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "offsetTimeMs": {
              "description": "The exact time when the actions (e.g. slate on) are executed.\nIt is an offset from the first frame of the monitor stream.\nIf not set, it means \"now\" or ASAP.\nThis field should not be set if the monitor stream is disabled,\notherwise an error will be returned.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": "uint64",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>liveBroadcast</code> resource\nproperties that the API response will include. The <code>part</code> names\nthat you can include in the parameter value are <code>id</code>,\n<code>snippet</code>, <code>contentDetails</code>, and <code>status</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "walltime": {
              "description": "The wall clock time at which the action should be executed.\nOnly one of offset_time_ms and walltime may be set at a time.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": "google-datetime",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id",
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "LiveBroadcast"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "delete": {
          "id": "youtube.liveBroadcasts.delete",
          "path": "youtube/v3/liveBroadcasts",
          "httpMethod": "DELETE",
          "description": "Delete a given broadcast.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.liveBroadcasts.insert",
          "path": "youtube/v3/liveBroadcasts",
          "httpMethod": "POST",
          "description": "Inserts a new stream for the authenticated user.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br><br>The <code>part</code> properties that you can include in\nthe parameter value are <code>id</code>, <code>snippet</code>,\n<code>contentDetails</code>, and <code>status</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "LiveBroadcast"
          },
          "response": {
            "$ref": "LiveBroadcast"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.liveBroadcasts.list",
          "path": "youtube/v3/liveBroadcasts",
          "httpMethod": "GET",
          "description": "Retrieve the list of broadcasts associated with the given channel.",
          "parameters": {
            "broadcastStatus": {
              "description": "Return broadcasts with a certain status, e.g. active broadcasts.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "broadcastStatusFilterUnspecified",
                "all",
                "active",
                "upcoming",
                "completed"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "broadcastType": {
              "description": "Return only broadcasts with the selected type.",
              "default": "event",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "broadcastTypeFilterUnspecified",
                "all",
                "event",
                "persistent"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Return broadcasts with the given ids from Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mine": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>liveBroadcast</code> resource\nproperties that the API response will include. The <code>part</code> names\nthat you can include in the parameter value are <code>id</code>,\n<code>snippet</code>, <code>contentDetails</code>, and <code>status</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "LiveBroadcastListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "transition": {
          "id": "youtube.liveBroadcasts.transition",
          "path": "youtube/v3/liveBroadcasts/transition",
          "httpMethod": "POST",
          "description": "Transition a broadcast to a given status.",
          "parameters": {
            "broadcastStatus": {
              "description": "The status to which the broadcast is going to transition.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "statusUnspecified",
                "testing",
                "live",
                "complete"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Broadcast to transition.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>liveBroadcast</code> resource\nproperties that the API response will include. The <code>part</code> names\nthat you can include in the parameter value are <code>id</code>,\n<code>snippet</code>, <code>contentDetails</code>, and <code>status</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "id",
            "broadcastStatus",
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "LiveBroadcast"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.liveBroadcasts.update",
          "path": "youtube/v3/liveBroadcasts",
          "httpMethod": "PUT",
          "description": "Updates an existing broadcast for the authenticated user.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br><br>The <code>part</code> properties that you can include in\nthe parameter value are <code>id</code>, <code>snippet</code>,\n<code>contentDetails</code>, and <code>status</code>.<br><br>Note that this\nmethod will override the existing values for all of the mutable properties\nthat are contained in any parts that the parameter value specifies. For\nexample, a\nbroadcast's privacy status is defined in the <code>status</code> part. As\nsuch, if your request is updating a private or unlisted broadcast, and the\nrequest's <code>part</code> parameter value includes the\n<code>status</code> part, the broadcast's privacy setting will be updated\nto whatever value the request body specifies. If the request body does not\nspecify a value, the existing privacy setting will be removed and the\nbroadcast will revert to the default privacy setting.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "LiveBroadcast"
          },
          "response": {
            "$ref": "LiveBroadcast"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "liveChatBans": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.liveChatBans.delete",
          "path": "youtube/v3/liveChat/bans",
          "httpMethod": "DELETE",
          "description": "Deletes a chat ban.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.liveChatBans.insert",
          "path": "youtube/v3/liveChat/bans",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response returns. Set the\nparameter value to <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "LiveChatBan"
          },
          "response": {
            "$ref": "LiveChatBan"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "liveChatMessages": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.liveChatMessages.delete",
          "path": "youtube/v3/liveChat/messages",
          "httpMethod": "DELETE",
          "description": "Deletes a chat message.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.liveChatMessages.insert",
          "path": "youtube/v3/liveChat/messages",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes. It\nidentifies the properties that the write operation will set as well as the\nproperties that the API response will include. Set the parameter value to\n<code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "LiveChatMessage"
          },
          "response": {
            "$ref": "LiveChatMessage"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.liveChatMessages.list",
          "path": "youtube/v3/liveChat/messages",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "hl": {
              "description": "Specifies the localization language in which the system messages\nshould be returned.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "liveChatId": {
              "description": "The id of the live chat for which comments should be returned.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "500",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> property identify other pages that could be\nretrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>liveChatComment</code> resource parts that the API response will\ninclude. Supported values are <code>id</code> and <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "profileImageSize": {
              "description": "Specifies the size of the profile image that should be\nreturned for each user.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "liveChatId",
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "LiveChatMessageListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "liveChatModerators": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.liveChatModerators.delete",
          "path": "youtube/v3/liveChat/moderators",
          "httpMethod": "DELETE",
          "description": "Deletes a chat moderator.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.liveChatModerators.insert",
          "path": "youtube/v3/liveChat/moderators",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response returns. Set the\nparameter value to <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "LiveChatModerator"
          },
          "response": {
            "$ref": "LiveChatModerator"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.liveChatModerators.list",
          "path": "youtube/v3/liveChat/moderators",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "liveChatId": {
              "description": "The id of the live chat for which moderators should be returned.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>liveChatModerator</code> resource parts that the API response will\ninclude. Supported values are <code>id</code> and <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "liveChatId",
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "LiveChatModeratorListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "liveStreams": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.liveStreams.delete",
          "path": "youtube/v3/liveStreams",
          "httpMethod": "DELETE",
          "description": "Deletes an existing stream for the authenticated user.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.liveStreams.insert",
          "path": "youtube/v3/liveStreams",
          "httpMethod": "POST",
          "description": "Inserts a new stream for the authenticated user.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br><br>The <code>part</code> properties that you can include in\nthe parameter value are <code>id</code>, <code>snippet</code>,\n<code>cdn</code>, and <code>status</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "LiveStream"
          },
          "response": {
            "$ref": "LiveStream"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.liveStreams.list",
          "path": "youtube/v3/liveStreams",
          "httpMethod": "GET",
          "description": "Retrieve the list of streams associated with the given channel. --",
          "parameters": {
            "id": {
              "description": "Return LiveStreams with the given ids from Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mine": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>liveStream</code> resource\nproperties that the API response will include. The <code>part</code> names\nthat you can include in the parameter value are <code>id</code>,\n<code>snippet</code>, <code>cdn</code>, and <code>status</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "LiveStreamListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.liveStreams.update",
          "path": "youtube/v3/liveStreams",
          "httpMethod": "PUT",
          "description": "Updates an existing stream for the authenticated user.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br><br>The <code>part</code> properties that you can include in\nthe parameter value are <code>id</code>, <code>snippet</code>,\n<code>cdn</code>, and <code>status</code>.<br><br>Note that this method\nwill override the existing values for all of the mutable properties that\nare contained in any parts that the parameter value specifies. If the\nrequest body does not specify a value for a mutable property, the existing\nvalue for that property will be removed.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "LiveStream"
          },
          "response": {
            "$ref": "LiveStream"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "members": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.members.list",
          "path": "youtube/v3/members",
          "httpMethod": "GET",
          "description": "Retrieves a list of members that match the request criteria for a channel.",
          "parameters": {
            "filterByMemberChannelId": {
              "description": "Comma separated list of channel IDs. Only data about members that are part\nof this list will be included in the response.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "hasAccessToLevel": {
              "description": "Filter members in the results set to the ones that have access to a level.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mode": {
              "description": "Parameter that specifies which channel members to return.",
              "default": "all_current",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "listMembersModeUnknown",
                "updates",
                "all_current"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>member</code> resource parts that the API response will include. Set\nthe parameter value to <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "MemberListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.channel-memberships.creator",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "membershipsLevels": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.membershipsLevels.list",
          "path": "youtube/v3/membershipsLevels",
          "httpMethod": "GET",
          "description": "Retrieves a list of all pricing levels offered by a creator to the fans.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>membershipsLevel</code> resource parts that the API response will\ninclude. Supported values are <code>id</code> and <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "MembershipsLevelListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.channel-memberships.creator",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "playlistItems": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.playlistItems.delete",
          "path": "youtube/v3/playlistItems",
          "httpMethod": "DELETE",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.playlistItems.insert",
          "path": "youtube/v3/playlistItems",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will include.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "PlaylistItem"
          },
          "response": {
            "$ref": "PlaylistItem"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.playlistItems.list",
          "path": "youtube/v3/playlistItems",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>playlistItem</code> resource\nproperties that the API response will include.<br><br>If the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in a\n<code>playlistItem</code> resource, the <code>snippet</code> property\ncontains numerous fields, including the <code>title</code>,\n<code>description</code>, <code>position</code>, and\n<code>resourceId</code> properties. As such, if you set\n<code><strong>part=snippet</strong></code>, the API response will contain\nall of those properties.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "playlistId": {
              "description": "Return the playlist items within the given playlist.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoId": {
              "description": "Return the playlist items associated with the given video ID.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "PlaylistItemListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.playlistItems.update",
          "path": "youtube/v3/playlistItems",
          "httpMethod": "PUT",
          "description": "Updates an existing resource.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br/><br/>Note that this method will override the existing values\nfor all of the mutable properties that are contained in any parts that the\nparameter value specifies. For example, a playlist item can specify a start\ntime and end time, which identify the times portion of the video that\nshould play when users watch the video in the playlist. If your request is\nupdating a playlist item that sets these values, and the\nrequest's <code>part</code> parameter value includes the\n<code>contentDetails</code> part, the playlist item's start and end times\nwill be updated to whatever value the request body specifies. If the\nrequest body does not specify values, the existing start and end times will\nbe removed and replaced with the default settings.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "PlaylistItem"
          },
          "response": {
            "$ref": "PlaylistItem"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "playlists": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.playlists.delete",
          "path": "youtube/v3/playlists",
          "httpMethod": "DELETE",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.playlists.insert",
          "path": "youtube/v3/playlists",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will include.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Playlist"
          },
          "response": {
            "$ref": "Playlist"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.playlists.list",
          "path": "youtube/v3/playlists",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "channelId": {
              "description": "Return the playlists owned by the specified channel ID.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "hl": {
              "description": "Returen content in specified language",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Return the playlists with the given IDs for Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mine": {
              "description": "Return the playlists owned by the authenticated user.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>playlist</code> resource\nproperties that the API response will include.<br><br>If the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in a <code>playlist</code>\nresource, the <code>snippet</code> property contains properties like\n<code>author</code>, <code>title</code>, <code>description</code>,\n<code>tags</code>, and <code>timeCreated</code>. As such, if you set\n<code><strong>part=snippet</strong></code>, the API response will contain\nall of those properties.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "PlaylistListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.playlists.update",
          "path": "youtube/v3/playlists",
          "httpMethod": "PUT",
          "description": "Updates an existing resource.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br/><br/>Note that this method will override the existing values\nfor mutable properties that are contained in any parts that the request\nbody specifies. For example, a\nplaylist's description is contained in the <code>snippet</code> part, which\nmust be included in the request body. If the request does not specify a\nvalue for the <code>snippet.description</code> property, the playlist's\nexisting description will be deleted.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Playlist"
          },
          "response": {
            "$ref": "Playlist"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "search": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.search.list",
          "path": "youtube/v3/search",
          "httpMethod": "GET",
          "description": "Retrieves a list of search resources",
          "parameters": {
            "channelId": {
              "description": "Filter on resources belonging to this channelId.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "channelType": {
              "description": "Add a filter on the channel search.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "channelTypeUnspecified",
                "any",
                "show"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "eventType": {
              "description": "Filter on the livestream status of the videos.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "none",
                "upcoming",
                "live",
                "completed"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "forContentOwner": {
              "description": "Search owned by a content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "forDeveloper": {
              "description": "Restrict the search to only retrieve videos uploaded using the project id\nof the authenticated user.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "forMine": {
              "description": "Search for the private videos of the authenticated user.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "location": {
              "description": "Filter on location of the video",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "locationRadius": {
              "description": "Filter on distance from the location (specified above).",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "order": {
              "description": "Sort order of the results.",
              "default": "relevance",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "searchSortUnspecified",
                "date",
                "rating",
                "viewCount",
                "relevance",
                "title",
                "videoCount"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>search</code> resource properties\nthat the API response will include. Set the parameter value to\n<code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "publishedAfter": {
              "description": "Filter on resources published after this date.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": "google-datetime",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "publishedBefore": {
              "description": "Filter on resources published before this date.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": "google-datetime",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "q": {
              "description": "Textual search terms to match.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "regionCode": {
              "description": "Display the content as seen by viewers in this country.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "relatedToVideoId": {
              "description": "Search related to a resource.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "relevanceLanguage": {
              "description": "Return results relevant to this language.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "safeSearch": {
              "description": "Indicates whether the search results should include restricted content as\nwell as standard content.",
              "default": "moderate",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "safeSearchSettingUnspecified",
                "none",
                "moderate",
                "strict"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "topicId": {
              "description": "Restrict results to a particular topic.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "type": {
              "description": "Restrict results to a particular set of resource types from One Platform.",
              "default": "video,channel,playlist",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "videoCaption": {
              "description": "Filter on the presence of captions on the videos.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "videoCaptionUnspecified",
                "any",
                "closedCaption",
                "none"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoCategoryId": {
              "description": "Filter on videos in a specific category.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoDefinition": {
              "description": "Filter on the definition of the videos.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "any",
                "standard",
                "high"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoDimension": {
              "description": "Filter on 3d videos.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "any",
                "2d",
                "3d"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoDuration": {
              "description": "Filter on the duration of the videos.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "videoDurationUnspecified",
                "any",
                "short",
                "medium",
                "long"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoEmbeddable": {
              "description": "Filter on embeddable videos.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "videoEmbeddableUnspecified",
                "any",
                "true"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoLicense": {
              "description": "Filter on the license of the videos.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "any",
                "youtube",
                "creativeCommon"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoSyndicated": {
              "description": "Filter on syndicated videos.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "videoSyndicatedUnspecified",
                "any",
                "true"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoType": {
              "description": "Filter on videos of a specific type.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "videoTypeUnspecified",
                "any",
                "movie",
                "episode"
              ],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "SearchListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "sponsors": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.sponsors.list",
          "path": "youtube/v3/sponsors",
          "httpMethod": "GET",
          "description": "Retrieves a list of sponsors that match the request criteria for a\nchannel.",
          "parameters": {
            "filter": {
              "description": "Parameter that specifies which channel sponsors to return.",
              "default": "newest",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "sponsorFilterUnknown",
                "newest",
                "all"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>sponsor</code> resource parts that the API response will include.\nSupported values are <code>id</code> and <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "SponsorListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "subscriptions": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.subscriptions.delete",
          "path": "youtube/v3/subscriptions",
          "httpMethod": "DELETE",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.subscriptions.insert",
          "path": "youtube/v3/subscriptions",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will include.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Subscription"
          },
          "response": {
            "$ref": "Subscription"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "list": {
          "id": "youtube.subscriptions.list",
          "path": "youtube/v3/subscriptions",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "channelId": {
              "description": "Return the subscriptions of the given channel owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "forChannelId": {
              "description": "Return the subscriptions to the subset of these channels that the\nauthenticated user is subscribed to.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Return the subscriptions with the given IDs for Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mine": {
              "description": "Flag for returning the subscriptions of the authenticated user.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "myRecentSubscribers": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "mySubscribers": {
              "description": "Return the subscribers of the given channel owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "order": {
              "description": "The order of the returned subscriptions",
              "default": "relevance",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "subscriptionOrderUnspecified",
                "relevance",
                "unread",
                "alphabetical"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>subscription</code> resource\nproperties that the API response will include.<br><br>If the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in a\n<code>subscription</code> resource, the <code>snippet</code> property\ncontains other properties, such as a display title for the subscription. If\nyou set <code><strong>part=snippet</strong></code>, the API response will\nalso contain all of those nested properties.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "SubscriptionListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "superChatEvents": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.superChatEvents.list",
          "path": "youtube/v3/superChatEvents",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "hl": {
              "description": "Return rendered funding amounts in specified language.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>superChatEvent</code> resource parts that the API response will\ninclude. Supported values are <code>id</code> and <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "SuperChatEventListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "thumbnails": {
      "resources": {},
      "methods": {
        "set": {
          "id": "youtube.thumbnails.set",
          "path": "youtube/v3/thumbnails/set",
          "httpMethod": "POST",
          "description": "As this is not an insert in a strict sense (it supports uploading/setting\nof a thumbnail for multiple videos, which doesn't result in creation of a\nsingle resource), I use a custom verb here.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The actual\nCMS account that the user authenticates with must be linked to the\nspecified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoId": {
              "description": "Returns the Thumbnail with the given video IDs for Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "videoId"
          ],
          "request": null,
          "response": {
            "$ref": "ThumbnailSetResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.upload",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": true,
          "mediaUpload": {
            "accept": [
              "image/jpeg",
              "image/png",
              "application/octet-stream"
            ],
            "maxSize": "2097152",
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/thumbnails/set"
              },
              "resumable": null
            }
          }
        }
      }
    },
    "videoAbuseReportReasons": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.videoAbuseReportReasons.list",
          "path": "youtube/v3/videoAbuseReportReasons",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "hl": {
              "description": null,
              "default": "en_US",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>videoCategory</code> resource parts that the API response will\ninclude. Supported values are <code>id</code> and <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "VideoAbuseReportReasonListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "videoCategories": {
      "resources": {},
      "methods": {
        "list": {
          "id": "youtube.videoCategories.list",
          "path": "youtube/v3/videoCategories",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "hl": {
              "description": null,
              "default": "en_US",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Returns the video categories with the given IDs for Stubby or Apiary.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies the\n<code>videoCategory</code> resource properties that the API response will\ninclude. Set the parameter value to <code>snippet</code>.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "regionCode": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "VideoCategoryListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "videos": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "youtube.videos.delete",
          "path": "youtube/v3/videos",
          "httpMethod": "DELETE",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The actual\nCMS account that the user authenticates with must be linked to the\nspecified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "getRating": {
          "id": "youtube.videos.getRating",
          "path": "youtube/v3/videos/getRating",
          "httpMethod": "GET",
          "description": "Retrieves the ratings that the authorized user gave to a list of specified\nvideos.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id"
          ],
          "request": null,
          "response": {
            "$ref": "VideoRatingListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "insert": {
          "id": "youtube.videos.insert",
          "path": "youtube/v3/videos",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "autoLevels": {
              "description": "Should auto-levels be applied to the upload.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "notifySubscribers": {
              "description": "Notify the channel subscribers about the new video. As default, the\nnotification is enabled.",
              "default": "true",
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly <a\nhref=\"/youtube/v3/guides/authentication\">authorized request</a>.\n<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwnerChannel</strong></code> parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n<code>onBehalfOfContentOwner</code> parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies. Finally, the\nchannel that the <code>onBehalfOfContentOwnerChannel</code> parameter value\nspecifies must be linked to the content owner that the\n<code>onBehalfOfContentOwner</code> parameter specifies.<br><br>This\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br/><br/>Note that not all parts contain properties that can be\nset when inserting or updating a video. For example, the\n<code>statistics</code> object encapsulates statistics that YouTube\ncalculates for a video and does not contain values that you can set or\nmodify. If the parameter value specifies a <code>part</code> that does not\ncontain mutable values, that <code>part</code> will still be included in\nthe API response.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "stabilize": {
              "description": "Should stabilize be applied to the upload.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "boolean",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Video"
          },
          "response": {
            "$ref": "Video"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.upload",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": true,
          "mediaUpload": {
            "accept": [
              "video/*",
              "application/octet-stream"
            ],
            "maxSize": "137438953472",
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/videos"
              },
              "resumable": null
            }
          }
        },
        "list": {
          "id": "youtube.videos.list",
          "path": "youtube/v3/videos",
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "chart": {
              "description": "Return the videos that are in the specified chart.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "chartUnspecified",
                "mostPopular"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "hl": {
              "description": "Stands for \"host language\". Specifies the localization language of the\nmetadata to be filled into snippet.localized. The field is filled with the\ndefault metadata if there is no localization in the specified language.\nThe parameter value must be a language code included in the list returned\nby the i18nLanguages.list method (e.g. en_US, es_MX).",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "id": {
              "description": "Return videos with the given ids.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "locale": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxHeight": {
              "description": null,
              "default": null,
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "int32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxResults": {
              "description": "The <code><strong>maxResults</strong></code> parameter specifies the\nmaximum number of items that should be returned in the result\nset.<br><br><strong>Note:</strong> This parameter is supported for use in\nconjunction with the <code><a href=\"#myRating\">myRating</a></code> and\n<code><a href=\"#chart\">chart</a></code> parameters, but it is not supported\nfor use in conjunction with the <code><a href=\"#id\">id</a></code>\nparameter.",
              "default": "5",
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "uint32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "maxWidth": {
              "description": "Return the player with maximum height specified in",
              "default": null,
              "location": "query",
              "required": false,
              "type": "integer",
              "format": "int32",
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "myRating": {
              "description": "Return videos liked/disliked by the authenticated user.\nDoes not support RateType.RATED_TYPE_NONE.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "none",
                "like",
                "dislike"
              ],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "pageToken": {
              "description": "The <code><strong>pageToken</strong></code> parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n<code>nextPageToken</code> and <code>prevPageToken</code> properties\nidentify other pages that could be retrieved.<br><br><strong>Note:</strong>\nThis parameter is supported for use in conjunction with the <code><a\nhref=\"#myRating\">myRating</a></code> and <code><a\nhref=\"#chart\">chart</a></code> parameters, but it is not supported for use\nin conjunction with the <code><a href=\"#id\">id</a></code> parameter.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter specifies a\ncomma-separated list of one or more <code>video</code> resource properties\nthat the API response will include.<br><br>If the parameter identifies a\nproperty that contains child properties, the child properties will be\nincluded in the response. For example, in a <code>video</code> resource,\nthe <code>snippet</code> property contains the <code>channelId</code>,\n<code>title</code>, <code>description</code>, <code>tags</code>, and\n<code>categoryId</code> properties. As such, if you set\n<code><strong>part=snippet</strong></code>, the API response will contain\nall of those properties.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            },
            "regionCode": {
              "description": "Use a chart that is specific to the specified region",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "videoCategoryId": {
              "description": "Use chart that is specific to the specified video category",
              "default": "0",
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": null,
          "response": {
            "$ref": "VideoListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "rate": {
          "id": "youtube.videos.rate",
          "path": "youtube/v3/videos/rate",
          "httpMethod": "POST",
          "description": "Adds a like or dislike rating to a video or removes a rating from a video.",
          "parameters": {
            "id": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "rating": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [
                "none",
                "like",
                "dislike"
              ],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "id",
            "rating"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "reportAbuse": {
          "id": "youtube.videos.reportAbuse",
          "path": "youtube/v3/videos/reportAbuse",
          "httpMethod": "POST",
          "description": "Report abuse for a video.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [],
          "request": {
            "$ref": "VideoAbuseReport"
          },
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "update": {
          "id": "youtube.videos.update",
          "path": "youtube/v3/videos",
          "httpMethod": "PUT",
          "description": "Updates an existing resource.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The actual\nCMS account that the user authenticates with must be linked to the\nspecified YouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "part": {
              "description": "The <code><strong>part</strong></code> parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.<br/><br/>Note that this method will override the existing values\nfor all of the mutable properties that are contained in any parts that the\nparameter value specifies. For example, a\nvideo's privacy setting is contained in the <code>status</code> part. As\nsuch, if your request is updating a private video, and the request's\n<code>part</code> parameter value includes the <code>status</code> part,\nthe\nvideo's privacy setting will be updated to whatever value the request body\nspecifies. If the request body does not specify a value, the existing\nprivacy setting will be removed and the video will revert to the default\nprivacy setting.<br/><br/>In addition, not all parts contain properties\nthat can be set when inserting or updating a video. For example, the\n<code>statistics</code> object encapsulates statistics that YouTube\ncalculates for a video and does not contain values that you can set or\nmodify. If the parameter value specifies a <code>part</code> that does not\ncontain mutable values, that <code>part</code> will still be included in\nthe API response.",
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "request": {
            "$ref": "Video"
          },
          "response": {
            "$ref": "Video"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "watermarks": {
      "resources": {},
      "methods": {
        "set": {
          "id": "youtube.watermarks.set",
          "path": "youtube/v3/watermarks/set",
          "httpMethod": "POST",
          "description": "Allows upload of watermark image and setting it for a channel.",
          "parameters": {
            "channelId": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "channelId"
          ],
          "request": {
            "$ref": "InvideoBranding"
          },
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.upload",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": true,
          "mediaUpload": {
            "accept": [
              "image/jpeg",
              "image/png",
              "application/octet-stream"
            ],
            "maxSize": "10485760",
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/watermarks/set"
              },
              "resumable": null
            }
          }
        },
        "unset": {
          "id": "youtube.watermarks.unset",
          "path": "youtube/v3/watermarks/unset",
          "httpMethod": "POST",
          "description": "Allows removal of channel watermark.",
          "parameters": {
            "channelId": {
              "description": null,
              "default": null,
              "location": "query",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "onBehalfOfContentOwner": {
              "description": "<strong>Note:</strong> This parameter is intended exclusively for YouTube\ncontent partners.<br><br>The\n<code><strong>onBehalfOfContentOwner</strong></code> parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "channelId"
          ],
          "request": null,
          "response": null,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    }
  },
  "methods": {}
}