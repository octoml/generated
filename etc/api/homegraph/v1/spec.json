{
  "kind": "discovery#restDescription",
  "etag": null,
  "discoveryVersion": "v1",
  "id": "homegraph:v1",
  "name": "homegraph",
  "canonicalName": "Home Graph Service",
  "fullyEncodeReservedExpansion": true,
  "version": "v1",
  "revision": "20190906",
  "title": "HomeGraph API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "documentationLink": "https://developers.google.com/actions/smarthome/create-app#request-sync",
  "protocol": "rest",
  "baseUrl": "https://homegraph.googleapis.com/",
  "basePath": "",
  "rootUrl": "https://homegraph.googleapis.com/",
  "servicePath": "",
  "batchPath": "batch",
  "version_module": true,
  "packagePath": null,
  "labels": null,
  "features": null,
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "repeated": false
    },
    "access_token": {
      "description": "OAuth access token.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "repeated": false
    },
    "callback": {
      "description": "JSONP",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "required": false,
      "type": "boolean",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "default": null,
      "location": "query",
      "required": false,
      "type": "string",
      "format": null,
      "minimum": null,
      "maximum": null,
      "pattern": null,
      "enum": [],
      "enumDescriptions": [],
      "repeated": false
    }
  },
  "auth": null,
  "schemas": {
    "AgentDeviceId": {
      "id": "AgentDeviceId",
      "description": "Third-party partner's device ID for one device.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "id": {
          "description": "Third-party partner's device ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "AgentOtherDeviceId": {
      "id": "AgentOtherDeviceId",
      "description": "Identifies a device in the third party or first party system.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "agentId": {
          "description": "The agent's ID. Generally it is the agent's AoG project id.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "deviceId": {
          "description": "Device ID defined by the agent. The device_id must be unique.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Device": {
      "id": "Device",
      "description": "Third-party partner's device definition.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "attributes": {
          "description": "Attributes for the traits supported by the device.",
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          },
          "items": null
        },
        "customData": {
          "description": "Custom JSON data provided by the manufacturer and attached to QUERY and\nEXECUTE requests in AoG.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "deviceInfo": {
          "description": "Device manufacturer, model, hardware version, and software version.",
          "$ref": "DeviceInfo"
        },
        "id": {
          "description": "Third-party partner's device ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "name": {
          "description": "Name of the device given by the third party. This includes names given to\nthe device via third party device manufacturer's app, model names for the\ndevice, etc.",
          "$ref": "DeviceNames"
        },
        "otherDeviceIds": {
          "description": "IDs of other devices associated with this device. This is used to\nrepresent a device group (e.g. bonded zone) or \"facets\" synced\nthrough different flows (e.g. Google Nest Hub Max with a Nest Camera).\n\nThis may also be used to pass in alternate IDs used to identify a cloud\nsynced device for local execution (i.e. local verification). If used for\nlocal verification, this field is synced from the cloud.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "AgentOtherDeviceId"
          }
        },
        "roomHint": {
          "description": "If the third-party partner's cloud configuration includes placing devices\nin rooms, the name of the room can be provided here.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "structureHint": {
          "description": "As in roomHint, for structures that users set up in the partner's system.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "traits": {
          "description": "Traits supported by the device.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "type": {
          "description": "Hardware type of the device (e.g. light, outlet, etc).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "willReportState": {
          "description": "Indicates whether the state of this device is being reported to Google\nthrough ReportStateAndNotification call.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "DeviceInfo": {
      "id": "DeviceInfo",
      "description": "Device information.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "hwVersion": {
          "description": "Device hardware version.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "manufacturer": {
          "description": "Device manufacturer.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "model": {
          "description": "Device model.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "swVersion": {
          "description": "Device software version.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "DeviceNames": {
      "id": "DeviceNames",
      "description": "Different names for the device.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "defaultNames": {
          "description": "List of names provided by the partner rather than the user, often\nmanufacturer names, SKUs, etc.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        },
        "name": {
          "description": "Primary name of the device, generally provided by the user.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "nicknames": {
          "description": "Additional names provided by the user for the device.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "type": "string",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {},
      "additionalProperties": null,
      "items": null
    },
    "QueryRequest": {
      "id": "QueryRequest",
      "description": "Request type for the\n[`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call. This should\nbe the same format as the Actions on Google `action.devices.QUERY`\n[request](/actions/smarthome/create-app#actiondevicesquery) with the\nexception of the extra `agent_user_id` and no `intent` and `customData`\nfields.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "agentUserId": {
          "description": "Required. Third-party user ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "inputs": {
          "description": "Required. Inputs containing third-party partner's device IDs for which to\nget the device states.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "QueryRequestInput"
          }
        },
        "requestId": {
          "description": "Request ID used for debugging.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "QueryRequestInput": {
      "id": "QueryRequestInput",
      "description": "Device ID inputs to QueryRequest.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "payload": {
          "description": "Payload containing third-party partner's device IDs.",
          "$ref": "QueryRequestPayload"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "QueryRequestPayload": {
      "id": "QueryRequestPayload",
      "description": "Payload containing device IDs.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "devices": {
          "description": "Third-party partner's device IDs for which to get the device states.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "AgentDeviceId"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "QueryResponse": {
      "id": "QueryResponse",
      "description": "Response type for the\n[`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call. This should\nfollow the same format as the Actions on Google `action.devices.QUERY`\n[response](/actions/smarthome/create-app#actiondevicesquery).\n# Example\n\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"payload\": {\n    \"devices\": {\n      \"123\": {\n        \"on\": true,\n        \"online\": true\n      },\n      \"456\": {\n        \"on\": true,\n        \"online\": true,\n        \"brightness\": 80,\n        \"color\": {\n          \"name\": \"cerulean\",\n          \"spectrumRGB\": 31655\n        }\n      }\n    }\n  }\n}\n```",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "payload": {
          "description": "Device states for the devices given in the request.",
          "$ref": "QueryResponsePayload"
        },
        "requestId": {
          "description": "Request ID used for debugging. Copied from the request.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "QueryResponsePayload": {
      "id": "QueryResponsePayload",
      "description": "Payload containing device states information.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "devices": {
          "description": "States of the devices. Map of third-party device ID to struct of device\nstates.",
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": {
            "description": null,
            "type": "object",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": {
              "description": "Properties of the object.",
              "type": "any",
              "format": null,
              "enum": [],
              "enumDescriptions": [],
              "properties": {},
              "additionalProperties": null,
              "items": null
            },
            "items": null
          },
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ReportStateAndNotificationDevice": {
      "id": "ReportStateAndNotificationDevice",
      "description": "The states and notifications specific to a device.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "notifications": {
          "description": "Notifications metadata for devices.",
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          },
          "items": null
        },
        "states": {
          "description": "States of devices to update.",
          "type": "object",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any",
            "format": null,
            "enum": [],
            "enumDescriptions": [],
            "properties": {},
            "additionalProperties": null,
            "items": null
          },
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ReportStateAndNotificationRequest": {
      "id": "ReportStateAndNotificationRequest",
      "description": "Request type for the\n[`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\ncall. It may include States, Notifications, or both. This request uses\nglobally unique flattened state names instead of namespaces based on traits\nto align with the existing QUERY and EXECUTE APIs implemented by 90+ Smart\nHome partners. States and notifications are defined per `device_id` (for example, \"123\"\nand \"456\" in the following example). # Example\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"agentUserId\": \"1234\",\n  \"payload\": {\n    \"devices\": {\n      \"states\": {\n        \"123\": {\n          \"on\": true\n        },\n        \"456\": {\n          \"on\": true,\n          \"brightness\": 10\n        }\n      },\n    }\n  }\n}\n```",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "agentUserId": {
          "description": "Required. Third-party user ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "eventId": {
          "description": "Unique identifier per event (for example, a doorbell press).",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "followUpToken": {
          "description": "Token to maintain state in the follow up notification response.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "payload": {
          "description": "State of devices to update and notification metadata for devices. For\nexample, if a user turns a light on manually, a state update should be\nsent so that the information is always the current status of the device.\nNotifications are independent from the state and its piece of the payload\nshould contain everything necessary to notify the user. Although it may be\nrelated to a state change, it does not need to be. For example, if a\ndevice can turn on/off and change temperature, the states reported would\ninclude both \"on\" and \"70 degrees\" but the 3p may choose not to send any\nnotification for that, or to only say that the \"the room is heating up\",\nkeeping state and notification independent.",
          "$ref": "StateAndNotificationPayload"
        },
        "requestId": {
          "description": "Request ID used for debugging.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "ReportStateAndNotificationResponse": {
      "id": "ReportStateAndNotificationResponse",
      "description": "Response type for the\n[`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\ncall.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "requestId": {
          "description": "Request ID copied from ReportStateAndNotificationRequest.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "RequestSyncDevicesRequest": {
      "id": "RequestSyncDevicesRequest",
      "description": "Request type for the\n[`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\ncall.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "agentUserId": {
          "description": "Required. Third-party user ID issued by agent's third-party identity\nprovider.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "async": {
          "description": "Optional. If set, the request will be added to a queue and a response will\nbe returned immediately. The queue allows for de-duplication of\nsimultaneous requests.",
          "type": "boolean",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "RequestSyncDevicesResponse": {
      "id": "RequestSyncDevicesResponse",
      "description": "Response type for the\n[`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\ncall. Intentionally empty upon success. An HTTP response code is returned\nwith more details upon failure.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {},
      "additionalProperties": null,
      "items": null
    },
    "StateAndNotificationPayload": {
      "id": "StateAndNotificationPayload",
      "description": "Payload containing the state and notification information for devices.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "devices": {
          "description": "The devices for updating state and sending notifications.",
          "$ref": "ReportStateAndNotificationDevice"
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SyncRequest": {
      "id": "SyncRequest",
      "description": "Request type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync)\ncall. This should follow the same format as the Actions on Google\n`action.devices.SYNC`\n[request](/actions/smarthome/create-app#actiondevicessync) with the exception\nof the extra `agent_user_id` and no `intent` field.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "agentUserId": {
          "description": "Required. Third-party user ID.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "requestId": {
          "description": "Request ID used for debugging.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SyncResponse": {
      "id": "SyncResponse",
      "description": "Response type for the\n[`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call. This should\nfollow the same format as the Actions on Google `action.devices.SYNC`\n[response](/actions/smarthome/create-app#actiondevicessync).\n# Example\n\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"payload\": {\n    \"agentUserId\": \"1836.15267389\",\n    \"devices\": [{\n      \"id\": \"123\",\n      \"type\": \"action.devices.types.OUTLET\",\n      \"traits\": [\n        \"action.devices.traits.OnOff\"\n      ],\n      \"name\": {\n        \"defaultNames\": [\"My Outlet 1234\"],\n        \"name\": \"Night light\",\n        \"nicknames\": [\"wall plug\"]\n      },\n      \"willReportState\": false,\n      \"deviceInfo\": {\n        \"manufacturer\": \"lights-out-inc\",\n        \"model\": \"hs1234\",\n        \"hwVersion\": \"3.2\",\n        \"swVersion\": \"11.4\"\n      },\n      \"customData\": {\n        \"fooValue\": 74,\n        \"barValue\": true,\n        \"bazValue\": \"foo\"\n      }\n    }]\n  }\n}\n```",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "payload": {
          "description": "Devices associated with the third-party user.",
          "$ref": "SyncResponsePayload"
        },
        "requestId": {
          "description": "Request ID used for debugging. Copied from the request.",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        }
      },
      "additionalProperties": null,
      "items": null
    },
    "SyncResponsePayload": {
      "id": "SyncResponsePayload",
      "description": "Payload containing device information.",
      "type": "object",
      "format": null,
      "enum": [],
      "enumDescriptions": [],
      "properties": {
        "agentUserId": {
          "description": "Third-party user ID",
          "type": "string",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": null
        },
        "devices": {
          "description": "Devices associated with the third-party user.",
          "type": "array",
          "format": null,
          "enum": [],
          "enumDescriptions": [],
          "properties": {},
          "additionalProperties": null,
          "items": {
            "$ref": "Device"
          }
        }
      },
      "additionalProperties": null,
      "items": null
    }
  },
  "resources": {
    "agentUsers": {
      "resources": {},
      "methods": {
        "delete": {
          "id": "homegraph.agentUsers.delete",
          "path": "v1/{+agentUserId}",
          "httpMethod": "DELETE",
          "description": "Unlinks an agent user from Google. As a result, all data related to this\nuser will be deleted.\n\nHere is how the agent user is created in Google:\n\n1.  When a user opens their Google Home App, they can begin linking a 3p\n    partner.\n2.  User is guided through the OAuth process.\n3.  After entering the 3p credentials, Google gets the 3p OAuth token and\n    uses it to make a Sync call to the 3p partner and gets back all of the\n    user's data, including `agent_user_id` and devices.\n4.  Google creates the agent user and stores a mapping from the\n    `agent_user_id` -> Google ID mapping. Google also\n    stores all of the user's devices under that Google ID.\n\nThe mapping from `agent_user_id` to Google ID is many to many, since one\nGoogle user can have multiple 3p accounts, and multiple Google users can\nmap to one `agent_user_id` (e.g., a husband and wife share one Nest account\nusername/password).\n\nThe third-party user's identity is passed in as `agent_user_id`.\nThe agent is identified by the JWT signed by the partner's service account.\n\nNote: Special characters (except \"/\") in `agent_user_id` must be\nURL-encoded.",
          "parameters": {
            "agentUserId": {
              "description": "Required. Third-party user ID.",
              "default": null,
              "location": "path",
              "required": true,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": "^agentUsers/.+$",
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            },
            "requestId": {
              "description": "Request ID used for debugging.",
              "default": null,
              "location": "query",
              "required": false,
              "type": "string",
              "format": null,
              "minimum": null,
              "maximum": null,
              "pattern": null,
              "enum": [],
              "enumDescriptions": [],
              "repeated": false
            }
          },
          "parameterOrder": [
            "agentUserId"
          ],
          "request": null,
          "response": {
            "$ref": "Empty"
          },
          "scopes": [],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    },
    "devices": {
      "resources": {},
      "methods": {
        "query": {
          "id": "homegraph.devices.query",
          "path": "v1/devices:query",
          "httpMethod": "POST",
          "description": "Gets the device states for the devices in QueryRequest.\nThe third-party user's identity is passed in as `agent_user_id`. The agent\nis identified by the JWT signed by the third-party partner's service\naccount.",
          "parameters": {},
          "parameterOrder": [],
          "request": {
            "$ref": "QueryRequest"
          },
          "response": {
            "$ref": "QueryResponse"
          },
          "scopes": [],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "reportStateAndNotification": {
          "id": "homegraph.devices.reportStateAndNotification",
          "path": "v1/devices:reportStateAndNotification",
          "httpMethod": "POST",
          "description": "Reports device state and optionally sends device notifications. Called by\nan agent when the device state of a third-party changes or the agent wants\nto send a notification about the device. See\n[Implement Report State](/actions/smarthome/report-state) for more\ninformation.\nThis method updates a predefined set of states for a device, which all\ndevices have according to their prescribed traits (for example, a light\nwill have the [OnOff](/actions/smarthome/traits/onoff) trait that reports\nthe state `on` as a boolean value).\nA new state may not be created and an INVALID_ARGUMENT code will be thrown\nif so. It also optionally takes in a list of Notifications that may be\ncreated, which are associated to this state change.\n\nThe third-party user's identity is passed in as `agent_user_id`.\nThe agent is identified by the JWT signed by the partner's service account.",
          "parameters": {},
          "parameterOrder": [],
          "request": {
            "$ref": "ReportStateAndNotificationRequest"
          },
          "response": {
            "$ref": "ReportStateAndNotificationResponse"
          },
          "scopes": [],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "requestSync": {
          "id": "homegraph.devices.requestSync",
          "path": "v1/devices:requestSync",
          "httpMethod": "POST",
          "description": "Requests a `SYNC` call from Google to a 3p partner's home control agent for\na user.\n\n\nThe third-party user's identity is passed in as `agent_user_id`\n(see RequestSyncDevicesRequest) and forwarded back to the agent.\nThe agent is identified by the API key or JWT signed by the partner's\nservice account.",
          "parameters": {},
          "parameterOrder": [],
          "request": {
            "$ref": "RequestSyncDevicesRequest"
          },
          "response": {
            "$ref": "RequestSyncDevicesResponse"
          },
          "scopes": [],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        },
        "sync": {
          "id": "homegraph.devices.sync",
          "path": "v1/devices:sync",
          "httpMethod": "POST",
          "description": "Gets all the devices associated with the given third-party user.\nThe third-party user's identity is passed in as `agent_user_id`. The agent\nis identified by the JWT signed by the third-party partner's service\naccount.",
          "parameters": {},
          "parameterOrder": [],
          "request": {
            "$ref": "SyncRequest"
          },
          "response": {
            "$ref": "SyncResponse"
          },
          "scopes": [],
          "supportsMediaDownload": false,
          "useMediaDownloadService": false,
          "supportsSubscription": false,
          "supportsMediaUpload": false,
          "mediaUpload": null
        }
      }
    }
  },
  "methods": {}
}